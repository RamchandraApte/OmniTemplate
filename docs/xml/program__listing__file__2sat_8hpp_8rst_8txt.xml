<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="program__listing__file__2sat_8hpp_8rst_8txt" kind="file" language="C++">
    <compoundname>program_listing_file_2sat.hpp.rst.txt</compoundname>
    <includes refid="core_8hpp" local="yes">core.hpp</includes>
    <includes refid="graph__theory_8hpp" local="yes">graph_theory.hpp</includes>
    <incdepgraph>
      <node id="13">
        <label>linear_algebra.hpp</label>
        <link refid="linear__algebra_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>graph_theory.hpp</label>
        <link refid="graph__theory_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>bits/stdc++.h</label>
      </node>
      <node id="6">
        <label>io.hpp</label>
        <link refid="io_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>experimental/source_location</label>
      </node>
      <node id="12">
        <label>dsu.hpp</label>
        <link refid="dsu_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>experimental/iterator</label>
      </node>
      <node id="1">
        <label>docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt</label>
        <link refid="program__listing__file__2sat_8hpp_8rst_8txt"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>utility.hpp</label>
        <link refid="utility_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>debug.hpp</label>
        <link refid="debug_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>modulo.hpp</label>
        <link refid="modulo_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>range.hpp</label>
        <link refid="range_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core.hpp</label>
        <link refid="core_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>operations.hpp</label>
        <link refid="operations_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>polynomial.hpp</label>
        <link refid="polynomial_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="program__listing__file__2sat_8hpp_8rst_8txt_1a53e0a4cad38a5f4916a4948adc60a689" prot="public" static="no" mutable="no">
        <type>_program_listing_file_2sat</type>
        <definition>_program_listing_file_2sat hpp</definition>
        <argsstring></argsstring>
        <name>hpp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="2" column="28" bodyfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__2sat_8hpp_8rst_8txt_1a64ce859c746f6d74f51eaadf2df1c67d" prot="public" static="no" mutable="no">
        <type>_program_listing_file_2sat &amp;</type>
        <definition>_program_listing_file_2sat &amp; cnf</definition>
        <argsstring></argsstring>
        <name>cnf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="17" column="3" bodyfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__2sat_8hpp_8rst_8txt_1a365d14a3ed0d03e5399782c42a3eda08" prot="public" static="no" mutable="no">
        <type>_program_listing_file_2sat const <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>_program_listing_file_2sat const ll n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <initializer>{
       vector&lt;vl&gt; graph(2 * n + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="17" column="16" bodyfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__2sat_8hpp_8rst_8txt_1af1d324f1aa1e5258ec7fd82e097326b3" prot="public" static="no" mutable="no">
        <type><ref refid="structgraph__theory_1_1dfs" kindref="compound">dfs</ref></type>
        <definition>topo</definition>
        <argsstring></argsstring>
        <name>topo</name>
        <initializer>{graph}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="24" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" bodystart="24" bodyend="-1" declfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" declline="25" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__2sat_8hpp_8rst_8txt_1a53f9f987327620296ef5ea5476e09d3b" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto comp</definition>
        <argsstring></argsstring>
        <name>comp</name>
        <initializer>= scc(graph)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="29" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__2sat_8hpp_8rst_8txt_1a2b092d3c4744b74d3b25951e61403906" prot="public" static="no" mutable="no">
        <type>return</type>
        <definition>return vals</definition>
        <argsstring></argsstring>
        <name>vals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="37" column="15" bodyfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="program__listing__file__2sat_8hpp_8rst_8txt_1a98b7c7df3da46f90adea67c56e9e795d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>for</definition>
        <argsstring>(const auto &amp;clause :cnf)</argsstring>
        <name>for</name>
        <param>
          <type>const auto &amp;clause :cnf</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="19" column="8" bodyfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" bodystart="19" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__2sat_8hpp_8rst_8txt_1ac0e4925bca24b7a19a9b06f3ba549dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vl</type>
        <definition>vl idx</definition>
        <argsstring>(size(graph))</argsstring>
        <name>idx</name>
        <param>
          <type>size(graph)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="26" column="11" declfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" declline="26" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__2sat_8hpp_8rst_8txt_1a17b10a387fc93863dd43d76b7fd998da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fo</definition>
        <argsstring>(i, size(topo.q))</argsstring>
        <name>fo</name>
        <param>
          <type>i</type>
        </param>
        <param>
          <type>size(topo.q)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="27" column="8" bodyfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__2sat_8hpp_8rst_8txt_1a0e359d5bbe9e996e273719e374e0a8f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; char &gt;</type>
        <definition>vector&lt;char&gt; vals</definition>
        <argsstring>(n+1, -1)</argsstring>
        <name>vals</name>
        <param>
          <type>n+</type>
          <declname>1</declname>
        </param>
        <param>
          <type>-</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="28" column="15" declfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" declline="28" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__2sat_8hpp_8rst_8txt_1ae3fe67cc0241217cd71fcdc4fdc16269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fo</definition>
        <argsstring>(i, 1, n+1)</argsstring>
        <name>fo</name>
        <param>
          <type>i</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>n+</type>
          <declname>1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="30" column="8" bodyfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__2sat_8hpp_8rst_8txt_1ae65df9939b591697fda3629f42cb8ec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_sat2</definition>
        <argsstring>()</argsstring>
        <name>test_sat2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" line="39" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt" bodystart="39" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal">..<sp/>_program_listing_file_2sat.hpp:</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">Program<sp/>Listing<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>File<sp/>2sat.hpp</highlight></codeline>
<codeline lineno="5"><highlight class="normal">=================================</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">|exhale_lsh|<sp/>:ref:`Return<sp/>to<sp/>documentation<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>file<sp/>&lt;file_2sat.hpp&gt;`<sp/>(``2sat.hpp``)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">..<sp/>|exhale_lsh|<sp/>unicode::<sp/>U+021B0<sp/>..<sp/>UPWARDS<sp/>ARROW<sp/>WITH<sp/>TIP<sp/>LEFTWARDS</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">..<sp/>code-block::<sp/>cpp</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/>#pragma<sp/>once</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>#include<sp/></highlight><highlight class="stringliteral">&quot;core.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/>#include<sp/></highlight><highlight class="stringliteral">&quot;graph_theory.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"><sp/>sat2<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/>optional&lt;vector&lt;char&gt;&gt;<sp/>sat2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;array&lt;ll,<sp/>2&gt;&gt;<sp/>&amp;cnf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;vl&gt;<sp/>graph(2<sp/>*<sp/>n<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;clause<sp/>:<sp/>cnf)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>two<sp/>implications<sp/>that<sp/>represent<sp/>the<sp/>clause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph[n<sp/>-<sp/>clause[0]].push_back(n<sp/>+<sp/>clause[1]);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph[n<sp/>-<sp/>clause[1]].push_back(n<sp/>+<sp/>clause[0]);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structgraph__theory_1_1dfs" kindref="compound">dfs</ref><sp/>topo{graph};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topo();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vl<sp/>idx(size(graph));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fo(i,<sp/>size(topo.<ref refid="structgraph__theory_1_1gsearch_1a626b133ab7e8f8fba270a9f241b9999f" kindref="member">q</ref>))<sp/>{<sp/>idx[topo.<ref refid="structgraph__theory_1_1gsearch_1a626b133ab7e8f8fba270a9f241b9999f" kindref="member">q</ref>[i]]<sp/>=<sp/>i;<sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;char&gt;<sp/>vals(n<sp/>+<sp/>1,<sp/>-1);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>scc(graph);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fo(i,<sp/>1,<sp/>n<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>idx[comp[n<sp/>+<sp/>i]],<sp/>nx<sp/>=<sp/>idx[comp[n<sp/>-<sp/>i]];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nx<sp/>==<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nullopt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals[i]<sp/>=<sp/>nx<sp/>&lt;<sp/>x;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vals;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_sat2()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret1<sp/>=<sp/>sat2({{2,<sp/>1},<sp/>{-2,<sp/>3}},<sp/>3).value();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ret1[1]<sp/>||<sp/>ret1[2]);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!ret1[2]<sp/>||<sp/>ret1[3]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret2<sp/>=<sp/>sat2({{2,<sp/>1},<sp/>{3,<sp/>2},<sp/>{-2,<sp/>-1}},<sp/>3).value();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ret2[1]<sp/>||<sp/>ret2[2]);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(ret2[2]<sp/>||<sp/>ret2[3]);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!ret2[2]<sp/>||<sp/>!ret2[1]);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret3<sp/>=<sp/>sat2({{1,<sp/>1},<sp/>{-1,<sp/>-1}},<sp/>1);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!ret3);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret4<sp/>=<sp/>sat2({{1,<sp/>2},<sp/>{3,<sp/>2},<sp/>{-1,<sp/>-1},<sp/>{-2,<sp/>-2}},<sp/>3);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!ret4);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>sat2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">sat2;</highlight></codeline>
    </programlisting>
    <location file="docs/_build/html/_sources/api/program_listing_file_2sat.hpp.rst.txt"/>
  </compounddef>
</doxygen>
