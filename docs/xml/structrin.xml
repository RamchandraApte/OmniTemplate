<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structrin" kind="struct" language="C++" prot="public">
    <compoundname>rin</compoundname>
    <includes refid="io_8hpp" local="no">io.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structrin_1ae4efd5288509cef3672521280920f24d" prot="public" static="no" mutable="no">
        <type>istream &amp;</type>
        <definition>istream &amp; rin::in</definition>
        <argsstring></argsstring>
        <name>in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d_compiled.cpp" line="321" column="10" bodyfile="d_compiled.cpp" bodystart="321" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rin::rin</definition>
        <argsstring>(istream &amp;in_)</argsstring>
        <name>rin</name>
        <param>
          <type>istream &amp;</type>
          <declname>in_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d_compiled.cpp" line="322" column="2" bodyfile="d_compiled.cpp" bodystart="322" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; rin::operator&lt;&lt;</definition>
        <argsstring>(const char *)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d_compiled.cpp" line="323" column="2" bodyfile="d_compiled.cpp" bodystart="323" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1ac54363dcbc7ce811509e7ff360b78dad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; rin::operator&lt;&lt;</definition>
        <argsstring>(string const &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d_compiled.cpp" line="324" column="2" bodyfile="d_compiled.cpp" bodystart="324" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1a7c7bbc816095cbe239ce52b980d7117e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structrin" kindref="compound">rin</ref> &amp;</type>
        <definition>rin&amp; rin::operator&gt;&gt;</definition>
        <argsstring>(T &amp;x)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d_compiled.cpp" line="330" column="18" bodyfile="d_compiled.cpp" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rin::rin</definition>
        <argsstring>(istream &amp;in_)</argsstring>
        <name>rin</name>
        <param>
          <type>istream &amp;</type>
          <declname>in_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" line="334" column="5" bodyfile="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" bodystart="334" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; rin::operator&lt;&lt;</definition>
        <argsstring>(const char *)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" line="335" column="5" bodyfile="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" bodystart="335" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1ac54363dcbc7ce811509e7ff360b78dad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; rin::operator&lt;&lt;</definition>
        <argsstring>(string const &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" line="336" column="5" bodyfile="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" bodystart="336" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1a7c7bbc816095cbe239ce52b980d7117e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structrin" kindref="compound">rin</ref> &amp;</type>
        <definition>rin&amp; rin::operator&gt;&gt;</definition>
        <argsstring>(T &amp;x)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" line="342" column="21" bodyfile="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" bodystart="342" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rin::rin</definition>
        <argsstring>(istream &amp;in_)</argsstring>
        <name>rin</name>
        <param>
          <type>istream &amp;</type>
          <declname>in_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" line="334" column="5" bodyfile="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" bodystart="334" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; rin::operator&lt;&lt;</definition>
        <argsstring>(const char *)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" line="335" column="5" bodyfile="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" bodystart="335" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1ac54363dcbc7ce811509e7ff360b78dad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; rin::operator&lt;&lt;</definition>
        <argsstring>(string const &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" line="336" column="5" bodyfile="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" bodystart="336" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1a7c7bbc816095cbe239ce52b980d7117e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structrin" kindref="compound">rin</ref> &amp;</type>
        <definition>rin&amp; rin::operator&gt;&gt;</definition>
        <argsstring>(T &amp;x)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" line="342" column="21" bodyfile="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" bodystart="342" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rin::rin</definition>
        <argsstring>(istream &amp;in_)</argsstring>
        <name>rin</name>
        <param>
          <type>istream &amp;</type>
          <declname>in_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e_compiled.cpp" line="322" column="2" bodyfile="e_compiled.cpp" bodystart="322" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; rin::operator&lt;&lt;</definition>
        <argsstring>(const char *)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e_compiled.cpp" line="323" column="2" bodyfile="e_compiled.cpp" bodystart="323" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1ac54363dcbc7ce811509e7ff360b78dad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; rin::operator&lt;&lt;</definition>
        <argsstring>(string const &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e_compiled.cpp" line="324" column="2" bodyfile="e_compiled.cpp" bodystart="324" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1a7c7bbc816095cbe239ce52b980d7117e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structrin" kindref="compound">rin</ref> &amp;</type>
        <definition>rin&amp; rin::operator&gt;&gt;</definition>
        <argsstring>(T &amp;x)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e_compiled.cpp" line="330" column="18" bodyfile="e_compiled.cpp" bodystart="330" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>rin::rin</definition>
        <argsstring>(istream &amp;in_)</argsstring>
        <name>rin</name>
        <param>
          <type>istream &amp;</type>
          <declname>in_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="io.hpp" line="9" column="1" bodyfile="io.hpp" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; rin::operator&lt;&lt;</definition>
        <argsstring>(const char *)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="io.hpp" line="10" column="1" bodyfile="io.hpp" bodystart="10" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1ac54363dcbc7ce811509e7ff360b78dad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; rin::operator&lt;&lt;</definition>
        <argsstring>(string const &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="io.hpp" line="11" column="1" bodyfile="io.hpp" bodystart="11" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="structrin_1a7c7bbc816095cbe239ce52b980d7117e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structrin" kindref="compound">rin</ref> &amp;</type>
        <definition>rin&amp; rin::operator&gt;&gt;</definition>
        <argsstring>(T &amp;x)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="io.hpp" line="17" column="17" bodyfile="io.hpp" bodystart="17" bodyend="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Reverse input class. This allows reusing output operators for input.</para>
<para><simplesect kind="warning"><para>This is a hack, but it works. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="d_compiled.cpp" line="320" column="10" bodyfile="d_compiled.cpp" bodystart="320" bodyend="334"/>
    <listofallmembers>
      <member refid="structrin_1ae4efd5288509cef3672521280920f24d" prot="public" virt="non-virtual"><scope>rin</scope><name>in</name></member>
      <member refid="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&lt;&lt;</name></member>
      <member refid="structrin_1ac54363dcbc7ce811509e7ff360b78dad" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&lt;&lt;</name></member>
      <member refid="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&lt;&lt;</name></member>
      <member refid="structrin_1ac54363dcbc7ce811509e7ff360b78dad" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&lt;&lt;</name></member>
      <member refid="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&lt;&lt;</name></member>
      <member refid="structrin_1ac54363dcbc7ce811509e7ff360b78dad" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&lt;&lt;</name></member>
      <member refid="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&lt;&lt;</name></member>
      <member refid="structrin_1ac54363dcbc7ce811509e7ff360b78dad" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&lt;&lt;</name></member>
      <member refid="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&lt;&lt;</name></member>
      <member refid="structrin_1ac54363dcbc7ce811509e7ff360b78dad" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&lt;&lt;</name></member>
      <member refid="structrin_1a7c7bbc816095cbe239ce52b980d7117e" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&gt;&gt;</name></member>
      <member refid="structrin_1a7c7bbc816095cbe239ce52b980d7117e" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&gt;&gt;</name></member>
      <member refid="structrin_1a7c7bbc816095cbe239ce52b980d7117e" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&gt;&gt;</name></member>
      <member refid="structrin_1a7c7bbc816095cbe239ce52b980d7117e" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&gt;&gt;</name></member>
      <member refid="structrin_1a7c7bbc816095cbe239ce52b980d7117e" prot="public" virt="non-virtual"><scope>rin</scope><name>operator&gt;&gt;</name></member>
      <member refid="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" prot="public" virt="non-virtual"><scope>rin</scope><name>rin</name></member>
      <member refid="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" prot="public" virt="non-virtual"><scope>rin</scope><name>rin</name></member>
      <member refid="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" prot="public" virt="non-virtual"><scope>rin</scope><name>rin</name></member>
      <member refid="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" prot="public" virt="non-virtual"><scope>rin</scope><name>rin</name></member>
      <member refid="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" prot="public" virt="non-virtual"><scope>rin</scope><name>rin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
