<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacemodulo__namespace" kind="namespace" language="C++">
    <compoundname>modulo_namespace</compoundname>
    <innerclass refid="structmodulo__namespace_1_1modulo" prot="public">modulo_namespace::modulo</innerclass>
    <innerclass refid="structmodulo__namespace_1_1no__mod" prot="public">modulo_namespace::no_mod</innerclass>
    <innernamespace refid="namespacemodulo__namespace_1_1test">modulo_namespace::test</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacemodulo__namespace_1a0329c7316dfca40b316f6ad7a6b60e87" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(<ref refid="namespacemodulo__namespace_1aac690d54b7665a90ca461724df8907c0" kindref="member">invert</ref>(std::declval&lt; Args &gt;()...))</type>
        <definition>using modulo_namespace::invert_t = typedef decltype(invert(std::declval&lt;Args&gt;()...))</definition>
        <argsstring></argsstring>
        <name>invert_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="4" column="13" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacemodulo__namespace_1a8e6fc91a032b336ea0bbed9eabf54f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T modulo_namespace::power</definition>
        <argsstring>(T a, ll b)</argsstring>
        <name>power</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns <formula id="20">$a^b$</formula>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the exponent</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Time complexity: <formula id="21">$O(\log_2 |b|)$</formula> multiplications </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="11" column="15" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="11" bodyend="27"/>
        <references refid="namespacetree_1a1db5e81cd89b854831db8147ff509caa">tree::assert</references>
        <references refid="operations_8hpp_1adae6a67fc0375c4abb754d64b9eed42f" compoundref="operations_8hpp" startline="62">b</references>
        <references refid="namespacemodulo__namespace_1a55577c112e6d41b6314ad996f9e48842" compoundref="modulo_8hpp" startline="53" endline="53">identity</references>
        <references refid="namespacemodulo__namespace_1aac690d54b7665a90ca461724df8907c0" compoundref="modulo_8hpp" startline="77" endline="81">invert</references>
        <references refid="operations_8hpp_1a339672ff94e6199019102f50d317c3d7" compoundref="operations_8hpp" startline="63">ret</references>
        <referencedby refid="namespacemodulo__namespace_1aac690d54b7665a90ca461724df8907c0" compoundref="modulo_8hpp" startline="77" endline="81">invert</referencedby>
        <referencedby refid="namespacemodulo__namespace_1_1test_1a528d9ed1db3200393555b3dc75036599" compoundref="test__modulo_8hpp" startline="3" endline="10">modulo_namespace::test::test_power</referencedby>
        <referencedby refid="namespacepermutation_1_1test_1a79866de5f43125b4ac233cdc1bae579e" compoundref="test__permutation_8hpp" startline="18" endline="22">permutation::test::test_power</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1a2507e89fefa09a358a9de729b15dd642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll modulo_namespace::mod</definition>
        <argsstring>(ll a, const ll b)</argsstring>
        <name>mod</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the remainder of a divided by b as a nonnegative integer in [0, b). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="29" column="4" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="29" bodyend="35"/>
        <references refid="operations_8hpp_1adae6a67fc0375c4abb754d64b9eed42f" compoundref="operations_8hpp" startline="62">b</references>
        <referencedby refid="number__theory_8hpp_1a67527905c2b2c027c8b458902db2d05a" compoundref="number__theory_8hpp" startline="118" endline="139">dlog</referencedby>
        <referencedby refid="number__theory_8hpp_1aa6039763e84c50eb24fdee392c581898" compoundref="number__theory_8hpp" startline="102" endline="104">egcd</referencedby>
        <referencedby refid="namespacemodulo__namespace_1a0a666ddbbb5d4d02c4aee66be7577292" compoundref="modulo_8hpp" startline="37" endline="37">mod_eq</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1a0a666ddbbb5d4d02c4aee66be7577292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll modulo_namespace::mod_eq</definition>
        <argsstring>(ll &amp;a, const ll b)</argsstring>
        <name>mod_eq</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a to the remainder when divided by b. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="37" column="4" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="37" bodyend="37"/>
        <references refid="operations_8hpp_1adae6a67fc0375c4abb754d64b9eed42f" compoundref="operations_8hpp" startline="62">b</references>
        <references refid="namespacemodulo__namespace_1a2507e89fefa09a358a9de729b15dd642" compoundref="modulo_8hpp" startline="29" endline="35">mod</references>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1a69f587d528c1bb1f78d8a538b133e57b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        <definition>modulo modulo_namespace::operator&quot;&quot;_M</definition>
        <argsstring>(const unsigned long long x)</argsstring>
        <name>operator&quot;&quot;_M</name>
        <param>
          <type>const unsigned long long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="52" column="8" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1a55577c112e6d41b6314ad996f9e48842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        <definition>modulo modulo_namespace::identity</definition>
        <argsstring>(plus&lt;&gt;, modulo)</argsstring>
        <name>identity</name>
        <param>
          <type>plus&lt;&gt;</type>
        </param>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="53" column="8" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="53" bodyend="53"/>
        <referencedby refid="namespacemodulo__namespace_1a8e6fc91a032b336ea0bbed9eabf54f69" compoundref="modulo_8hpp" startline="11" endline="27">power</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1aab105decd35962ad192ea2187706df9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        <definition>modulo modulo_namespace::identity</definition>
        <argsstring>(multiplies&lt;&gt;, modulo)</argsstring>
        <name>identity</name>
        <param>
          <type>multiplies&lt;&gt;</type>
        </param>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="54" column="8" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1aa39044c62fae2707474b9960d257d9dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        <definition>modulo modulo_namespace::operator+</definition>
        <argsstring>(modulo const &amp;a, modulo const &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="55" column="8" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="55" bodyend="58"/>
        <references refid="operations_8hpp_1adae6a67fc0375c4abb754d64b9eed42f" compoundref="operations_8hpp" startline="62">b</references>
        <references refid="structmodulo__namespace_1_1modulo_1a3fb17100685d3dfe8246407138109bc6" compoundref="modulo_8hpp" startline="41">modulo_namespace::modulo::modulus</references>
        <references refid="structmodulo__namespace_1_1modulo_1a364cca04966c17f999945d2e0c8418a0" compoundref="modulo_8hpp" startline="45">modulo_namespace::modulo::x</references>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1aef9f34a9358f523b5e12f6897a806e7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        <definition>modulo modulo_namespace::operator++</definition>
        <argsstring>(modulo &amp;a)</argsstring>
        <name>operator++</name>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="59" column="8" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1a19406485d1ce3b2430c67aea00dda27b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        <definition>modulo modulo_namespace::operator-</definition>
        <argsstring>(modulo const &amp;a)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="60" column="8" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="60" bodyend="60"/>
        <references refid="structmodulo__namespace_1_1modulo_1a3fb17100685d3dfe8246407138109bc6" compoundref="modulo_8hpp" startline="41">modulo_namespace::modulo::modulus</references>
        <references refid="structmodulo__namespace_1_1modulo_1a364cca04966c17f999945d2e0c8418a0" compoundref="modulo_8hpp" startline="45">modulo_namespace::modulo::x</references>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1a533cfa2e1e3a79428a3b5e00430ad125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>modulo_namespace::bin</definition>
        <argsstring>(==, modulo)</argsstring>
        <name>bin</name>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="63" column="1" declfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" declline="63" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1a7d1e0e6527c5e49efdc1ef0780a055c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        <definition>modulo modulo_namespace::operator*</definition>
        <argsstring>(modulo const &amp;a, modulo const &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Computes a times b modulo <ref refid="structmodulo__namespace_1_1modulo_1a3fb17100685d3dfe8246407138109bc6" kindref="member">modulo::modulus</ref> using long double</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="64" column="8" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="64" bodyend="76"/>
        <references refid="operations_8hpp_1adae6a67fc0375c4abb754d64b9eed42f" compoundref="operations_8hpp" startline="62">b</references>
        <references refid="structmodulo__namespace_1_1modulo_1a3fb17100685d3dfe8246407138109bc6" compoundref="modulo_8hpp" startline="41">modulo_namespace::modulo::modulus</references>
        <references refid="structmodulo__namespace_1_1modulo_1a364cca04966c17f999945d2e0c8418a0" compoundref="modulo_8hpp" startline="45">modulo_namespace::modulo::x</references>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1aac690d54b7665a90ca461724df8907c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref></type>
        <definition>modulo modulo_namespace::invert</definition>
        <argsstring>(multiplies&lt;&gt;, modulo const &amp;b)</argsstring>
        <name>invert</name>
        <param>
          <type>multiplies&lt;&gt;</type>
        </param>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Computes the modular inverse <formula id="22">$b^{-1} \pmod{M}$</formula></para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="77" column="8" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="77" bodyend="81"/>
        <references refid="namespacetree_1a1db5e81cd89b854831db8147ff509caa">tree::assert</references>
        <references refid="operations_8hpp_1adae6a67fc0375c4abb754d64b9eed42f" compoundref="operations_8hpp" startline="62">b</references>
        <references refid="structmodulo__namespace_1_1modulo_1a3fb17100685d3dfe8246407138109bc6" compoundref="modulo_8hpp" startline="41">modulo_namespace::modulo::modulus</references>
        <references refid="namespacemodulo__namespace_1a8e6fc91a032b336ea0bbed9eabf54f69" compoundref="modulo_8hpp" startline="11" endline="27">power</references>
        <referencedby refid="namespacemodulo__namespace_1a8e6fc91a032b336ea0bbed9eabf54f69" compoundref="modulo_8hpp" startline="11" endline="27">power</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemodulo__namespace_1ad645d89c7a55337c12edadb8376670e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>auto &amp;</type>
        <definition>auto&amp; modulo_namespace::operator&lt;&lt;</definition>
        <argsstring>(Stream &amp;os, modulo const &amp;m)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref> const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="83" column="13" bodyfile="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" bodystart="83" bodyend="85"/>
        <references refid="structmodulo__namespace_1_1modulo_1a364cca04966c17f999945d2e0c8418a0" compoundref="modulo_8hpp" startline="45">modulo_namespace::modulo::x</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ram/OmniTemplate/src/number_theory/modulo.hpp" line="3" column="26"/>
  </compounddef>
</doxygen>
