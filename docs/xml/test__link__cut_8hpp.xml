<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="test__link__cut_8hpp" kind="file" language="C++">
    <compoundname>test_link_cut.hpp</compoundname>
    <includedby refid="test_8cpp" local="yes">/home/ram/OmniTemplate/src/test/test.cpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>/home/ram/OmniTemplate/src/test/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/graph/tree/test_link_cut.hpp</label>
        <link refid="test__link__cut_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacelink__cut">link_cut</innernamespace>
    <innernamespace refid="namespacelink__cut_1_1test">link_cut::test</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacelink__cut_1_1test" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelink__cut_1_1test" kindref="compound">link_cut::test</ref><sp/>{</highlight></codeline>
<codeline lineno="2" refid="namespacelink__cut_1_1test_1ad63bee2821de932f5d295238e48d106f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelink__cut_1_1test_1ad63bee2821de932f5d295238e48d106f" kindref="member">test_link_cut_tree</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Node<sp/>*&gt;<sp/>nodes(10);</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>generate(<ref refid="core_2all_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" kindref="member">al</ref>(nodes),<sp/><ref refid="namespacelink__cut_1a3dce57f6ba794543c43ff4ddbe83be1a" kindref="member">make_tree</ref>);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(nodes[1],<sp/>nodes[2]);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[2])<sp/>==<sp/>nodes[1]);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[1])<sp/>==<sp/>nodes[1]);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(nodes[1],<sp/>nodes[2])<sp/>==<sp/>nodes[1]);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(nodes[0],<sp/>nodes[1]);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(nodes[2],<sp/>nodes[1])<sp/>==<sp/>nodes[1]);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(nodes[0],<sp/>nodes[2])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(nodes[0],<sp/>nodes[1])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(nodes[1],<sp/>nodes[1])<sp/>==<sp/>nodes[1]);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(nodes[1],<sp/>nodes[8])<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[2])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[1])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[0])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(nodes[3],<sp/>nodes[4]);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(nodes[4],<sp/>nodes[5]);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[5])<sp/>==<sp/>nodes[3]);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(nodes[0],<sp/>nodes[3]);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(nodes[4],<sp/>nodes[1])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(nodes[4],<sp/>nodes[4])<sp/>==<sp/>nodes[4]);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(nodes[6],<sp/>nodes[4])<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(nodes[6],<sp/>nodes[7]);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(nodes[6],<sp/>nodes[8]);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(nodes[8],<sp/>nodes[9]);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(nodes[0],<sp/>nodes[6]);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(nodes[6],<sp/>nodes[4])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[3])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[2])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1ab6b1e676cdcb014dd718dcef1bc009de" kindref="member">cut</ref>(nodes[1]);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[2])<sp/>==<sp/>nodes[1]);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1ab6b1e676cdcb014dd718dcef1bc009de" kindref="member">cut</ref>(nodes[3]);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[3])<sp/>==<sp/>nodes[3]);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[4])<sp/>==<sp/>nodes[3]);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[5])<sp/>==<sp/>nodes[3]);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1ab6b1e676cdcb014dd718dcef1bc009de" kindref="member">cut</ref>(nodes[4]);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(nodes[0],<sp/>nodes[4]);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[5])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[9])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[6])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1ab6b1e676cdcb014dd718dcef1bc009de" kindref="member">cut</ref>(nodes[8]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[9])<sp/>==<sp/>nodes[8]);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[8])<sp/>==<sp/>nodes[8]);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(nodes[0])<sp/>==<sp/>nodes[0]);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>link_cut::test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelink__cut_1_1test" kindref="compound">link_cut::test</ref>;</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/graph/tree/test_link_cut.hpp"/>
  </compounddef>
</doxygen>
