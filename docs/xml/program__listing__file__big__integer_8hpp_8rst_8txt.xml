<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="program__listing__file__big__integer_8hpp_8rst_8txt" kind="file" language="C++">
    <compoundname>program_listing_file_big_integer.hpp.rst.txt</compoundname>
    <includes refid="core_8hpp" local="yes">core.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>bits/stdc++.h</label>
      </node>
      <node id="6">
        <label>io.hpp</label>
        <link refid="io_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>experimental/source_location</label>
      </node>
      <node id="1">
        <label>docs/_build/html/_sources/api/program_listing_file_big_integer.hpp.rst.txt</label>
        <link refid="program__listing__file__big__integer_8hpp_8rst_8txt"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>experimental/iterator</label>
      </node>
      <node id="10">
        <label>utility.hpp</label>
        <link refid="utility_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>debug.hpp</label>
        <link refid="debug_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>range.hpp</label>
        <link refid="range_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core.hpp</label>
        <link refid="core_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>operations.hpp</label>
        <link refid="operations_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="program__listing__file__big__integer_8hpp_8rst_8txt_1a6d6f82365dfb47579b422db324f5ce84" prot="public" static="no" mutable="no">
        <type>_program_listing_file_big_integer</type>
        <definition>_program_listing_file_big_integer hpp</definition>
        <argsstring></argsstring>
        <name>hpp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_big_integer.hpp.rst.txt" line="2" column="35" bodyfile="docs/_build/html/_sources/api/program_listing_file_big_integer.hpp.rst.txt" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="program__listing__file__big__integer_8hpp_8rst_8txt_1a0e70bcfc6d16402fa0f651df9b44c3b3" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>bigint</definition>
        <argsstring>(const vector&lt; ull &gt; &amp;v_)</argsstring>
        <name>bigint</name>
        <param>
          <type>const vector&lt; ull &gt; &amp;</type>
          <declname>v_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_big_integer.hpp.rst.txt" line="18" column="17" bodyfile="docs/_build/html/_sources/api/program_listing_file_big_integer.hpp.rst.txt" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__big__integer_8hpp_8rst_8txt_1a5e77b192d9150e8f82bb827d0918dc46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto operator[]</definition>
        <argsstring>(ll i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_big_integer.hpp.rst.txt" line="19" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_big_integer.hpp.rst.txt" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__big__integer_8hpp_8rst_8txt_1ab1c01ea11cd355eaa2c477d43ffc120b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>auto &amp;</type>
        <definition>auto&amp; operator&lt;&lt;</definition>
        <argsstring>(Stream &amp;os, bigint const &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structbigint_1_1bigint" kindref="compound">bigint</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_big_integer.hpp.rst.txt" line="21" column="16" bodyfile="docs/_build/html/_sources/api/program_listing_file_big_integer.hpp.rst.txt" bodystart="21" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal">..<sp/>_program_listing_file_big_integer.hpp:</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">Program<sp/>Listing<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>File<sp/>big_integer.hpp</highlight></codeline>
<codeline lineno="5"><highlight class="normal">========================================</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">|exhale_lsh|<sp/>:ref:`Return<sp/>to<sp/>documentation<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>file<sp/>&lt;file_big_integer.hpp&gt;`<sp/>(``big_integer.hpp``)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">..<sp/>|exhale_lsh|<sp/>unicode::<sp/>U+021B0<sp/>..<sp/>UPWARDS<sp/>ARROW<sp/>WITH<sp/>TIP<sp/>LEFTWARDS</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">..<sp/>code-block::<sp/>cpp</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/>#pragma<sp/>once</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>#include<sp/></highlight><highlight class="stringliteral">&quot;core.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"><sp/><ref refid="structbigint_1_1bigint" kindref="compound">bigint</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structbigint_1_1bigint" kindref="compound">bigint</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;ull&gt;<sp/>v;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structbigint_1_1bigint" kindref="compound">bigint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;ull&gt;<sp/>&amp;v_)<sp/>:<sp/>v(v_)<sp/>{}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator[](<ref refid="structll" kindref="compound">ll</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>ssize(v)<sp/>?<sp/>v[i]<sp/>:<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;operator&lt;&lt;(Stream<sp/>&amp;os,<sp/><ref refid="structbigint_1_1bigint" kindref="compound">bigint</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>a.v;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator+(<ref refid="structbigint_1_1bigint" kindref="compound">bigint</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a,<sp/><ref refid="structbigint_1_1bigint" kindref="compound">bigint</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>b){</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>addo<sp/>__builtin_add_overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initializer_list<sp/>xs{a,b};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ull<sp/>sm<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x:<sp/>xs){sm+=x.v.size();}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structbigint_1_1bigint" kindref="compound">bigint</ref><sp/>c(sm+1);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fo(i,sm){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>x:<sp/>xs){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.v[i+1]<sp/>|=<sp/>addo(c.v[i],<sp/>x[i],<sp/>c.v.data()+i);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>bigint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="structbigint_1_1bigint" kindref="compound">bigint</ref>;</highlight></codeline>
    </programlisting>
    <location file="docs/_build/html/_sources/api/program_listing_file_big_integer.hpp.rst.txt"/>
  </compounddef>
</doxygen>
