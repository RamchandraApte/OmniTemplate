<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structseg2" kind="struct" language="C++" prot="public">
    <compoundname>seg2</compoundname>
    <basecompoundref prot="public" virt="non-virtual">seg_base&lt; mypers&lt; no_v&lt; decltype(identity(plus&lt; ll &gt; {})) &gt;&gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename Op</type>
        <defval>plus&lt;<ref refid="structll" kindref="compound">ll</ref>&gt;</defval>
      </param>
      <param>
        <type>template&lt; typename &gt; typename</type>
        <declname>No_T</declname>
        <defname>No_T</defname>
        <defval><ref refid="structpers__ptr" kindref="compound">mypers</ref></defval>
      </param>
      <param>
        <type>typename T</type>
        <defval>decltype(identity(Op{}))</defval>
      </param>
      <param>
        <type>typename No</type>
        <defval>No_T&lt;<ref refid="structno__v" kindref="compound">no_v</ref>&lt;T&gt;&gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structseg2_1a95e4432be7b55a0e088994978e6437a1" prot="public" static="no" mutable="no">
        <type>Op</type>
        <definition>Op seg2&lt; Op, No_T, T, No &gt;::op</definition>
        <argsstring></argsstring>
        <name>op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="155" column="11" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structseg2_1a17a1d478c854b167aaca8d33283e7082" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T seg2&lt; Op, No_T, T, No &gt;::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="156" column="10" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structseg2_1a86d3b7930178a162f1fd32ca5dfe509f" prot="public" static="no" mutable="no">
        <type>const <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>const ll seg2&lt; Op, No_T, T, No &gt;::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="157" column="17" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structseg2_1a5583f10d50c68678e881587dd9116aaf" prot="public" static="no" mutable="no">
        <type>No</type>
        <definition>No seg2&lt; Op, No_T, T, No &gt;::ro</definition>
        <argsstring></argsstring>
        <name>ro</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="158" column="11" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structseg2_1a2800b8f4f0e609494fe7e81caab3bc57" prot="public" static="no" mutable="no">
        <type>vector&lt; No &gt;</type>
        <definition>vector&lt; No &gt; seg2&lt; Op, No_T, T, No &gt;::h</definition>
        <argsstring></argsstring>
        <name>h</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="159" column="15" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structseg2_1addbfd656c176994b7019ed2990bc5b03" prot="public" static="no" mutable="no">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll seg2&lt; Op, No_T, T, No &gt;::l</definition>
        <argsstring></argsstring>
        <name>l</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="165" column="11" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structseg2_1a77a3a7274fdb739fc52b4215e45f5735" prot="public" static="no" mutable="no">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll seg2&lt; Op, No_T, T, No &gt;::r</definition>
        <argsstring></argsstring>
        <name>r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="165" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structseg2_1a79d45741dfbd3393b16a1a2529d59bf7" prot="public" static="yes" mutable="no">
        <type>const static auto</type>
        <definition>const static auto seg2&lt; Op, No_T, T, No &gt;::def</definition>
        <argsstring></argsstring>
        <name>def</name>
        <initializer>= -1LL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="164" column="26" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structseg2_1aa4a805dbfc4482dcb84d65bbc2c0da91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>seg2&lt; Op, No_T, T, No &gt;::seg2</definition>
        <argsstring>(ll n_)</argsstring>
        <name>seg2</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>n_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="161" column="8" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a58ad2a794b63e208c386987ba7e0ac9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::mid</definition>
        <argsstring>(ll nl, ll nr) const</argsstring>
        <name>mid</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nl</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="166" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1afdf227899a92d38834ddc9caa6de2c2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::dis</definition>
        <argsstring>(ll nl, ll nr) const</argsstring>
        <name>dis</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nl</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="167" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1afbcc6d580ba32864d8a170fdf360dadd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::over</definition>
        <argsstring>(ll nl, ll nr) const</argsstring>
        <name>over</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nl</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="168" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a33fb24e03fa2b90f3dabac5c485b7b01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::down</definition>
        <argsstring>(No const &amp;i, bool d) const</argsstring>
        <name>down</name>
        <param>
          <type>No const &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="169" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="169" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1aae972c60c260fa3806331980b97e64bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T seg2&lt; Op, No_T, T, No &gt;::gt</definition>
        <argsstring>(ll l, df(r, def), df(i, 1LL), df(nl, 0LL), df(nr, def)) const</argsstring>
        <name>gt</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>df(r, def)</type>
        </param>
        <param>
          <type>df(i, 1LL)</type>
        </param>
        <param>
          <type>df(nl, 0LL)</type>
        </param>
        <param>
          <type>df(nr, def)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="181" column="10" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="181" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a2c72a97ed68c2e590b00ed1d48444c43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::gt</definition>
        <argsstring>(ll l_, ll r_)</argsstring>
        <name>gt</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l_</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>r_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="190" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="190" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1ab3e8846e557fb6fbf36396bcf5a74f41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::gt</definition>
        <argsstring>(ll l)</argsstring>
        <name>gt</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="195" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a6835dc9f688cff576d283bfcf5baf865" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::up</definition>
        <argsstring>(T const &amp;val, ll l, df(r, def), df(i, 1LL), df(nl, 0LL), df(nr, def))</argsstring>
        <name>up</name>
        <param>
          <type>T const &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>df(r, def)</type>
        </param>
        <param>
          <type>df(i, 1LL)</type>
        </param>
        <param>
          <type>df(nl, 0LL)</type>
        </param>
        <param>
          <type>df(nr, def)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="196" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="196" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a63ce6762943493718ad2fb6796ce2458" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::up</definition>
        <argsstring>(const T &amp;val, ll l_, ll r_)</argsstring>
        <name>up</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l_</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>r_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="209" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a8fce86584ae8e479f89b2f94b65d38cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::up</definition>
        <argsstring>(T val, ll l)</argsstring>
        <name>up</name>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="215" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1aa4a805dbfc4482dcb84d65bbc2c0da91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>seg2&lt; Op, No_T, T, No &gt;::seg2</definition>
        <argsstring>(ll n_)</argsstring>
        <name>seg2</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>n_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="150" column="1" bodyfile="seg_old.hpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a58ad2a794b63e208c386987ba7e0ac9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::mid</definition>
        <argsstring>(ll nl, ll nr) const</argsstring>
        <name>mid</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nl</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="155" column="6" bodyfile="seg_old.hpp" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1afdf227899a92d38834ddc9caa6de2c2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::dis</definition>
        <argsstring>(ll nl, ll nr) const</argsstring>
        <name>dis</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nl</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="156" column="6" bodyfile="seg_old.hpp" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1afbcc6d580ba32864d8a170fdf360dadd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::over</definition>
        <argsstring>(ll nl, ll nr) const</argsstring>
        <name>over</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nl</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>nr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="157" column="6" bodyfile="seg_old.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a33fb24e03fa2b90f3dabac5c485b7b01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::down</definition>
        <argsstring>(No const &amp;i, bool d) const</argsstring>
        <name>down</name>
        <param>
          <type>No const &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="158" column="6" bodyfile="seg_old.hpp" bodystart="158" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1ae412ef80043b6bb79be37ce65934e7f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T seg2&lt; Op, No_T, T, No &gt;::gt</definition>
        <argsstring>(ll l, remove_const_t&lt; decltype(def)&gt; r=def, remove_const_t&lt; decltype(1LL)&gt; i=1LL, remove_const_t&lt; decltype(0LL)&gt; nl=0LL, remove_const_t&lt; decltype(def)&gt; nr=def) const</argsstring>
        <name>gt</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>remove_const_t&lt; decltype(def)&gt;</type>
          <declname>r</declname>
          <defval>def</defval>
        </param>
        <param>
          <type>remove_const_t&lt; decltype(1LL)&gt;</type>
          <declname>i</declname>
          <defval>1LL</defval>
        </param>
        <param>
          <type>remove_const_t&lt; decltype(0LL)&gt;</type>
          <declname>nl</declname>
          <defval>0LL</defval>
        </param>
        <param>
          <type>remove_const_t&lt; decltype(def)&gt;</type>
          <declname>nr</declname>
          <defval>def</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="170" column="3" bodyfile="seg_old.hpp" bodystart="170" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a2c72a97ed68c2e590b00ed1d48444c43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::gt</definition>
        <argsstring>(ll l_, ll r_)</argsstring>
        <name>gt</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l_</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>r_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="179" column="6" bodyfile="seg_old.hpp" bodystart="179" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1ab3e8846e557fb6fbf36396bcf5a74f41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::gt</definition>
        <argsstring>(ll l)</argsstring>
        <name>gt</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="184" column="6" bodyfile="seg_old.hpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1ac5f5941581818e5e5f708d984a480deb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::up</definition>
        <argsstring>(T const &amp;val, ll l, remove_const_t&lt; decltype(def)&gt; r=def, remove_const_t&lt; decltype(1LL)&gt; i=1LL, remove_const_t&lt; decltype(0LL)&gt; nl=0LL, remove_const_t&lt; decltype(def)&gt; nr=def)</argsstring>
        <name>up</name>
        <param>
          <type>T const &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type>remove_const_t&lt; decltype(def)&gt;</type>
          <declname>r</declname>
          <defval>def</defval>
        </param>
        <param>
          <type>remove_const_t&lt; decltype(1LL)&gt;</type>
          <declname>i</declname>
          <defval>1LL</defval>
        </param>
        <param>
          <type>remove_const_t&lt; decltype(0LL)&gt;</type>
          <declname>nl</declname>
          <defval>0LL</defval>
        </param>
        <param>
          <type>remove_const_t&lt; decltype(def)&gt;</type>
          <declname>nr</declname>
          <defval>def</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="185" column="6" bodyfile="seg_old.hpp" bodystart="185" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a63ce6762943493718ad2fb6796ce2458" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::up</definition>
        <argsstring>(const T &amp;val, ll l_, ll r_)</argsstring>
        <name>up</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l_</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>r_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="198" column="6" bodyfile="seg_old.hpp" bodystart="198" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structseg2_1a8fce86584ae8e479f89b2f94b65d38cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg2&lt; Op, No_T, T, No &gt;::up</definition>
        <argsstring>(T val, ll l)</argsstring>
        <name>up</name>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="204" column="6" bodyfile="seg_old.hpp" bodystart="204" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>seg2&lt; Op, No_T, T, No &gt;</label>
        <link refid="structseg2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>seg_base&lt; mypers &lt;no_v&lt;decltype(identity(plus&lt;ll&gt; {})) &gt;&gt;  &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>seg2&lt; Op, No_T, T, No &gt;</label>
        <link refid="structseg2"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>n</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>ll</label>
        <link refid="structll"/>
      </node>
      <node id="2">
        <label>seg_base&lt; mypers &lt;no_v&lt;decltype(identity(plus&lt;ll&gt; {})) &gt;&gt;  &gt;</label>
      </node>
    </collaborationgraph>
    <location file="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" line="154" column="24" bodyfile="docs/_build/html/_sources/api/program_listing_file_seg_old.hpp.rst.txt" bodystart="154" bodyend="216"/>
    <listofallmembers>
      <member refid="structseg2_1a79d45741dfbd3393b16a1a2529d59bf7" prot="public" virt="non-virtual"><scope>seg2</scope><name>def</name></member>
      <member refid="structseg2_1afdf227899a92d38834ddc9caa6de2c2f" prot="public" virt="non-virtual"><scope>seg2</scope><name>dis</name></member>
      <member refid="structseg2_1afdf227899a92d38834ddc9caa6de2c2f" prot="public" virt="non-virtual"><scope>seg2</scope><name>dis</name></member>
      <member refid="structseg2_1a33fb24e03fa2b90f3dabac5c485b7b01" prot="public" virt="non-virtual"><scope>seg2</scope><name>down</name></member>
      <member refid="structseg2_1a33fb24e03fa2b90f3dabac5c485b7b01" prot="public" virt="non-virtual"><scope>seg2</scope><name>down</name></member>
      <member refid="structseg2_1aae972c60c260fa3806331980b97e64bf" prot="public" virt="non-virtual"><scope>seg2</scope><name>gt</name></member>
      <member refid="structseg2_1a2c72a97ed68c2e590b00ed1d48444c43" prot="public" virt="non-virtual"><scope>seg2</scope><name>gt</name></member>
      <member refid="structseg2_1ab3e8846e557fb6fbf36396bcf5a74f41" prot="public" virt="non-virtual"><scope>seg2</scope><name>gt</name></member>
      <member refid="structseg2_1ae412ef80043b6bb79be37ce65934e7f9" prot="public" virt="non-virtual"><scope>seg2</scope><name>gt</name></member>
      <member refid="structseg2_1a2c72a97ed68c2e590b00ed1d48444c43" prot="public" virt="non-virtual"><scope>seg2</scope><name>gt</name></member>
      <member refid="structseg2_1ab3e8846e557fb6fbf36396bcf5a74f41" prot="public" virt="non-virtual"><scope>seg2</scope><name>gt</name></member>
      <member refid="structseg2_1a2800b8f4f0e609494fe7e81caab3bc57" prot="public" virt="non-virtual"><scope>seg2</scope><name>h</name></member>
      <member refid="structseg2_1a17a1d478c854b167aaca8d33283e7082" prot="public" virt="non-virtual"><scope>seg2</scope><name>id</name></member>
      <member refid="structseg2_1addbfd656c176994b7019ed2990bc5b03" prot="public" virt="non-virtual"><scope>seg2</scope><name>l</name></member>
      <member refid="structseg2_1a58ad2a794b63e208c386987ba7e0ac9d" prot="public" virt="non-virtual"><scope>seg2</scope><name>mid</name></member>
      <member refid="structseg2_1a58ad2a794b63e208c386987ba7e0ac9d" prot="public" virt="non-virtual"><scope>seg2</scope><name>mid</name></member>
      <member refid="structseg2_1a86d3b7930178a162f1fd32ca5dfe509f" prot="public" virt="non-virtual"><scope>seg2</scope><name>n</name></member>
      <member refid="structseg2_1a95e4432be7b55a0e088994978e6437a1" prot="public" virt="non-virtual"><scope>seg2</scope><name>op</name></member>
      <member refid="structseg2_1afbcc6d580ba32864d8a170fdf360dadd" prot="public" virt="non-virtual"><scope>seg2</scope><name>over</name></member>
      <member refid="structseg2_1afbcc6d580ba32864d8a170fdf360dadd" prot="public" virt="non-virtual"><scope>seg2</scope><name>over</name></member>
      <member refid="structseg2_1a77a3a7274fdb739fc52b4215e45f5735" prot="public" virt="non-virtual"><scope>seg2</scope><name>r</name></member>
      <member refid="structseg2_1a5583f10d50c68678e881587dd9116aaf" prot="public" virt="non-virtual"><scope>seg2</scope><name>ro</name></member>
      <member refid="structseg2_1aa4a805dbfc4482dcb84d65bbc2c0da91" prot="public" virt="non-virtual"><scope>seg2</scope><name>seg2</name></member>
      <member refid="structseg2_1aa4a805dbfc4482dcb84d65bbc2c0da91" prot="public" virt="non-virtual"><scope>seg2</scope><name>seg2</name></member>
      <member refid="structseg2_1a6835dc9f688cff576d283bfcf5baf865" prot="public" virt="non-virtual"><scope>seg2</scope><name>up</name></member>
      <member refid="structseg2_1a63ce6762943493718ad2fb6796ce2458" prot="public" virt="non-virtual"><scope>seg2</scope><name>up</name></member>
      <member refid="structseg2_1a8fce86584ae8e479f89b2f94b65d38cd" prot="public" virt="non-virtual"><scope>seg2</scope><name>up</name></member>
      <member refid="structseg2_1ac5f5941581818e5e5f708d984a480deb" prot="public" virt="non-virtual"><scope>seg2</scope><name>up</name></member>
      <member refid="structseg2_1a63ce6762943493718ad2fb6796ce2458" prot="public" virt="non-virtual"><scope>seg2</scope><name>up</name></member>
      <member refid="structseg2_1a8fce86584ae8e479f89b2f94b65d38cd" prot="public" virt="non-virtual"><scope>seg2</scope><name>up</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
