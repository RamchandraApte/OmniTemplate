<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="structsplay__tree_1_1SplayTree_1_1iterator" kind="struct" language="C++" prot="public">
    <compoundname>splay_tree::SplayTree::iterator</compoundname>
    <basecompoundref refid="structit__base" prot="public" virt="non-virtual">it_base&lt; T &gt;</basecompoundref>
    <includes refid="splay__tree_8hpp" local="no">splay_tree.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structsplay__tree_1_1SplayTree_1_1iterator_1a69bb5a2446e8219c0eca5b6791272e23" prot="public" static="no">
        <type>bidirectional_iterator_tag</type>
        <definition>using splay_tree::SplayTree&lt; T &gt;::iterator::iterator_category =  bidirectional_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" line="67" column="1" bodyfile="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structsplay__tree_1_1SplayTree_1_1iterator_1a69bb5a2446e8219c0eca5b6791272e23" prot="public" static="no">
        <type>bidirectional_iterator_tag</type>
        <definition>using splay_tree::SplayTree&lt; T &gt;::iterator::iterator_category =  bidirectional_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/test/test_compiled.cpp" line="2115" column="1" bodyfile="/home/ram/OmniTemplate/src/test/test_compiled.cpp" bodystart="2115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsplay__tree_1_1SplayTree_1_1iterator_1ad3b5ad84c1a0138db075e2c61eb83144" prot="public" static="no" mutable="no">
        <type><ref refid="structsplay__tree_1_1SplayTree_1a7ebf6727cb412c312c2da10112ff4db4" kindref="member">Node</ref> *</type>
        <definition>Node * splay_tree::SplayTree&lt; T &gt;::iterator::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" line="73" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" bodystart="73" bodyend="-1"/>
        <referencedby refid="structsplay__tree_1_1SplayTree_1_1iterator_1afdc7a7403ba2e1b78fac2480a82e974f" compoundref="splay__tree_8hpp" startline="72" endline="72">splay_tree::SplayTree&lt; T &gt;::iterator::operator*</referencedby>
        <referencedby refid="structsplay__tree_1_1SplayTree_1_1iterator_1ac7fc8c5b9cf35ae5b350631deda6b3c3" compoundref="splay__tree_8hpp" startline="75" endline="75">splay_tree::SplayTree&lt; T &gt;::iterator::operator==</referencedby>
        <referencedby refid="structsplay__tree_1_1SplayTree_1_1iterator_1a5de551652a02ec33810bc159032be3de" compoundref="splay__tree_8hpp" startline="78" endline="86">splay_tree::SplayTree&lt; T &gt;::iterator::advance</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1a1b2e58809547e4402b8a7ef16ed8253d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void splay_tree::SplayTree&lt; T &gt;::iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" line="70" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1a87fdbf8660f782a32ee209ab7108c0e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void splay_tree::SplayTree&lt; T &gt;::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" line="71" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1afdc7a7403ba2e1b78fac2480a82e974f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; splay_tree::SplayTree&lt; T &gt;::iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" line="72" column="9" bodyfile="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" bodystart="72" bodyend="72"/>
        <references refid="structsplay__tree_1_1SplayTree_1_1iterator_1ad3b5ad84c1a0138db075e2c61eb83144" compoundref="splay__tree_8hpp" startline="73">splay_tree::SplayTree&lt; T &gt;::iterator::node</references>
        <references refid="structsplay__tree_1_1SplayNode_1aeb587346f51a8c188a0cf74da7770be4" compoundref="splay__tree_8hpp" startline="12">splay_tree::SplayNode&lt; T, has_link_cut &gt;::value</references>
      </memberdef>
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1ab0ea6ed296b79fa203a92992006448ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>splay_tree::SplayTree&lt; T &gt;::iterator::iterator</definition>
        <argsstring>(Node *node_arg)</argsstring>
        <name>iterator</name>
        <param>
          <type><ref refid="structsplay__tree_1_1SplayTree_1a7ebf6727cb412c312c2da10112ff4db4" kindref="member">Node</ref> *</type>
          <declname>node_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" line="74" column="1" bodyfile="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1ac7fc8c5b9cf35ae5b350631deda6b3c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool splay_tree::SplayTree&lt; T &gt;::iterator::operator==</definition>
        <argsstring>(const iterator oth) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structsplay__tree_1_1SplayTree_1_1iterator" kindref="compound">iterator</ref></type>
          <declname>oth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" line="75" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" bodystart="75" bodyend="75"/>
        <references refid="structsplay__tree_1_1SplayTree_1_1iterator_1ad3b5ad84c1a0138db075e2c61eb83144" compoundref="splay__tree_8hpp" startline="73">splay_tree::SplayTree&lt; T &gt;::iterator::node</references>
      </memberdef>
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1a1b2e58809547e4402b8a7ef16ed8253d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void splay_tree::SplayTree&lt; T &gt;::iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/test/test_compiled.cpp" line="2118" column="6" bodyfile="/home/ram/OmniTemplate/src/test/test_compiled.cpp" bodystart="2118" bodyend="2118"/>
      </memberdef>
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1a87fdbf8660f782a32ee209ab7108c0e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void splay_tree::SplayTree&lt; T &gt;::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/test/test_compiled.cpp" line="2119" column="6" bodyfile="/home/ram/OmniTemplate/src/test/test_compiled.cpp" bodystart="2119" bodyend="2119"/>
      </memberdef>
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1afdc7a7403ba2e1b78fac2480a82e974f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; splay_tree::SplayTree&lt; T &gt;::iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/test/test_compiled.cpp" line="2120" column="9" bodyfile="/home/ram/OmniTemplate/src/test/test_compiled.cpp" bodystart="2120" bodyend="2120"/>
      </memberdef>
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1ab0ea6ed296b79fa203a92992006448ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>splay_tree::SplayTree&lt; T &gt;::iterator::iterator</definition>
        <argsstring>(Node *node_arg)</argsstring>
        <name>iterator</name>
        <param>
          <type><ref refid="structsplay__tree_1_1SplayTree_1a7ebf6727cb412c312c2da10112ff4db4" kindref="member">Node</ref> *</type>
          <declname>node_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/test/test_compiled.cpp" line="2122" column="1" bodyfile="/home/ram/OmniTemplate/src/test/test_compiled.cpp" bodystart="2122" bodyend="2122"/>
      </memberdef>
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1ac7fc8c5b9cf35ae5b350631deda6b3c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool splay_tree::SplayTree&lt; T &gt;::iterator::operator==</definition>
        <argsstring>(const iterator oth) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structsplay__tree_1_1SplayTree_1_1iterator" kindref="compound">iterator</ref></type>
          <declname>oth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/test/test_compiled.cpp" line="2123" column="6" bodyfile="/home/ram/OmniTemplate/src/test/test_compiled.cpp" bodystart="2123" bodyend="2123"/>
        <references refid="structsplay__tree_1_1SplayTree_1_1iterator_1ad3b5ad84c1a0138db075e2c61eb83144" compoundref="splay__tree_8hpp" startline="73">splay_tree::SplayTree&lt; T &gt;::iterator::node</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1a5de551652a02ec33810bc159032be3de" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>dir</declname>
            <defname>dir</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void splay_tree::SplayTree&lt; T &gt;::iterator::advance</definition>
        <argsstring>()</argsstring>
        <name>advance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" line="78" column="18" bodyfile="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" bodystart="78" bodyend="86"/>
        <references refid="structsplay__tree_1_1SplayNode_1a6aa336f7fa7dcd6d509cdb8bbf9967ee" compoundref="splay__tree_8hpp" startline="13">splay_tree::SplayNode&lt; T, has_link_cut &gt;::child</references>
        <references refid="structsplay__tree_1_1SplayTree_1_1iterator_1ad3b5ad84c1a0138db075e2c61eb83144" compoundref="splay__tree_8hpp" startline="73">splay_tree::SplayTree&lt; T &gt;::iterator::node</references>
        <references refid="structsplay__tree_1_1SplayNode_1a543aa24b599c0efa494914be781a2435" compoundref="splay__tree_8hpp" startline="14">splay_tree::SplayNode&lt; T, has_link_cut &gt;::parent</references>
        <references refid="structsplay__tree_1_1SplayNode_1a73de7d8fe94fc66a6a43427751e8a546" compoundref="splay__tree_8hpp" startline="15" endline="18">splay_tree::SplayNode&lt; T, has_link_cut &gt;::side</references>
      </memberdef>
      <memberdef kind="function" id="structsplay__tree_1_1SplayTree_1_1iterator_1a5de551652a02ec33810bc159032be3de" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>dir</declname>
            <defname>dir</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void splay_tree::SplayTree&lt; T &gt;::iterator::advance</definition>
        <argsstring>()</argsstring>
        <name>advance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/test/test_compiled.cpp" line="2126" column="18" bodyfile="/home/ram/OmniTemplate/src/test/test_compiled.cpp" bodystart="2126" bodyend="2134"/>
        <references refid="structsplay__tree_1_1SplayNode_1a6aa336f7fa7dcd6d509cdb8bbf9967ee" compoundref="splay__tree_8hpp" startline="13">splay_tree::SplayNode&lt; T, has_link_cut &gt;::child</references>
        <references refid="structsplay__tree_1_1SplayNode_1a543aa24b599c0efa494914be781a2435" compoundref="splay__tree_8hpp" startline="14">splay_tree::SplayNode&lt; T, has_link_cut &gt;::parent</references>
        <references refid="structsplay__tree_1_1SplayNode_1a73de7d8fe94fc66a6a43427751e8a546" compoundref="splay__tree_8hpp" startline="15" endline="18">splay_tree::SplayNode&lt; T, has_link_cut &gt;::side</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Splay tree node. </para>
    </briefdescription>
    <detaileddescription>
<para>Splay tree iterator </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>it_base&lt; T &gt;</label>
        <link refid="structit__base"/>
      </node>
      <node id="1">
        <label>splay_tree::SplayTree&lt; T &gt;::iterator</label>
        <link refid="structsplay__tree_1_1SplayTree_1_1iterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>T</label>
      </node>
      <node id="6">
        <label>std::array&lt; T &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>it_base&lt; T &gt;</label>
        <link refid="structit__base"/>
      </node>
      <node id="3">
        <label>splay_tree::SplayNode&lt; T, has_link_cut &gt;</label>
        <link refid="structsplay__tree_1_1SplayNode"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>child</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::array&lt; splay_tree::SplayNode *, 2 &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; splay_tree::SplayNode *, 2 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>splay_tree::SplayTree&lt; T &gt;::iterator</label>
        <link refid="structsplay__tree_1_1SplayTree_1_1iterator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>conditional_t&lt; false , PathParent&lt; SplayNode&lt; T, false  &gt; &gt;, Empty &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" line="66" column="1" bodyfile="/home/ram/OmniTemplate/src/ds/splay_tree.hpp" bodystart="66" bodyend="87"/>
    <listofallmembers>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1a5de551652a02ec33810bc159032be3de" prot="private" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>advance</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1a5de551652a02ec33810bc159032be3de" prot="private" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>advance</name></member>
      <member refid="structit__base_1a2f441c3115c3b785aedc6816276d7511" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>difference_type</name></member>
      <member refid="structit__base_1a2f441c3115c3b785aedc6816276d7511" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>difference_type</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1ab0ea6ed296b79fa203a92992006448ea" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>iterator</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1ab0ea6ed296b79fa203a92992006448ea" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>iterator</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1a69bb5a2446e8219c0eca5b6791272e23" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>iterator_category</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1a69bb5a2446e8219c0eca5b6791272e23" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>iterator_category</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1ad3b5ad84c1a0138db075e2c61eb83144" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>node</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1afdc7a7403ba2e1b78fac2480a82e974f" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>operator*</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1afdc7a7403ba2e1b78fac2480a82e974f" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>operator*</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1a87fdbf8660f782a32ee209ab7108c0e8" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>operator++</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1a87fdbf8660f782a32ee209ab7108c0e8" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>operator++</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1a1b2e58809547e4402b8a7ef16ed8253d" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>operator--</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1a1b2e58809547e4402b8a7ef16ed8253d" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>operator--</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1ac7fc8c5b9cf35ae5b350631deda6b3c3" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>operator==</name></member>
      <member refid="structsplay__tree_1_1SplayTree_1_1iterator_1ac7fc8c5b9cf35ae5b350631deda6b3c3" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>operator==</name></member>
      <member refid="structit__base_1aff4e3754839c1106ced2e57a47d44425" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>pointer</name></member>
      <member refid="structit__base_1aff4e3754839c1106ced2e57a47d44425" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>pointer</name></member>
      <member refid="structit__base_1a65ea2a2492ba8ae44a336fd192f5ff2a" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>reference</name></member>
      <member refid="structit__base_1a65ea2a2492ba8ae44a336fd192f5ff2a" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>reference</name></member>
      <member refid="structit__base_1a750730b3baf6464b16f1483c656f5dce" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>value_type</name></member>
      <member refid="structit__base_1a750730b3baf6464b16f1483c656f5dce" prot="public" virt="non-virtual"><scope>splay_tree::SplayTree::iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
