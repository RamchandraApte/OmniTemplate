<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="program__listing__file__my__int_8hpp_8rst_8txt" kind="file" language="C++">
    <compoundname>program_listing_file_my_int.hpp.rst.txt</compoundname>
    <includes refid="core_8hpp" local="yes">core.hpp</includes>
    <incdepgraph>
      <node id="3">
        <label>bits/stdc++.h</label>
      </node>
      <node id="6">
        <label>io.hpp</label>
        <link refid="io_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>experimental/source_location</label>
      </node>
      <node id="1">
        <label>docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt</label>
        <link refid="program__listing__file__my__int_8hpp_8rst_8txt"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>experimental/iterator</label>
      </node>
      <node id="10">
        <label>utility.hpp</label>
        <link refid="utility_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>debug.hpp</label>
        <link refid="debug_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>range.hpp</label>
        <link refid="range_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core.hpp</label>
        <link refid="core_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>operations.hpp</label>
        <link refid="operations_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structstd_1_1hash_3_01ll_01_4" prot="public">std::hash&lt; ll &gt;</innerclass>
    <innerclass refid="structstd_1_1is__integral_3_01ll_01_4" prot="public">std::is_integral&lt; ll &gt;</innerclass>
    <innerclass refid="structstd_1_1is__unsigned_3_01ll_01_4" prot="public">std::is_unsigned&lt; ll &gt;</innerclass>
    <innerclass refid="structstd_1_1is__signed_3_01ll_01_4" prot="public">std::is_signed&lt; ll &gt;</innerclass>
    <innerclass refid="structstd_1_1numeric__limits_3_01ll_01_4" prot="public">std::numeric_limits&lt; ll &gt;</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="program__listing__file__my__int_8hpp_8rst_8txt_1a896acbe39c98c053f809a8001774ab6f" prot="public" static="no">
        <name>opi</name>
        <param><defname>type</defname></param>
        <initializer>operator type() { return x; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="22" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__my__int_8hpp_8rst_8txt_1a6f517c16e8b3947a66f2bf27bc3173e9" prot="public" static="no">
        <name>MIX128</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="47" column="20" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__my__int_8hpp_8rst_8txt_1a36d34dc408fc2b97bca91bf466563f18" prot="public" static="no">
        <name>mix1</name>
        <param><defname>op</defname></param>
        <param><defname>T1</defname></param>
        <param><defname>T2</defname></param>
        <initializer>       constexpr auto operator op(T1 a, T2 b) {                               \
           return static_cast&lt;<ref refid="structll" kindref="compound">ll</ref>&gt;(a) op static_cast&lt;<ref refid="structll" kindref="compound">ll</ref>&gt;(b);               \
       }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="49" column="16" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__my__int_8hpp_8rst_8txt_1a7ab6bf7557d5b999f7339d4cfc7cb4b6" prot="public" static="no">
        <name>mix</name>
        <param><defname>op</defname></param>
        <param><defname>T1</defname></param>
        <param><defname>T2</defname></param>
        <initializer>mix1(op, T1, T2) mix1(op, T2, T1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="53" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__my__int_8hpp_8rst_8txt_1abb7191c40253fd9cd6cd664fd6db5271" prot="public" static="no">
        <name>mixll</name>
        <param><defname>op</defname></param>
        <initializer>       mix(op, <ref refid="structll" kindref="compound">ll</ref>, int) mix(op, <ref refid="structll" kindref="compound">ll</ref>, lli) MIX128(op, <ref refid="structll" kindref="compound">ll</ref>) mix(op, <ref refid="structll" kindref="compound">ll</ref>, size_t)   \
           mix(op, <ref refid="structll" kindref="compound">ll</ref>, double)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="54" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__my__int_8hpp_8rst_8txt_1a2c978e12b0aa097e3f8dc633e68451d7" prot="public" static="no">
        <name>bill</name>
        <param><defname>op</defname></param>
        <initializer>       constexpr <ref refid="structll" kindref="compound">ll</ref> operator op(<ref refid="structll" kindref="compound">ll</ref> const &amp;a, <ref refid="structll" kindref="compound">ll</ref> const &amp;b) {                   \
           return lli(a) op lli(b);                                       \
       }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="57" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__my__int_8hpp_8rst_8txt_1a33e977ac03b44c7fb6b3f74dae8b2eb6" prot="public" static="no">
        <name>inh</name>
        <param><defname>cls</defname></param>
        <initializer>template &lt;&gt; struct cls&lt;<ref refid="structll" kindref="compound">ll</ref>&gt; : cls&lt;lli&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="85" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="program__listing__file__my__int_8hpp_8rst_8txt_1a400088ed0d311c618c6c1a126c9e2fef" prot="public" static="no" mutable="no">
        <type>_program_listing_file_my_int</type>
        <definition>_program_listing_file_my_int hpp</definition>
        <argsstring></argsstring>
        <name>hpp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="2" column="30" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1aa32fed950dd4a07bdd0faf177c8a906a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr ll</definition>
        <argsstring>(long long int x_=0)</argsstring>
        <name>ll</name>
        <param>
          <type>long long int</type>
          <declname>x_</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="17" column="18" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ad3e163bcbf32bffc9f8f8caa7dc21291" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr operator auto &amp;</definition>
        <argsstring>()</argsstring>
        <name>operator auto &amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="18" column="18" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1abded77bd24c296c757edaab6e3a5d41d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr operator lli</definition>
        <argsstring>() const</argsstring>
        <name>operator lli</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="19" column="18" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a36b27fb209300afe6bdc0aa5a82f7da2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="29" column="21" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a3bad6a7653adecca3f8554c83d5675c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="30" column="11" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1af15865569d246fcdb6fbaa32eb18d294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="34" column="11" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a49ed6f2f898db53e00474cf4274b48d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll operator+=</definition>
        <argsstring>(ll b)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="38" column="11" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1adc9ca497c254909c83f973aa03b0e1c4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator+</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="61" column="17" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1af2b3846e8acafcb6f3213db0c0036252" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator*</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="61" column="80" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1aaa2f10d451711a02282b53f8d67322a9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator|</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator|</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="61" column="143" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a9b2eee581ee9ecf1605147ab0c35c575" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator&amp;</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="61" column="206" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ac6d529776051928bfb80844daec345a9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator^</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator^</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="61" column="269" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a0516ee37ba1334020c90320aedd2392b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator&lt;&lt;</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="61" column="329" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a969b32b65ba433b56130ae656df66052" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator&gt;&gt;</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="61" column="395" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a16edb2064180aa002b50c0df6971ac76" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator/</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="62" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a1ad47cb4e54d783e97787f2d8180b26b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="66" column="14" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1addc2b513488b556dc2d53112f6c54dcf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="67" column="19" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a89411724456b37f74a3b6bab8e7a7603" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator%</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="68" column="17" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1acd91be1fddd6cfafd08f6ec8bb5efcd1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="19" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a2f9f062714f104ffaac089296845069a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator+</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="108" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ac756b87403c4ba471750867eadf8994b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(ll a, lli b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>lli</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="197" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ac6a8fe9e3fde003ba107e264ebad7dca" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(lli a, ll b)</argsstring>
        <name>operator+</name>
        <param>
          <type>lli</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="286" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a89863f5d564a94c728d284514f71a09a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="376" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ac1023414d318d3a6439d3a2567399a30" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator+</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="465" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a3b63b23737ed9e91a2b7339f284d96e6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="556" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a0da77df2e89895ba1b7d7c562479461c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator+</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="645" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1abb749cbfaa17d7b386e253b603485998" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="734" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a5596c417bb97bd74960e4cca33d13880" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator/</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="822" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a833e2f67fb010c39008962137d8237ec" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(ll a, lli b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>lli</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="910" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1aed40130cba94c26f07c02d9eacded7b2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(lli a, ll b)</argsstring>
        <name>operator/</name>
        <param>
          <type>lli</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="998" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a5f6edf8dca5afc643d6e72e57699730f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1087" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a87683aa0c8ee0cdccaead85b3e2b8d90" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator/</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1175" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a9f41bc653534f4f6203630517f2156f6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1265" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a142f763bbb1736a76b95130b8d2d8b1a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1353" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a5158155b3a836df54586f2350d91cbab" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1441" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a750ea4d1fdd157fbcb04741a1545f6e6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1530" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a169f6ba357752382f1b30e76ecdcb036" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(ll a, lli b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>lli</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1619" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a3be6241d1f94d6141fa062918a691ca7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(lli a, ll b)</argsstring>
        <name>operator*</name>
        <param>
          <type>lli</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1708" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1aabc85797b453ca213dbd7abbf945056c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1798" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a5612b2793a4532fe9970c5d2a114d6ec" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator*</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1887" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a2a8768cedd8e538507499220371852be" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="1978" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a43ffab71ec13580985a070ea33d08df0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2067" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a7c36efcf569faf3715e418d3da1db17a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2151" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a87859c8d35163e9e4758aa01fd520407" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2239" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a4605084592ea2d75848714e17b8ef7dd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(ll a, lli b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>lli</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2327" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ae97b254f1f4f72a9e5b76a44aa054524" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(lli a, ll b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>lli</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2415" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a7ea748b99bb21ae495717f64bbdcf4e6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2504" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1abe88c83cf5dc9b46884a1b2bc8183e68" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2592" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a7781b25df43bf46926920191911d737b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2682" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1adb176a0734aa2cfd1449982c44fce144" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2770" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ad3d70e11768093396bb23339c8ac82eb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2863" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a142f9bffdd11b6d2ff259b27ded735b3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator==</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="2954" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1afbabea4a994a0389f619733ee918219a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(ll a, lli b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>lli</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3045" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a64e01e17d499b77946c8e688b818466e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(lli a, ll b)</argsstring>
        <name>operator==</name>
        <param>
          <type>lli</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3136" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ad6c4a2aed28be9e342d2ad975e4136c6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3228" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a06a48e329f407c401d7828ad830737f0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator==</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3319" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a39bfb6bbc475fabc3fedcdbff48a1bcd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3412" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a9e5a071bceddccdc70270c68e1c62000" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator==</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3503" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a2f032ec489803d91bbecaf05aeae3d02" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3594" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a2bbbee53a572ca55acf8c6a9bd23ac31" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator%</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3683" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a147313b2417a691feb391c2baf28c347" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(ll a, lli b)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>lli</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3772" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1abafcc58e81b283ceaaf7af7353ade545" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(lli a, ll b)</argsstring>
        <name>operator%</name>
        <param>
          <type>lli</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3861" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ab7ba6fcd25875e50ba1b4d58c5636df8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="3951" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ac07363b9ed6f9e81f69ada65d70fb2fe" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator%</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4040" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a5683757111c643b4f25e4bd44c9b43d6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4131" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a25b896413f748b4cfea0899dbfe293df" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator%</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4220" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1afe67594319f62fc54a00ac97fdcfa7cd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4309" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a25cb8d29162de6a8341a162a555178b2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4398" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a89d69125633d95c663d59a823193a41d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(ll a, lli b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>lli</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4487" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1accbea10bc03027a2abf0b86707e72d60" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(lli a, ll b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>lli</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4576" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1aa3e03dfc13fb08fd0890e9891f1d270e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4666" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a750f758fefe8bcd1883904009607c323" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4755" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a4d018945906db6aaaec78c6bb25a8d0c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4846" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a1dabb22258a4f164313783a15aa92326" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="4935" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1adad0fdb7fea444f4b4dc79942382c841" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="5024" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1aab5bf9e75ec2e05f32bfe248f26b2fb2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="5115" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1acc49ae319222c17e7cf7e595b53eb01b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(ll a, lli b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>lli</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="5206" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1aca97a6fb59e04b5702ea11c36f2478d9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(lli a, ll b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>lli</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="5297" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a075c178690dc773422a3aeaf1ffa8173" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="5389" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a3a78b7a4b3e181f7842b4a3775895d7a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="5480" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1acca7da4ef13b9d21d66d02bf959f78d0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="5573" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a5a9bbf4c8dbe708d702ed219b1caa290" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="75" column="5664" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a5038197ce9c31f52268a7d69042fbeff" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="76" column="18" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a3bf6f579bb3c901a70403ff474880bea" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="76" column="107" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a8eb2fa309b61ab53227386a3cf75a491" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(ll a, lli b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>lli</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="76" column="196" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a3b06d3d1807c2588bded865be3cdb3b1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(lli a, ll b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>lli</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="76" column="285" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a514556e3fea9889325683b6d0d0b39b9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="76" column="375" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1aa6336f6e0326e004c4e921f41742977c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="76" column="464" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ad4ffdd1b37e291ac1fa1c42f6c6e02f3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="76" column="555" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ac45054cf258d397a92db203450fc4e25" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="76" column="644" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1a65931ffae276ba2eac94c8ba0294829b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>auto &amp;</type>
        <definition>auto&amp; operator&lt;&lt;</definition>
        <argsstring>(Stream &amp;os, ll const &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="79" column="8" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ae6bb4b1c502150862dc1bd720dddd1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll operator&quot;&quot;_ll</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ll</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="82" column="7" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__my__int_8hpp_8rst_8txt_1ab40cf8d960a2bfa49f09a97ed15c056d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto ceil_div</definition>
        <argsstring>(ll x, ll y)</argsstring>
        <name>ceil_div</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" line="83" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt" bodystart="83" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal">..<sp/>_program_listing_file_my_int.hpp:</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">Program<sp/>Listing<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>File<sp/>my_int.hpp</highlight></codeline>
<codeline lineno="5"><highlight class="normal">===================================</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">|exhale_lsh|<sp/>:ref:`Return<sp/>to<sp/>documentation<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>file<sp/>&lt;file_my_int.hpp&gt;`<sp/>(``my_int.hpp``)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">..<sp/>|exhale_lsh|<sp/>unicode::<sp/>U+021B0<sp/>..<sp/>UPWARDS<sp/>ARROW<sp/>WITH<sp/>TIP<sp/>LEFTWARDS</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">..<sp/>code-block::<sp/>cpp</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/>#pragma<sp/>once</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>#include<sp/></highlight><highlight class="stringliteral">&quot;core.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lli<sp/>x;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structll" kindref="compound">ll</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_<sp/>=<sp/>0)<sp/>:<sp/>x(x_)<sp/>{}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>lli()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>=<sp/>enable_if_t&lt;is_integral&lt;T&gt;::value,<sp/>void&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>=<sp/>enable_if_t&lt;is_integral&lt;T&gt;::value,<sp/>void&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>opi(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator<sp/>type()<sp/>{<sp/>return<sp/>x;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>opi(double);opi(int);opi(size_t);opi(long<sp/>double);opi(unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int);opi(bool);<sp/>constexpr<sp/>operator<sp/>T()<sp/>const{return<sp/>x;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*operator<sp/>bool()<sp/>const{return<sp/>x;}</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator<sp/>size_t()<sp/>const<sp/>{return<sp/>x;}</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator<sp/>int128()<sp/>const<sp/>{return<sp/>x;}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>operator-()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-x;<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>operator--()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--x;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>operator++()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++x;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>operator+=(<ref refid="structll" kindref="compound">ll</ref><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+=<sp/>b.x;<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>__SIZEOF_INT128__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>int128<sp/>=<sp/>__int128;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>uint128<sp/>=<sp/>__uint128_t;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>__SIZEOF_INT128__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>MIX128(op,<sp/>T1)<sp/>mix(op,<sp/>T1,<sp/>int128)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>MIX128(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>mix1(op,<sp/>T1,<sp/>T2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>operator<sp/>op(T1<sp/>a,<sp/>T2<sp/>b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>static_cast&lt;ll&gt;(a)<sp/>op<sp/>static_cast&lt;ll&gt;(b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>mix(op,<sp/>T1,<sp/>T2)<sp/>mix1(op,<sp/>T1,<sp/>T2)<sp/>mix1(op,<sp/>T2,<sp/>T1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>mixll(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mix(op,<sp/>ll,<sp/>int)<sp/>mix(op,<sp/>ll,<sp/>lli)<sp/>MIX128(op,<sp/>ll)<sp/>mix(op,<sp/>ll,<sp/>size_t)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mix(op,<sp/>ll,<sp/>double)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>bill(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>ll<sp/>operator<sp/>op(ll<sp/>const<sp/>&amp;a,<sp/>ll<sp/>const<sp/>&amp;b)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>lli(a)<sp/>op<sp/>lli(b);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>bill(+)<sp/>bill(*)<sp/>bill(|)<sp/>bill(&amp;)<sp/>bill(^)<sp/>bill(&lt;&lt;)<sp/>bill(&gt;&gt;)<sp/>constexpr<sp/><ref refid="structll" kindref="compound">ll</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>operator/(<ref refid="structll" kindref="compound">ll</ref><sp/>const<sp/>&amp;a,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>const<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lli<sp/>x<sp/>=<sp/>lli(a)<sp/>/<sp/>lli(b),<sp/>r<sp/>=<sp/>lli(a)<sp/>%<sp/>lli(b);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>-<sp/>((x<sp/>&lt;<sp/>0)<sp/>&amp;&amp;<sp/>r);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator&lt;(<ref refid="structll" kindref="compound">ll</ref><sp/>a,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lli(a)<sp/>&lt;<sp/>lli(b);<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator==(<ref refid="structll" kindref="compound">ll</ref><sp/>a,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lli(a)<sp/>==<sp/>lli(b);<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>constexpr<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>operator%(<ref refid="structll" kindref="compound">ll</ref><sp/>a,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lli<sp/>x<sp/>=<sp/>lli(a)<sp/>%<sp/>lli(b);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lli(x)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>lli(b);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>mixll(+)<sp/>mixll(/)<sp/>mixll(*)<sp/>mixll(&lt;)<sp/>mixll(==)<sp/>mixll(%)<sp/>mixll(&amp;)<sp/>mixll(&gt;&gt;)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mixll(&lt;&lt;)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>Stream&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>&amp;operator&lt;&lt;(Stream<sp/>&amp;os,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>const<sp/>&amp;a)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>a.x;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ll(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ceil_div(<ref refid="structll" kindref="compound">ll</ref><sp/>x,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>+<sp/>y<sp/>-<sp/>1)<sp/>/<sp/>y;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>inh(cls)<sp/>template<sp/>&lt;&gt;<sp/>struct<sp/>cls&lt;ll&gt;<sp/>:<sp/>cls&lt;lli&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structstd_1_1hash_3_01ll_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/>inh(hash)<sp/>{<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>hash&lt;lli&gt;::hash;<sp/>};</highlight></codeline>
<codeline lineno="87" refid="structstd_1_1is__integral_3_01ll_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/>inh(is_integral){};</highlight></codeline>
<codeline lineno="88" refid="structstd_1_1is__unsigned_3_01ll_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/>inh(is_unsigned){};</highlight></codeline>
<codeline lineno="89" refid="structstd_1_1is__signed_3_01ll_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/>inh(is_signed){};</highlight></codeline>
<codeline lineno="90" refid="structstd_1_1numeric__limits_3_01ll_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/>inh(numeric_limits){};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ll_t,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>enable_if_t&lt;is_same_v&lt;ll_t,<sp/>ll&gt;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator+(T<sp/>a,<sp/>ll_t<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>lli(b);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>std</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="docs/_build/html/_sources/api/program_listing_file_my_int.hpp.rst.txt"/>
  </compounddef>
</doxygen>
