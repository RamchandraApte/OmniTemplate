<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structlazy__ptr" kind="struct" language="C++" prot="public">
    <compoundname>lazy_ptr</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structlazy__ptr_1a4cfd0fda110740dadc3bbe91d58bc290" prot="public" static="no" mutable="yes">
        <type>T *</type>
        <definition>T* lazy_ptr&lt; T &gt;::ptr</definition>
        <argsstring></argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="70" column="11" bodyfile="seg_old.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structlazy__ptr_1a23198f24df77a8c13e4e505161c7b731" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto lazy_ptr&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="71" column="6" bodyfile="seg_old.hpp" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structlazy__ptr_1a8067d4abb926381d2112c94e38f23f47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lazy_ptr&lt; T &gt;::lazy_ptr</definition>
        <argsstring>()</argsstring>
        <name>lazy_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="77" column="1" bodyfile="seg_old.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structlazy__ptr_1aa656ca4583a15e622f958b9b1a31a595" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; lazy_ptr&lt; T &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="78" column="6" bodyfile="seg_old.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structlazy__ptr_1abb09deaf76afd329d3c1028305ee271d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>lazy_ptr&lt; T &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="79" column="1" bodyfile="seg_old.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="seg_old.hpp" line="69" column="30" bodyfile="seg_old.hpp" bodystart="69" bodyend="80"/>
    <listofallmembers>
      <member refid="structlazy__ptr_1a8067d4abb926381d2112c94e38f23f47" prot="public" virt="non-virtual"><scope>lazy_ptr</scope><name>lazy_ptr</name></member>
      <member refid="structlazy__ptr_1abb09deaf76afd329d3c1028305ee271d" prot="public" virt="non-virtual"><scope>lazy_ptr</scope><name>operator bool</name></member>
      <member refid="structlazy__ptr_1aa656ca4583a15e622f958b9b1a31a595" prot="public" virt="non-virtual"><scope>lazy_ptr</scope><name>operator*</name></member>
      <member refid="structlazy__ptr_1a23198f24df77a8c13e4e505161c7b731" prot="public" virt="non-virtual"><scope>lazy_ptr</scope><name>operator-&gt;</name></member>
      <member refid="structlazy__ptr_1a4cfd0fda110740dadc3bbe91d58bc290" prot="public" virt="non-virtual"><scope>lazy_ptr</scope><name>ptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
