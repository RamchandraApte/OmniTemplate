<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacecombinatorics" kind="namespace" language="C++">
    <compoundname>combinatorics</compoundname>
    <innernamespace refid="namespacecombinatorics_1_1test">combinatorics::test</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacecombinatorics_1a7c355be8fa586494f280768dc777dede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T combinatorics::perm</definition>
        <argsstring>(const T a, const T b)</argsstring>
        <name>perm</name>
        <param>
          <type>const T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Return <formula id="9">$P(a,b)$</formula>, the falling factorial.</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" line="5" column="15" bodyfile="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" bodystart="5" bodyend="9"/>
        <references refid="operations_8hpp_1ae86f895524ffa6600dff36bf09bcb63d" compoundref="operations_8hpp" startline="62">b</references>
        <referencedby refid="namespacecombinatorics_1a24ea271b6415a4679e019562f474d88f" compoundref="combinatorics_8hpp" startline="14" endline="17">choose</referencedby>
        <referencedby refid="namespacecombinatorics_1a20e5a1b40f76572aa1e18b228b6e4849" compoundref="combinatorics_8hpp" startline="10" endline="13">fact</referencedby>
        <referencedby refid="namespacecombinatorics_1_1test_1afa19fd10b0370b61660f897eb66f8875" compoundref="test__combinatorics_8hpp" startline="4" endline="11">combinatorics::test::test_perm</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecombinatorics_1a20e5a1b40f76572aa1e18b228b6e4849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T combinatorics::fact</definition>
        <argsstring>(const T n)</argsstring>
        <name>fact</name>
        <param>
          <type>const T</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Return the factorial of n, i.e. <formula id="10">$n!$</formula>.</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" line="10" column="15" bodyfile="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" bodystart="10" bodyend="13"/>
        <references refid="namespacecombinatorics_1a7c355be8fa586494f280768dc777dede" compoundref="combinatorics_8hpp" startline="5" endline="9">perm</references>
        <referencedby refid="namespacecombinatorics_1a24ea271b6415a4679e019562f474d88f" compoundref="combinatorics_8hpp" startline="14" endline="17">choose</referencedby>
        <referencedby refid="namespacecombinatorics_1_1test_1a8936aa7ea767d4ccba752f2a5c54785f" compoundref="test__combinatorics_8hpp" startline="12" endline="17">combinatorics::test::test_fact</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecombinatorics_1a24ea271b6415a4679e019562f474d88f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T combinatorics::choose</definition>
        <argsstring>(const T a, const T b)</argsstring>
        <name>choose</name>
        <param>
          <type>const T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Returns a choose b, i.e. <formula id="11">$\binom{a}{b}$</formula></para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" line="14" column="15" bodyfile="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" bodystart="14" bodyend="17"/>
        <references refid="operations_8hpp_1ae86f895524ffa6600dff36bf09bcb63d" compoundref="operations_8hpp" startline="62">b</references>
        <references refid="namespacecombinatorics_1a20e5a1b40f76572aa1e18b228b6e4849" compoundref="combinatorics_8hpp" startline="10" endline="13">fact</references>
        <references refid="namespacecombinatorics_1a7c355be8fa586494f280768dc777dede" compoundref="combinatorics_8hpp" startline="5" endline="9">perm</references>
        <referencedby refid="namespacecombinatorics_1_1test_1a02b85c66d33799029d94ecfbb7c8b062" compoundref="test__combinatorics_8hpp" startline="18" endline="27">combinatorics::test::test_choose</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Combinatorics header. </para>
    </detaileddescription>
    <location file="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" line="4" column="30"/>
  </compounddef>
</doxygen>
