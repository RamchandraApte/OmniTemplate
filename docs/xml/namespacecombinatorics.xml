<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="namespacecombinatorics" kind="namespace" language="C++">
    <compoundname>combinatorics</compoundname>
    <innernamespace refid="namespacecombinatorics_1_1test">combinatorics::test</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacecombinatorics_1a7c355be8fa586494f280768dc777dede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T combinatorics::perm</definition>
        <argsstring>(const T a, const T b)</argsstring>
        <name>perm</name>
        <param>
          <type>const T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Return <formula id="9">$P(a,b)$</formula>, the falling factorial.</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" line="6" column="15" bodyfile="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" bodystart="6" bodyend="9"/>
        <references refid="namespaceutility_1a547ec88ecb50fe12150a8d293de2ce75" compoundref="utility_8hpp" startline="177" endline="179">utility::accumulate</references>
        <referencedby refid="namespacecombinatorics_1a24ea271b6415a4679e019562f474d88f" compoundref="combinatorics_8hpp" startline="15" endline="18">choose</referencedby>
        <referencedby refid="namespacecombinatorics_1a20e5a1b40f76572aa1e18b228b6e4849" compoundref="combinatorics_8hpp" startline="10" endline="13">fact</referencedby>
        <referencedby refid="namespacepermutation_1a4c6e81c9c25d20631e5b1a63edeedb74" compoundref="permutation_8hpp" startline="52" endline="52">permutation::identity</referencedby>
        <referencedby refid="test__biconnected_8hpp_1a48fe6b184e236d8a81058e4d85ff49c3" compoundref="test__biconnected_8hpp" startline="3" endline="12">permute</referencedby>
        <referencedby refid="namespacepermutation_1ade64590f0931d6f5d80521cdf52e4bed" compoundref="permutation_8hpp" startline="81" endline="83">permutation::power</referencedby>
        <referencedby refid="namespacestring__tools_1af59e7388a466fccce148991db2eb61db" compoundref="suffix__array_8hpp" startline="6" endline="44">string_tools::suffix_array</referencedby>
        <referencedby refid="namespacestring__tools_1_1test_1ae99e912d4303fb69fb94d5197acfb0fa" compoundref="test__suffix__array_8hpp" startline="3" endline="8">string_tools::test::suffix_array_naive</referencedby>
        <referencedby refid="test__biconnected_8hpp_1a07c975aa9b96f7bdb70155ae0c3acd17" compoundref="test__biconnected_8hpp" startline="23" endline="112">test_biconnected</referencedby>
        <referencedby refid="namespacepermutation_1_1test_1a77ed30fee0c9874f9763b5665ee273b4" compoundref="test__permutation_8hpp" startline="12" endline="14">permutation::test::test_cycles_impl</referencedby>
        <referencedby refid="namespacecombinatorics_1_1test_1afa19fd10b0370b61660f897eb66f8875" compoundref="test__combinatorics_8hpp" startline="4" endline="11">combinatorics::test::test_perm</referencedby>
        <referencedby refid="namespacepermutation_1_1test_1a79866de5f43125b4ac233cdc1bae579e" compoundref="test__permutation_8hpp" startline="20" endline="24">permutation::test::test_power</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecombinatorics_1a20e5a1b40f76572aa1e18b228b6e4849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T combinatorics::fact</definition>
        <argsstring>(const T n)</argsstring>
        <name>fact</name>
        <param>
          <type>const T</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Return the factorial of n, i.e. <formula id="10">$n!$</formula>.</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" line="10" column="15" bodyfile="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" bodystart="10" bodyend="13"/>
        <references refid="namespacecombinatorics_1a7c355be8fa586494f280768dc777dede" compoundref="combinatorics_8hpp" startline="6" endline="9">perm</references>
        <referencedby refid="namespacecombinatorics_1a24ea271b6415a4679e019562f474d88f" compoundref="combinatorics_8hpp" startline="15" endline="18">choose</referencedby>
        <referencedby refid="namespacecombinatorics_1_1test_1a8936aa7ea767d4ccba752f2a5c54785f" compoundref="test__combinatorics_8hpp" startline="12" endline="17">combinatorics::test::test_fact</referencedby>
        <referencedby refid="number__theory_8hpp_1af0753ff92c84e6924e1fd6461e77b16f" compoundref="number__theory_8hpp" startline="106" endline="113">totient</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacecombinatorics_1a24ea271b6415a4679e019562f474d88f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T combinatorics::choose</definition>
        <argsstring>(const T a, const T b)</argsstring>
        <name>choose</name>
        <param>
          <type>const T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Returns a choose b, i.e. <formula id="11">$\binom{a}{b}$</formula></para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" line="15" column="15" bodyfile="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" bodystart="15" bodyend="18"/>
        <references refid="namespacecombinatorics_1a20e5a1b40f76572aa1e18b228b6e4849" compoundref="combinatorics_8hpp" startline="10" endline="13">fact</references>
        <references refid="namespacecombinatorics_1a7c355be8fa586494f280768dc777dede" compoundref="combinatorics_8hpp" startline="6" endline="9">perm</references>
        <referencedby refid="namespacecombinatorics_1_1test_1a02b85c66d33799029d94ecfbb7c8b062" compoundref="test__combinatorics_8hpp" startline="18" endline="27">combinatorics::test::test_choose</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Combinatorics header. </para>
    </detaileddescription>
    <location file="/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp" line="4" column="8"/>
  </compounddef>
</doxygen>
