<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="graph__view_8hpp" kind="file" language="C++">
    <compoundname>graph_view.hpp</compoundname>
    <includes refid="core_2all_8hpp" local="yes">core/all.hpp</includes>
    <includes refid="core_8hpp" local="yes">graph/core.hpp</includes>
    <includedby refid="graph_2all_8hpp" local="yes">/home/ram/OmniTemplate/src/graph/all.hpp</includedby>
    <includedby refid="centroid_8hpp" local="yes">/home/ram/OmniTemplate/src/graph/tree/centroid.hpp</includedby>
    <incdepgraph>
      <node id="32">
        <label>number_theory/modulo.hpp</label>
        <link refid="modulo_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="14">
        <label>queue</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>numeric</label>
      </node>
      <node id="33">
        <label>polynomial.hpp</label>
        <link refid="polynomial_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>algebra/linear_algebra.hpp</label>
        <link refid="linear__algebra_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>experimental/source_location</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="26">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>unordered_set</label>
      </node>
      <node id="24">
        <label>experimental/iterator</label>
      </node>
      <node id="9">
        <label>fstream</label>
      </node>
      <node id="30">
        <label>graph/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>random</label>
      </node>
      <node id="4">
        <label>bitset</label>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
      <node id="17">
        <label>stack</label>
      </node>
      <node id="29">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>utility</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="28">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>climits</label>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/graph/graph_view.hpp</label>
        <link refid="graph__view_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>chrono</label>
      </node>
      <node id="18">
        <label>thread</label>
      </node>
      <node id="19">
        <label>type_traits</label>
      </node>
      <node id="16">
        <label>set</label>
      </node>
      <node id="8">
        <label>complex</label>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ds/dsu.hpp</label>
        <link refid="dsu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6">
        <label>/home/ram/OmniTemplate/src/graph/test_all.hpp</label>
        <link refid="test__all_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/ram/OmniTemplate/src/utility/test_graph_draw.hpp</label>
        <link refid="test__graph__draw_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/ram/OmniTemplate/src/graph/tree/test_hld.hpp</label>
        <link refid="test__hld_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/ram/OmniTemplate/src/graph/tree/hld.hpp</label>
        <link refid="hld_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/ram/OmniTemplate/src/test/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="13">
        <label>/home/ram/OmniTemplate/src/graph/tree/test_centroid.hpp</label>
        <link refid="test__centroid_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/ram/OmniTemplate/src/graph/test_2sat.hpp</label>
        <link refid="test__2sat_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/ram/OmniTemplate/src/core/template.hpp</label>
        <link refid="template_8hpp"/>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/src/graph/all.hpp</label>
        <link refid="graph_2all_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/graph/graph_view.hpp</label>
        <link refid="graph__view_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/ram/OmniTemplate/src/graph/2sat.hpp</label>
        <link refid="2sat_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/ram/OmniTemplate/src/graph/tree/centroid.hpp</label>
        <link refid="centroid_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/ram/OmniTemplate/src/utility/graph_draw.hpp</label>
        <link refid="graph__draw_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structSubgraph" prot="public">Subgraph</innerclass>
    <innerclass refid="structSubgraph_1_1iterator" prot="public">Subgraph::iterator</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="graph__view_8hpp_1ac5d2f097a07285733e610a52b16e790b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_graph_view</definition>
        <argsstring>()</argsstring>
        <name>test_graph_view</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/graph_view.hpp" line="43" column="6" bodyfile="/home/ram/OmniTemplate/src/graph/graph_view.hpp" bodystart="43" bodyend="59"/>
        <references refid="structgraph__theory_1_1GraphAdj_1a1893210e27b58b19ec5cbf36a5aeb951" compoundref="core_8hpp" startline="9" endline="12">graph_theory::GraphAdj::add_edge</references>
        <references refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" compoundref="core_2all_8hpp" startline="63">fo</references>
        <referencedby refid="namespacegraph__theory_1_1test_1a147e0cf4f86928e4e422c6b9198a2371" compoundref="test__all_8hpp" startline="73" endline="87">graph_theory::test::test_graph_theory</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2all_8hpp" kindref="compound">core/all.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_8hpp" kindref="compound">graph/core.hpp</ref>&quot;</highlight></codeline>
<codeline lineno="7" refid="structSubgraph" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Graph,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structSubgraph" kindref="compound">Subgraph</ref><sp/>{</highlight></codeline>
<codeline lineno="8" refid="structSubgraph_1a907d9f1d611ffa259c59bde70923e464" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Graph<sp/>&amp;<ref refid="structSubgraph_1a907d9f1d611ffa259c59bde70923e464" kindref="member">graph</ref>;</highlight></codeline>
<codeline lineno="9" refid="structSubgraph_1a920e64e62c7a681239f9944d940c7528" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Pred<sp/>&amp;<ref refid="structSubgraph_1a920e64e62c7a681239f9944d940c7528" kindref="member">pred</ref>;</highlight></codeline>
<codeline lineno="10" refid="structSubgraph_1a0d61932ee9d61d8765fb5694edbcbbbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structSubgraph_1a0d61932ee9d61d8765fb5694edbcbbbd" kindref="member">Subgraph</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Graph<sp/>&amp;graph_arg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Pred<sp/>&amp;pred_arg)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structSubgraph_1a907d9f1d611ffa259c59bde70923e464" kindref="member">graph</ref>{graph_arg},<sp/><ref refid="structSubgraph_1a920e64e62c7a681239f9944d940c7528" kindref="member">pred</ref>{pred_arg}<sp/>{}</highlight></codeline>
<codeline lineno="12" refid="structSubgraph_1_1iterator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structSubgraph_1_1iterator" kindref="compound">iterator</ref><sp/>:<sp/><ref refid="structit__base" kindref="compound">it_base</ref>&lt;ll&gt;<sp/>{</highlight></codeline>
<codeline lineno="13" refid="structSubgraph_1_1iterator_1a7a7cb023f473158d850257096a13d1af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structSubgraph" kindref="compound">Subgraph</ref><sp/>&amp;<ref refid="structSubgraph_1_1iterator_1a7a7cb023f473158d850257096a13d1af" kindref="member">subgraph</ref>;</highlight></codeline>
<codeline lineno="14" refid="structSubgraph_1_1iterator_1a446d48ffd07058bcce4bf3f616a004b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structSubgraph_1_1iterator_1a446d48ffd07058bcce4bf3f616a004b1" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="15" refid="structSubgraph_1_1iterator_1abc88317accab326a6eaf28a9a188b6a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;ll&gt;<sp/>&amp;<ref refid="structSubgraph_1_1iterator_1abc88317accab326a6eaf28a9a188b6a0" kindref="member">adj_list</ref>;</highlight></codeline>
<codeline lineno="16" refid="structSubgraph_1_1iterator_1a9174ae6dfaba16acc3ec7dc1466d13bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;ll&gt;::const_iterator<sp/><ref refid="structSubgraph_1_1iterator_1a9174ae6dfaba16acc3ec7dc1466d13bf" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="17" refid="structSubgraph_1_1iterator_1a25fb1ad469d1925f007e97bf93fa6eaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structSubgraph_1_1iterator_1a25fb1ad469d1925f007e97bf93fa6eaf" kindref="member">iterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structSubgraph" kindref="compound">Subgraph</ref><sp/>&amp;subgraph_arg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>i_arg)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structSubgraph_1_1iterator_1a7a7cb023f473158d850257096a13d1af" kindref="member">subgraph</ref>{subgraph_arg},<sp/><ref refid="structSubgraph_1_1iterator_1a446d48ffd07058bcce4bf3f616a004b1" kindref="member">i</ref>{i_arg},<sp/><ref refid="structSubgraph_1_1iterator_1abc88317accab326a6eaf28a9a188b6a0" kindref="member">adj_list</ref>{<ref refid="structSubgraph_1_1iterator_1a7a7cb023f473158d850257096a13d1af" kindref="member">subgraph</ref>.<ref refid="structSubgraph_1a907d9f1d611ffa259c59bde70923e464" kindref="member">graph</ref>[<ref refid="structSubgraph_1_1iterator_1a446d48ffd07058bcce4bf3f616a004b1" kindref="member">i</ref>]},</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structSubgraph_1_1iterator_1a9174ae6dfaba16acc3ec7dc1466d13bf" kindref="member">it</ref>{<ref refid="structSubgraph_1_1iterator_1abc88317accab326a6eaf28a9a188b6a0" kindref="member">adj_list</ref>.begin()}<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structSubgraph_1_1iterator_1aad7c6ef62b911de3d4074e08da866362" kindref="member">advance</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22" refid="structSubgraph_1_1iterator_1aad7c6ef62b911de3d4074e08da866362" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structSubgraph_1_1iterator_1aad7c6ef62b911de3d4074e08da866362" kindref="member">advance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/><ref refid="structSubgraph_1_1iterator_1a9174ae6dfaba16acc3ec7dc1466d13bf" kindref="member">it</ref><sp/>!=<sp/><ref refid="structSubgraph_1_1iterator_1abc88317accab326a6eaf28a9a188b6a0" kindref="member">adj_list</ref>.end()<sp/>&amp;&amp;<sp/>!<ref refid="structSubgraph_1_1iterator_1a7a7cb023f473158d850257096a13d1af" kindref="member">subgraph</ref>.<ref refid="structSubgraph_1a920e64e62c7a681239f9944d940c7528" kindref="member">pred</ref>(<ref refid="structSubgraph_1_1iterator_1a446d48ffd07058bcce4bf3f616a004b1" kindref="member">i</ref>,<sp/>*<ref refid="structSubgraph_1_1iterator_1a9174ae6dfaba16acc3ec7dc1466d13bf" kindref="member">it</ref>);<sp/>++<ref refid="structSubgraph_1_1iterator_1a9174ae6dfaba16acc3ec7dc1466d13bf" kindref="member">it</ref>)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26" refid="structSubgraph_1_1iterator_1ad228b426b788aff7396333cb2689a2a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structSubgraph_1_1iterator_1ad228b426b788aff7396333cb2689a2a1" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="structSubgraph_1_1iterator_1a9174ae6dfaba16acc3ec7dc1466d13bf" kindref="member">it</ref>;<sp/>}</highlight></codeline>
<codeline lineno="27" refid="structSubgraph_1_1iterator_1a590bacc33ad746829d0b176e0b2fed5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structSubgraph_1_1iterator_1a590bacc33ad746829d0b176e0b2fed5b" kindref="member">operator++</ref>()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="structSubgraph_1_1iterator_1a9174ae6dfaba16acc3ec7dc1466d13bf" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structSubgraph_1_1iterator_1aad7c6ef62b911de3d4074e08da866362" kindref="member">advance</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31" refid="structSubgraph_1_1iterator_1a0c63e38a83bcd42b04c0d9b55bdc4d62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structSubgraph_1_1iterator_1a0c63e38a83bcd42b04c0d9b55bdc4d62" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structSubgraph_1_1iterator" kindref="compound">iterator</ref><sp/>&amp;oth)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structSubgraph_1_1iterator_1a9174ae6dfaba16acc3ec7dc1466d13bf" kindref="member">it</ref><sp/>==<sp/>oth.<ref refid="structSubgraph_1_1iterator_1a9174ae6dfaba16acc3ec7dc1466d13bf" kindref="member">it</ref>;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>should<sp/>be<sp/>genericized<sp/>for<sp/>all<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structSubgraph_1_1iterator_1a3b5d3735f55fb1e655bfc16e65d9f847" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structSubgraph_1_1iterator_1a3b5d3735f55fb1e655bfc16e65d9f847" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structSubgraph_1_1iterator" kindref="compound">iterator</ref><sp/>&amp;oth)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>oth);<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="35" refid="structSubgraph_1aa20007f84b399d375e9780dadfd40a10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrange" kindref="compound">range&lt;iterator&gt;</ref><sp/><ref refid="structSubgraph_1aa20007f84b399d375e9780dadfd40a10" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structSubgraph_1_1iterator" kindref="compound">iterator</ref><sp/>st_it{*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structSubgraph_1_1iterator" kindref="compound">iterator</ref><sp/>ed_it{*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed_it.it<sp/>=<sp/>ed_it.adj_list.end();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structrange" kindref="compound">range&lt;iterator&gt;</ref>{st_it,<sp/>ed_it};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41" refid="structSubgraph_1ad83982532b85bb5379aa71b98c8d246f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structSubgraph_1ad83982532b85bb5379aa71b98c8d246f" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structSubgraph_1a907d9f1d611ffa259c59bde70923e464" kindref="member">graph</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43" refid="graph__view_8hpp_1ac5d2f097a07285733e610a52b16e790b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="graph__view_8hpp_1ac5d2f097a07285733e610a52b16e790b" kindref="member">test_graph_view</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraph__theory_1_1GraphAdj" kindref="compound">GraphAdj</ref><sp/>g(5);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(i,<sp/>g.size())<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(j,<sp/>i<sp/>+<sp/>1,<sp/>g.size())<sp/>{<sp/>g.<ref refid="structgraph__theory_1_1GraphAdj_1a1893210e27b58b19ec5cbf36a5aeb951" kindref="member">add_edge</ref>(i,<sp/>j);<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pred<sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>j)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>%<sp/>2<sp/>==<sp/>j<sp/>%<sp/>2;<sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structSubgraph" kindref="compound">Subgraph</ref><sp/>subgraph{g,<sp/>pred};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(i,<sp/>g.size())<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>:<sp/>subgraph[i])<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(pred(i,<sp/>j));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraph__theory_1_1BFS" kindref="compound">BFS</ref><sp/>bfs{subgraph};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>bfs(0);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(i,<sp/>g.size())<sp/>{<sp/>assert(bfs.visited[i]<sp/>==<sp/>(i<sp/>%<sp/>2<sp/>==<sp/>0));<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/graph/graph_view.hpp"/>
  </compounddef>
</doxygen>
