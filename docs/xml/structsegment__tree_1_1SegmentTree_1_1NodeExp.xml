<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structsegment__tree_1_1SegmentTree_1_1NodeExp" kind="struct" language="C++" prot="public">
    <compoundname>segment_tree::SegmentTree::NodeExp</compoundname>
    <basecompoundref refid="structsegment__tree_1_1SegmentTree_1_1NodeCore" prot="public" virt="non-virtual">segment_tree::SegmentTree&lt; T, Query, Update, has_lazy, has_ptr, has_pers, base &gt;::NodeCore</basecompoundref>
    <includes refid="segment__tree_8hpp" local="no">segment_tree.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structsegment__tree_1_1SegmentTree_1_1NodeExp_1a4523e07aa838284e536323455a6d948e" prot="public" static="no" mutable="no">
        <type>array&lt; <ref refid="structsegment__tree_1_1SegmentTree_1_1NodeExp" kindref="compound">NodeExp</ref> *, base &gt;</type>
        <definition>array&lt;NodeExp *, base&gt; segment_tree::SegmentTree&lt; T, Query, Update, has_lazy, has_ptr, has_pers, base &gt;::NodeExp::child</definition>
        <argsstring></argsstring>
        <name>child</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/segment_tree.hpp" line="34" column="7" bodyfile="/home/ram/OmniTemplate/src/ds/segment_tree.hpp" bodystart="34" bodyend="-1"/>
        <referencedby refid="classsegment__tree_1_1SegmentTree_1a3d4b3dd98355d9e414bc04cdcf5f5457" compoundref="segment__tree_8hpp" startline="40" endline="40">segment_tree::SegmentTree&lt; T, Query, Update, has_lazy, has_ptr, has_pers, base &gt;::get_child</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>conditional_t&lt; has_lazy, LazyPart, Empty &gt;</label>
      </node>
      <node id="1">
        <label>segment_tree::SegmentTree&lt; T, Query, Update, has_lazy, has_ptr, has_pers, base &gt;::NodeExp</label>
        <link refid="structsegment__tree_1_1SegmentTree_1_1NodeExp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>segment_tree::SegmentTree&lt; T, Query, Update, has_lazy, has_ptr, has_pers, base &gt;::NodeCore</label>
        <link refid="structsegment__tree_1_1SegmentTree_1_1NodeCore"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>T</label>
      </node>
      <node id="5">
        <label>std::array&lt; T &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>conditional_t&lt; has_lazy, LazyPart, Empty &gt;</label>
      </node>
      <node id="1">
        <label>segment_tree::SegmentTree&lt; T, Query, Update, has_lazy, has_ptr, has_pers, base &gt;::NodeExp</label>
        <link refid="structsegment__tree_1_1SegmentTree_1_1NodeExp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>child</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>segment_tree::SegmentTree&lt; T, Query, Update, has_lazy, has_ptr, has_pers, base &gt;::NodeCore</label>
        <link refid="structsegment__tree_1_1SegmentTree_1_1NodeCore"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::array&lt; segment_tree::SegmentTree::NodeExp *, base &gt;</label>
        <childnode refid="1" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; segment_tree::SegmentTree::NodeExp *, base &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/ram/OmniTemplate/src/ds/segment_tree.hpp" line="33" column="30" bodyfile="/home/ram/OmniTemplate/src/ds/segment_tree.hpp" bodystart="33" bodyend="35"/>
    <listofallmembers>
      <member refid="structsegment__tree_1_1SegmentTree_1_1NodeExp_1a4523e07aa838284e536323455a6d948e" prot="public" virt="non-virtual"><scope>segment_tree::SegmentTree::NodeExp</scope><name>child</name></member>
      <member refid="structsegment__tree_1_1SegmentTree_1_1NodeCore_1a4852cef24d043d15388e91826ca726e6" prot="public" virt="non-virtual"><scope>segment_tree::SegmentTree::NodeExp</scope><name>qsum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
