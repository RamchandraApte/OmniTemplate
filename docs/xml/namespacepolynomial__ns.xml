<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="namespacepolynomial__ns" kind="namespace" language="C++">
    <compoundname>polynomial_ns</compoundname>
    <innerclass refid="classpolynomial__ns_1_1Polynomial" prot="public">polynomial_ns::Polynomial</innerclass>
    <innernamespace refid="namespacepolynomial__ns_1_1test">polynomial_ns::test</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepolynomial__ns_1aa06c74bf4632061996937366f1e57fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt;</type>
        <definition>Polynomial&lt;T&gt; polynomial_ns::operator+</definition>
        <argsstring>(const Polynomial&lt; T &gt; &amp;a, const Polynomial&lt; T &gt; &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/algebra/polynomial.hpp" line="29" column="24" bodyfile="/home/ram/OmniTemplate/src/algebra/polynomial.hpp" bodystart="29" bodyend="36"/>
        <references refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" compoundref="core_2all_8hpp" startline="55">fo</references>
      </memberdef>
      <memberdef kind="function" id="namespacepolynomial__ns_1a1a0a44f111c2b3ebf29591ddbc778b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt;</type>
        <definition>Polynomial&lt;T&gt; polynomial_ns::operator*</definition>
        <argsstring>(const Polynomial&lt; T &gt; &amp;a, const Polynomial&lt; T &gt; &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/algebra/polynomial.hpp" line="37" column="24" bodyfile="/home/ram/OmniTemplate/src/algebra/polynomial.hpp" bodystart="37" bodyend="43"/>
        <references refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" compoundref="core_2all_8hpp" startline="55">fo</references>
      </memberdef>
      <memberdef kind="function" id="namespacepolynomial__ns_1a1eca7e44f03795c0bef5d6a4ed2cacbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt;</type>
        <definition>Polynomial&lt;T&gt; polynomial_ns::operator%</definition>
        <argsstring>(Polynomial&lt; T &gt; a, const Polynomial&lt; T &gt; &amp;b)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/algebra/polynomial.hpp" line="44" column="24" bodyfile="/home/ram/OmniTemplate/src/algebra/polynomial.hpp" bodystart="44" bodyend="55"/>
        <references refid="classpolynomial__ns_1_1Polynomial_1a07d232f6e14fade387c39fe8ea8e6b96" compoundref="polynomial_8hpp" startline="18" endline="27">polynomial_ns::Polynomial&lt; T &gt;::degree</references>
        <references refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" compoundref="core_2all_8hpp" startline="55">fo</references>
        <references refid="core_2all_8hpp_1a7b724588414fb77283c807a1ad82313c" compoundref="core_2all_8hpp" startline="56">fr</references>
      </memberdef>
      <memberdef kind="function" id="namespacepolynomial__ns_1a96e98a3ca4aea3fca6fbcee75e3c19a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool polynomial_ns::operator==</definition>
        <argsstring>(const Polynomial&lt; T &gt; &amp;a, const Polynomial&lt; T &gt; &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Checks if two polynomials are equal. Note that polynomials can have different sizes but be equal</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/algebra/polynomial.hpp" line="56" column="18" bodyfile="/home/ram/OmniTemplate/src/algebra/polynomial.hpp" bodystart="56" bodyend="64"/>
        <references refid="core_2all_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" compoundref="core_2all_8hpp" startline="57">al</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref> class. </para>
    </briefdescription>
    <detaileddescription>
<para>poly[i] is coefficient for x^i Example: <computeroutput><ref refid="classpolynomial__ns_1_1Polynomial" kindref="compound">Polynomial</ref>&lt;ll&gt;{1, 2, 3}</computeroutput> is <formula id="6">$3x^2+2x+1$</formula> </para>
    </detaileddescription>
    <location file="/home/ram/OmniTemplate/src/algebra/polynomial.hpp" line="8" column="1"/>
  </compounddef>
</doxygen>
