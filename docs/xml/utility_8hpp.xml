<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="utility_8hpp" kind="file" language="C++">
    <compoundname>utility.hpp</compoundname>
    <includes refid="range_8hpp" local="yes">range.hpp</includes>
    <includedby refid="core_2all_8hpp" local="yes">/home/ram/OmniTemplate/src/core/all.hpp</includedby>
    <includedby refid="template_8hpp" local="yes">/home/ram/OmniTemplate/src/core/template.hpp</includedby>
    <includedby refid="test__utility_8hpp" local="yes">/home/ram/OmniTemplate/src/core/test_utility.hpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>bits/stdc++.h</label>
      </node>
      <node id="6">
        <label>experimental/source_location</label>
      </node>
      <node id="9">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>experimental/iterator</label>
      </node>
      <node id="3">
        <label>core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/core/utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="54">
        <label>/home/ram/OmniTemplate/src/number_theory/modulo.hpp</label>
        <link refid="modulo_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/home/ram/OmniTemplate/src/ds/test_cht.hpp</label>
        <link refid="test__cht_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/home/ram/OmniTemplate/src/combinatorics/test_combinatorics.hpp</label>
        <link refid="test__combinatorics_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/ram/OmniTemplate/src/graph/test_all.hpp</label>
        <link refid="test__all_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/home/ram/OmniTemplate/src/ds/test_splay_tree.hpp</label>
        <link refid="test__splay__tree_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/ram/OmniTemplate/src/combinatorics/test_permutation.hpp</label>
        <link refid="test__permutation_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/ram/OmniTemplate/src/algebra/test_polynomial.hpp</label>
        <link refid="test__polynomial_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>/home/ram/OmniTemplate/src/ds/test_queue.hpp</label>
        <link refid="test__queue_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/home/ram/OmniTemplate/src/ds/test_dsu.hpp</label>
        <link refid="test__dsu_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/home/ram/OmniTemplate/src/ds/sparse_table.hpp</label>
        <link refid="sparse__table_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/home/ram/OmniTemplate/src/core/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/ram/OmniTemplate/src/utility/test_graph_draw.hpp</label>
        <link refid="test__graph__draw_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/ram/OmniTemplate/src/graph/tree/test_hld.hpp</label>
        <link refid="test__hld_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/home/ram/OmniTemplate/src/algebra/polynomial.hpp</label>
        <link refid="polynomial_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/ram/OmniTemplate/src/graph/tree/hld.hpp</label>
        <link refid="hld_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/home/ram/OmniTemplate/src/utility/test_string.hpp</label>
        <link refid="test__string_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/ram/OmniTemplate/src/algebra/linear_algebra.hpp</label>
        <link refid="linear__algebra_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp</label>
        <link refid="combinatorics_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/ram/OmniTemplate/src/core/operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>/home/ram/OmniTemplate/src/number_theory/number_theory.hpp</label>
        <link refid="number__theory_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/ram/OmniTemplate/src/utility/coroutine.hpp</label>
        <link refid="coroutine_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/home/ram/OmniTemplate/src/number_theory/test_modulo.hpp</label>
        <link refid="test__modulo_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/ram/OmniTemplate/src/combinatorics/permutation.hpp</label>
        <link refid="permutation_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/ram/OmniTemplate/src/test/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="47">
        <label>/home/ram/OmniTemplate/src/ds/treap.hpp</label>
        <link refid="treap_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/home/ram/OmniTemplate/src/ds/cht.hpp</label>
        <link refid="cht_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/src/core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/home/ram/OmniTemplate/src/ds/splay_tree.hpp</label>
        <link refid="splay__tree_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>/home/ram/OmniTemplate/src/graph/tree/link_cut.hpp</label>
        <link refid="link__cut_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>/home/ram/OmniTemplate/src/graph/test_biconnected.hpp</label>
        <link refid="test__biconnected_8hpp"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/ram/OmniTemplate/src/algebra/test_linear_algebra.hpp</label>
        <link refid="test__linear__algebra_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>/home/ram/OmniTemplate/src/core/test_utility.hpp</label>
        <link refid="test__utility_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/home/ram/OmniTemplate/src/ds/queue.hpp</label>
        <link refid="queue_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>/home/ram/OmniTemplate/src/ds/segment_tree.hpp</label>
        <link refid="segment__tree_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>/home/ram/OmniTemplate/src/ds/bit.hpp</label>
        <link refid="bit_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/ram/OmniTemplate/src/graph/test_2sat.hpp</label>
        <link refid="test__2sat_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>/home/ram/OmniTemplate/src/number_theory/test_number_theory.hpp</label>
        <link refid="test__number__theory_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>/home/ram/OmniTemplate/src/graph/biconnected.hpp</label>
        <link refid="biconnected_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/ram/OmniTemplate/src/graph/test_flow.hpp</label>
        <link refid="test__flow_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/core/utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/ram/OmniTemplate/src/core/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/ram/OmniTemplate/src/core/template.hpp</label>
        <link refid="template_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/home/ram/OmniTemplate/src/ds/persistent.hpp</label>
        <link refid="persistent_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/home/ram/OmniTemplate/src/utility/test_coroutine.hpp</label>
        <link refid="test__coroutine_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>/home/ram/OmniTemplate/src/graph/test_bipartite.hpp</label>
        <link refid="test__bipartite_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>/home/ram/OmniTemplate/src/ds/test_segment_tree.hpp</label>
        <link refid="test__segment__tree_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/ram/OmniTemplate/src/ds/test_bit.hpp</label>
        <link refid="test__bit_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/ram/OmniTemplate/src/algebra/big_integer.hpp</label>
        <link refid="big__integer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>/home/ram/OmniTemplate/src/graph/bipartite.hpp</label>
        <link refid="bipartite_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/ram/OmniTemplate/src/graph/all.hpp</label>
        <link refid="graph_2all_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/home/ram/OmniTemplate/src/core/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/home/ram/OmniTemplate/src/graph/graph_view.hpp</label>
        <link refid="graph__view_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/ram/OmniTemplate/src/graph/2sat.hpp</label>
        <link refid="2sat_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>/home/ram/OmniTemplate/src/utility/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/ram/OmniTemplate/src/algebra/fft.hpp</label>
        <link refid="fft_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>/home/ram/OmniTemplate/src/core/main.hpp</label>
        <link refid="main_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/home/ram/OmniTemplate/src/ds/test_sparse_table.hpp</label>
        <link refid="test__sparse__table_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>/home/ram/OmniTemplate/src/graph/tree/tree.hpp</label>
        <link refid="tree_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/ram/OmniTemplate/src/core/debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/ram/OmniTemplate/src/graph/flow.hpp</label>
        <link refid="flow_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>/home/ram/OmniTemplate/src/ds/dsu.hpp</label>
        <link refid="dsu_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/ram/OmniTemplate/src/utility/graph_draw.hpp</label>
        <link refid="graph__draw_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structutility_1_1with" prot="public">utility::with</innerclass>
    <innerclass refid="structutility_1_1fix" prot="public">utility::fix</innerclass>
    <innerclass refid="structutility_1_1ar" prot="public">utility::ar</innerclass>
    <innerclass refid="structutility_1_1ar_3_01T_0fn_0e_4" prot="public">utility::ar&lt; T[n]&gt;</innerclass>
    <innerclass refid="structutility_1_1random__device__patch" prot="public">utility::random_device_patch</innerclass>
    <innerclass refid="structutility_1_1Empty" prot="public">utility::Empty</innerclass>
    <innernamespace refid="namespaceutility">utility</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="utility_8hpp_1a76cdb96860b77886867832efcffeeb32" prot="public" static="no">
        <name>lambda</name>
        <param><defname>f</defname></param>
        <initializer>[](auto &amp;&amp;... args) { return f(forward&lt;decltype(args)&gt;(args)...); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/utility.hpp" line="18" column="9" bodyfile="/home/ram/OmniTemplate/src/core/utility.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="utility_8hpp_1a4072e106efe575805c4864dbbd387090" prot="public" static="no">
        <name>USE_RANDOM_DEVICE_PATCH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/utility.hpp" line="105" column="9" bodyfile="/home/ram/OmniTemplate/src/core/utility.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="range_8hpp" kindref="compound">range.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceutility" kindref="compound">utility</ref><sp/>{</highlight></codeline>
<codeline lineno="5" refid="structutility_1_1with" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[nodiscard]]<sp/><ref refid="structutility_1_1with" kindref="compound">with</ref><sp/>{</highlight></codeline>
<codeline lineno="6" refid="structutility_1_1with_1a4dafe5db1067f2a1c9ede891630bfada" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structutility_1_1with_1a4dafe5db1067f2a1c9ede891630bfada" kindref="member">old</ref>;<sp/></highlight></codeline>
<codeline lineno="7" refid="structutility_1_1with_1a895ad458d1213df4ef45109dc34cea37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>&amp;<ref refid="structutility_1_1with_1a895ad458d1213df4ef45109dc34cea37" kindref="member">v</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="8" refid="structutility_1_1with_1a20244f8d345341882e7ca37b49f2ca77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tp&gt;<sp/><ref refid="structutility_1_1with_1a20244f8d345341882e7ca37b49f2ca77" kindref="member">with</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Tp<sp/>new_,<sp/>T<sp/>&amp;v_)<sp/>:<sp/>old(v_),<sp/>v(v_)<sp/>{<sp/>v<sp/>=<sp/>new_;<sp/>}</highlight></codeline>
<codeline lineno="9" refid="structutility_1_1with_1a9bc4eb3d7206708b6a7ec8753a866f6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structutility_1_1with_1a9bc4eb3d7206708b6a7ec8753a866f6a" kindref="member">~with</ref>()<sp/>{<sp/>v<sp/>=<sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="10"><highlight class="normal">};</highlight></codeline>
<codeline lineno="13" refid="structutility_1_1fix" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structutility_1_1fix" kindref="compound">fix</ref><sp/>{</highlight></codeline>
<codeline lineno="14" refid="structutility_1_1fix_1a3afbbbf98d76d3123362956f5b586940" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Func<sp/><ref refid="structutility_1_1fix_1a3afbbbf98d76d3123362956f5b586940" kindref="member">func</ref>;</highlight></codeline>
<codeline lineno="15" refid="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" kindref="member">fix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Func<sp/>&amp;func_)<sp/>:<sp/><ref refid="structutility_1_1fix_1a3afbbbf98d76d3123362956f5b586940" kindref="member">func</ref>(func_)<sp/>{}</highlight></codeline>
<codeline lineno="16" refid="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;<sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>operator()(Args<sp/>&amp;&amp;...<sp/>args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structutility_1_1fix_1a3afbbbf98d76d3123362956f5b586940" kindref="member">func</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>forward&lt;Args&gt;(args)...);<sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18" refid="utility_8hpp_1a76cdb96860b77886867832efcffeeb32" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>lambda(f)<sp/>[](auto<sp/>&amp;&amp;...<sp/>args)<sp/>{<sp/>return<sp/>f(forward&lt;decltype(args)&gt;(args)...);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespaceutility_1a1507417750abfb917c914c44e07ed713" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceutility_1a1507417750abfb917c914c44e07ed713" kindref="member">max_eq</ref>(T<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;y)<sp/>{<sp/>x<sp/>=<sp/>max(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="20" refid="namespaceutility_1ae423116f6315d5e998219f27f1f8c401" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceutility_1ae423116f6315d5e998219f27f1f8c401" kindref="member">min_eq</ref>(T<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;y)<sp/>{<sp/>x<sp/>=<sp/>min(x,<sp/>y);<sp/>}</highlight></codeline>
<codeline lineno="21" refid="namespaceutility_1a6e069fcf8b422fbc525eba2543e36a6e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceutility_1a6e069fcf8b422fbc525eba2543e36a6e" kindref="member">cache</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;f)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>ch;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[=](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;arg)<sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch.find(arg)<sp/>==<sp/>end(ch))<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch[arg]<sp/>=<sp/>f(arg);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ch[arg];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Eq<sp/>=<sp/>equal_to&lt;&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>less&lt;&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Cont&gt;</highlight></codeline>
<codeline lineno="34" refid="namespaceutility_1a531cc980b5de78f0c2f36ae3210cb9cf" refkind="member"><highlight class="normal">[[nodiscard]]<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceutility_1a531cc980b5de78f0c2f36ae3210cb9cf" kindref="member">uniq</ref>(Cont<sp/>v,<sp/>Eq<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;up<sp/>=<sp/>Eq{},<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;sp<sp/>=<sp/>T{})<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(<ref refid="core_2all_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" kindref="member">al</ref>(v),<sp/>sp);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>v.resize(unique(<ref refid="core_2all_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" kindref="member">al</ref>(v),<sp/>up)<sp/>-<sp/>begin(v));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39" refid="namespaceutility_1aa705afaf267f70799bd4ec8cbf040455" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/>less&lt;&gt;,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceutility_1aa705afaf267f70799bd4ec8cbf040455" kindref="member">key_compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Func<sp/>&amp;f,<sp/>T<sp/>g<sp/>=<sp/>T{})<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[=](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;...<sp/>args)<sp/>-&gt;<sp/>decltype(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>g(f(forward&lt;decltype(args)&gt;(args))...);<sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42" refid="namespaceutility_1a50e9430d1096ce6997ae910135a9533f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespaceutility_1a50e9430d1096ce6997ae910135a9533f" kindref="member">prev_less</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>n<sp/>=<sp/>v.size();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a8634e9b99169b29bc9a86927e715da54" kindref="member">vl</ref><sp/>l(n,<sp/>-1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>stack&lt;ll&gt;<sp/>s;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(i,<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s.size()<sp/>&amp;&amp;<sp/>!(s.top()<sp/>&lt;<sp/>v[i]))<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.pop();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.size())<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l[i]<sp/>=<sp/>s.top();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.push(v[i]);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57" refid="namespaceutility_1a005fc5d8af9bba651f00c74372466b83" refkind="member"><highlight class="normal"><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="namespaceutility_1a005fc5d8af9bba651f00c74372466b83" kindref="member">bit_ceil</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1LL<sp/>&lt;&lt;<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>)<sp/>*<sp/>CHAR_BIT<sp/>-<sp/>__builtin_clzll(x<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64" refid="namespaceutility_1a14dc21f495425ccdc1ec35fe45d45591" refkind="member"><highlight class="normal"><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="namespaceutility_1a14dc21f495425ccdc1ec35fe45d45591" kindref="member">power_ceil</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>base)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>pw<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pw<sp/>&lt;<sp/>x;<sp/>pw<sp/>*=<sp/>base)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pw;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70" refid="namespaceutility_1a750478c01441fac1c27f14bea2cb74ea" refkind="member"><highlight class="normal"><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="namespaceutility_1a750478c01441fac1c27f14bea2cb74ea" kindref="member">log_ceil</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>base)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>pw<sp/>=<sp/>1,<sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pw<sp/>&lt;<sp/>x;<sp/>pw<sp/>*=<sp/>base,<sp/>++cnt)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76" refid="namespaceutility_1a7cd324d23686536d1d4eeb92afb61ed4" refkind="member"><highlight class="normal">[[nodiscard]]<sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="namespaceutility_1a7cd324d23686536d1d4eeb92afb61ed4" kindref="member">next_comb</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>tz<sp/>=<sp/>__builtin_ctzll(x);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>y<sp/>=<sp/>x<sp/>+<sp/>(<ref refid="structll" kindref="compound">ll</ref>{1}<sp/>&lt;&lt;<sp/>tz);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref><sp/>=<sp/>y<sp/>|<sp/>(y<sp/>^<sp/>x)<sp/>&gt;&gt;<sp/>(2<sp/>+<sp/>tz);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref><sp/>&gt;<sp/>x);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(__builtin_popcountll(<ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>)<sp/>==<sp/>__builtin_popcountll(x));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86" refid="namespaceutility_1aa72cfb348ae79fd2bdb5ded63cd36ef2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceutility_1aa72cfb348ae79fd2bdb5ded63cd36ef2" kindref="member">swap2</ref>(T<sp/>&amp;a,<sp/>T<sp/>&amp;b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Func<sp/>&amp;func)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(func(a)<sp/>&gt;<sp/>func(b))<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap(a,<sp/>b);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92" refid="namespaceutility_1adafa966f1819210cf795fff85b2a40c5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Cont&gt;<sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="namespaceutility_1adafa966f1819210cf795fff85b2a40c5" kindref="member">ssize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cont<sp/>&amp;<ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a37a1cc6c35e50ff31a8bda2d00998c1e" kindref="member">cont</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size(<ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a37a1cc6c35e50ff31a8bda2d00998c1e" kindref="member">cont</ref>);<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>split<sp/>up<sp/>utility.hpp<sp/>maybe?</highlight></codeline>
<codeline lineno="95" refid="structutility_1_1ar_1aae344b98b22daaa6e15b3631b7a09d64" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structutility_1_1ar" kindref="compound">ar</ref><sp/>{<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structutility_1_1ar_1aae344b98b22daaa6e15b3631b7a09d64" kindref="member">type</ref><sp/>=<sp/>T;<sp/>};</highlight></codeline>
<codeline lineno="96" refid="namespaceutility_1a5527c46ab55c32f4bdf48a47564e3cf0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespaceutility_1a5527c46ab55c32f4bdf48a47564e3cf0" kindref="member">ar_t</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structutility_1_1ar_1aae344b98b22daaa6e15b3631b7a09d64" kindref="member">ar&lt;T&gt;::type</ref>;</highlight></codeline>
<codeline lineno="97" refid="structutility_1_1ar_3_01T_0fn_0e_4_1ae7db76e54caf04247c14edb24b1653ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>ll<sp/>n&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structutility_1_1ar" kindref="compound">ar</ref>&lt;T[n]&gt;<sp/>{<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structutility_1_1ar_3_01T_0fn_0e_4_1ae7db76e54caf04247c14edb24b1653ef" kindref="member">type</ref><sp/>=<sp/>array&lt;ar_t&lt;T&gt;,<sp/>n&gt;;<sp/>};</highlight></codeline>
<codeline lineno="98" refid="structutility_1_1random__device__patch" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structutility_1_1random__device__patch" kindref="compound">random_device_patch</ref><sp/>{</highlight></codeline>
<codeline lineno="101" refid="structutility_1_1random__device__patch_1a7cd4a52d04894da5d2ca621a419da09a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structutility_1_1random__device__patch_1a7cd4a52d04894da5d2ca621a419da09a" kindref="member">operator()</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clock_::now().time_since_epoch().count();<sp/>}</highlight></codeline>
<codeline lineno="102" refid="structutility_1_1random__device__patch_1ad2083d821e1bc651e937571037c29b5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structutility_1_1random__device__patch_1ad2083d821e1bc651e937571037c29b5f" kindref="member">entropy</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;<sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104" refid="structutility_1_1Empty" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structutility_1_1Empty" kindref="compound">Empty</ref><sp/>{};</highlight></codeline>
<codeline lineno="105" refid="utility_8hpp_1a4072e106efe575805c4864dbbd387090" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_RANDOM_DEVICE_PATCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_RANDOM_DEVICE_PATCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="namespaceutility_1a8575a7ae9db3044c9cef77ddcc62ab7c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structutility_1_1random__device__patch" kindref="compound">random_device</ref><sp/>=<sp/><ref refid="structutility_1_1random__device__patch" kindref="compound">random_device_patch</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="namespaceutility_1a7fea553f6f915aa6c2affe79637d9b9f" refkind="member"><highlight class="normal">default_random_engine<sp/><ref refid="namespaceutility_1a7fea553f6f915aa6c2affe79637d9b9f" kindref="member">reng</ref>{<ref refid="structutility_1_1random__device__patch" kindref="compound">random_device</ref>{}()};</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>utility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceutility" kindref="compound">utility</ref>;</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/core/utility.hpp"/>
  </compounddef>
</doxygen>
