<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacestring__tools" kind="namespace" language="C++">
    <compoundname>string_tools</compoundname>
    <innerclass refid="structstring__tools_1_1bytehash" prot="public">string_tools::bytehash</innerclass>
    <innerclass refid="structstring__tools_1_1hash__str" prot="public">string_tools::hash_str</innerclass>
    <innerclass refid="structstring__tools_1_1search__it" prot="public">string_tools::search_it</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="string_8hpp_1a01217477dcb709d208fc7a38ee91d26e" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string string_tools::empstr</definition>
        <argsstring></argsstring>
        <name>empstr</name>
        <initializer>= &quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="string.hpp" line="93" column="8" bodyfile="string.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="string_8hpp_1a66df4130e08d7e88fb0becf94c0a9a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void string_tools::test_hash_str</definition>
        <argsstring>()</argsstring>
        <name>test_hash_str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="string.hpp" line="34" column="6" bodyfile="string.hpp" bodystart="34" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="string_8hpp_1a770c47a8a5684f89eb297ffba5337da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void string_tools::test_bytehash</definition>
        <argsstring>()</argsstring>
        <name>test_bytehash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="string.hpp" line="57" column="6" bodyfile="string.hpp" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="string_8hpp_1a908088ce2404d968ab69990c35885499" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vl</type>
        <definition>vl string_tools::prefix</definition>
        <argsstring>(string const &amp;s)</argsstring>
        <name>prefix</name>
        <param>
          <type>string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns prefix function of string s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="string.hpp" line="66" column="4" bodyfile="string.hpp" bodystart="66" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="string_8hpp_1a314ab0a3b3f972a1af0b738851323829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto string_tools::search_all</definition>
        <argsstring>(string const &amp;t, string const &amp;s)</argsstring>
        <name>search_all</name>
        <param>
          <type>string const &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>string const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find all substrings of t equal to s </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="string.hpp" line="83" column="6" bodyfile="string.hpp" bodystart="83" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="string_8hpp_1ae6f8c1cd029548c31fa4c1cfab06a52f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto string_tools::operator==</definition>
        <argsstring>(search_it const &amp;a, search_it const &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="string.hpp" line="132" column="6" bodyfile="string.hpp" bodystart="132" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="string_8hpp_1a072e7010806806c68fa2f537b0677c74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto string_tools::operator&lt;</definition>
        <argsstring>(search_it const &amp;a, search_it const &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="string.hpp" line="144" column="1" bodyfile="string.hpp" bodystart="144" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="string_8hpp_1a9ea78f4e72ed84a9dc9c77e705185739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto string_tools::search_ra</definition>
        <argsstring>(const Ts &amp;... args)</argsstring>
        <name>search_ra</name>
        <param>
          <type>const Ts &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="string.hpp" line="156" column="18" bodyfile="string.hpp" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="string_8hpp_1a01561d8bee1ea8e32284f174ecd5d91e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void string_tools::test_string</definition>
        <argsstring>()</argsstring>
        <name>test_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="string.hpp" line="172" column="6" bodyfile="string.hpp" bodystart="172" bodyend="175"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="string.hpp" line="3" column="22"/>
  </compounddef>
</doxygen>
