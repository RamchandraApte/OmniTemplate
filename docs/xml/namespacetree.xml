<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacetree" kind="namespace" language="C++">
    <compoundname>tree</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacetree_1abbd5aff5c7f9d3fd17bb986aae13ca53" prot="public" static="no" mutable="no">
        <type>const <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>const ll tree::sz</definition>
        <argsstring></argsstring>
        <name>sz</name>
        <initializer>= 30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" line="4" column="10" bodyfile="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" bodystart="4" bodyend="-1"/>
        <referencedby refid="namespacegraph__theory_1a1fa8a9b42e79b9ce10e89e4659164f8d" compoundref="graph_2all_8hpp" startline="111" endline="119">graph_theory::get_size</referencedby>
        <referencedby refid="namespacetree_1a7a4f54157c8e0795e7beff222d4912ab" compoundref="lca_8hpp" startline="5" endline="39">tm</referencedby>
        <referencedby refid="namespacetree_1a22307028b665a7bcc89995339114f91d" compoundref="lca_8hpp" startline="49" endline="54">for</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetree_1a66cd4795297997e65d1919bbd0e06d11" prot="public" static="no" mutable="no">
        <type>no&lt; T &gt; *</type>
        <definition>tree::b</definition>
        <argsstring></argsstring>
        <name>b</name>
        <initializer>{
	<ref refid="structll" kindref="compound">ll</ref> da = a-&gt;dp(), db = b-&gt;dp()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" line="40" column="10" bodyfile="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" bodystart="40" bodyend="-1"/>
        <referencedby refid="namespacetree_1a7a4f54157c8e0795e7beff222d4912ab" compoundref="lca_8hpp" startline="5" endline="39">tm</referencedby>
        <referencedby refid="namespacetree_1a92c497fa1e14c8c53f548f30bc8ca244" compoundref="lca_8hpp" startline="42" endline="44">if</referencedby>
      </memberdef>
      <memberdef kind="variable" id="namespacetree_1a63ad126676f337ae6df9a89e7e9a7670" prot="public" static="no" mutable="no">
        <type>return a</type>
        <definition>return a tree::p[0]</definition>
        <argsstring>[0]</argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" line="56" column="9" bodyfile="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" bodystart="56" bodyend="-1"/>
        <referencedby refid="structlinear__algebra_1_1matrix_1a25e0594f850d04a7102d59392df2bdbc" compoundref="linear__algebra_8hpp" startline="15" endline="24">linear_algebra::matrix&lt; T &gt;::matrix</referencedby>
        <referencedby refid="namespacepermutation_1a68e876731be5159eaefd46b1fb8fe031" compoundref="permutation_8hpp" startline="68" endline="72">permutation::invert</referencedby>
        <referencedby refid="namespacedebug__tools_1a3aa6fe2ec65b64f87ad431efde3822c7" compoundref="debug_8hpp" startline="28" endline="35">debug_tools::simple_tp</referencedby>
        <referencedby refid="io_8hpp_1a40cf53faa8f3a9512c4dad9945ecb425" compoundref="io_8hpp" startline="53" endline="55">std::operator&lt;&lt;</referencedby>
        <referencedby refid="operations_8hpp_1a87d3fb5fed45f1a54221f7a8705addb9" compoundref="operations_8hpp" startline="33" endline="38">operator+</referencedby>
        <referencedby refid="range_8hpp_1a3eb62dcf88ab5afad4d62c6fea4bb570" compoundref="range_8hpp" startline="77" endline="85">filter</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1a564910060ca4728c5efc347bb67c8aaa" compoundref="cht_8hpp" startline="42" endline="58">convex_hull_trick::hull</referencedby>
        <referencedby refid="namespacepersistent_1aafe71ec52739bdcd46b2a85ac35ec776" compoundref="persistent_8hpp" startline="29" endline="32">persistent::operator&lt;&lt;</referencedby>
        <referencedby refid="structsplay__tree_1_1SplayNode_1a099b6b1b7632cb57ee28bc474d86343e" compoundref="splay__tree_8hpp" startline="21" endline="34">splay_tree::SplayNode&lt; T, has_link_cut &gt;::rotate</referencedby>
        <referencedby refid="namespacetree_1a7a4f54157c8e0795e7beff222d4912ab" compoundref="lca_8hpp" startline="5" endline="39">tm</referencedby>
        <referencedby refid="number__theory_8hpp_1a02e886c6eb18cd3b8894ea2ba9ca9784" compoundref="number__theory_8hpp" startline="6" endline="32">prime</referencedby>
        <referencedby refid="number__theory_8hpp_1ae8dd217fd3a3de037c6a1031aef548aa" compoundref="number__theory_8hpp" startline="56" endline="71">sieve</referencedby>
        <referencedby refid="number__theory_8hpp_1af0753ff92c84e6924e1fd6461e77b16f" compoundref="number__theory_8hpp" startline="108" endline="115">totient</referencedby>
        <referencedby refid="number__theory_8hpp_1a6542b189f3759f43899a8b1978d58e2c" compoundref="number__theory_8hpp" startline="143" endline="166">primitive_root</referencedby>
        <referencedby refid="namespacestring__tools_1a908088ce2404d968ab69990c35885499" compoundref="string_8hpp" startline="45" endline="60">string_tools::prefix</referencedby>
        <referencedby refid="namespacestring__tools_1a314ab0a3b3f972a1af0b738851323829" compoundref="string_8hpp" startline="62" endline="71">string_tools::search_all</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacetree_1a7a4f54157c8e0795e7beff222d4912ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tree::tm</definition>
        <argsstring>() struct no</argsstring>
        <name>tm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" line="5" column="1" bodyfile="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" bodystart="5" bodyend="39"/>
        <references refid="namespacetree_1a66cd4795297997e65d1919bbd0e06d11" compoundref="lca_8hpp" startline="40">b</references>
        <references refid="operations_8hpp_1a915663194fec79c061edfaea61707bd0" compoundref="operations_8hpp" startline="83" endline="83">fo</references>
        <references refid="namespacetree_1a63ad126676f337ae6df9a89e7e9a7670" compoundref="lca_8hpp" startline="56">p</references>
        <references refid="range_8hpp_1a438bd5fc0a79e42a6a2abb632203f925" compoundref="range_8hpp" startline="53" endline="56">rev</references>
        <references refid="namespacetree_1abbd5aff5c7f9d3fd17bb986aae13ca53" compoundref="lca_8hpp" startline="4">sz</references>
      </memberdef>
      <memberdef kind="function" id="namespacetree_1a92c497fa1e14c8c53f548f30bc8ca244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tree::if</definition>
        <argsstring>(da &gt; db)</argsstring>
        <name>if</name>
        <param>
          <type>da</type>
        </param>
        <param>
          <type>db</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" line="42" column="1" bodyfile="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" bodystart="42" bodyend="44"/>
        <references refid="namespacetree_1a66cd4795297997e65d1919bbd0e06d11" compoundref="lca_8hpp" startline="40">b</references>
        <referencedby refid="biconnected_8hpp_1a72476443ae31ddf840e52f4a47f79055" compoundref="biconnected_8hpp" startline="7" endline="48">biconnected</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetree_1a91fb798f24ec64c3d8fcdc73902929bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tree::if</definition>
        <argsstring>(a==b)</argsstring>
        <name>if</name>
        <param>
          <type>a</type>
          <defval>=<ref refid="namespacetree_1a66cd4795297997e65d1919bbd0e06d11" kindref="member">b</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" line="46" column="1" bodyfile="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespacetree_1a22307028b665a7bcc89995339114f91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tree::for</definition>
        <argsstring>(const auto &amp;i :rev(ra{sz}))</argsstring>
        <name>for</name>
        <param>
          <type>const auto &amp;i </type>
          <declname>:rev</declname>
          <array>ra{sz}</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" line="49" column="1" bodyfile="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" bodystart="49" bodyend="54"/>
        <references refid="namespacetree_1abbd5aff5c7f9d3fd17bb986aae13ca53" compoundref="lca_8hpp" startline="4">sz</references>
      </memberdef>
      <memberdef kind="function" id="namespacetree_1a1db5e81cd89b854831db8147ff509caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tree::assert</definition>
        <argsstring>(a-&gt;p[0]==b-&gt;p[0])</argsstring>
        <name>assert</name>
        <param>
          <type>a-&gt;</type>
          <declname>p</declname>
          <array>[0]</array>
          <defval>=<ref refid="namespacetree_1a66cd4795297997e65d1919bbd0e06d11" kindref="member">b</ref>-&gt;<ref refid="namespacetree_1a63ad126676f337ae6df9a89e7e9a7670" kindref="member">p</ref>[0]</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" line="55" column="1" declfile="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" declline="55" declcolumn="1"/>
        <referencedby refid="classqueue__tools_1_1QueueAdaptor_1a20ad33fb4364a4c4e5228185ac4b73f1" compoundref="queue_8hpp" startline="61" endline="70">queue_tools::QueueAdaptor&lt; MinStack&lt; T &gt; &gt;::check_invariant</referencedby>
        <referencedby refid="number__theory_8hpp_1af88afa289696363eee6d6caed35edfb5" compoundref="number__theory_8hpp" startline="34" endline="49">divisors</referencedby>
        <referencedby refid="number__theory_8hpp_1a67527905c2b2c027c8b458902db2d05a" compoundref="number__theory_8hpp" startline="119" endline="140">dlog</referencedby>
        <referencedby refid="structsplay__tree_1_1SplayTree_1a967e320e3d33cad8b0a9c30cd51ed924" compoundref="splay__tree_8hpp" startline="129" endline="136">splay_tree::SplayTree&lt; T &gt;::erase</referencedby>
        <referencedby refid="structsplay__tree_1_1SplayTree_1ac3a1a0fa259a0f23787211fb94152acd" compoundref="splay__tree_8hpp" startline="139" endline="145">splay_tree::SplayTree&lt; T &gt;::extremum</referencedby>
        <referencedby refid="number__theory_8hpp_1a8119b9949ade11ba2f554e41cc0830df" compoundref="number__theory_8hpp" startline="76" endline="100">fac</referencedby>
        <referencedby refid="namespacelinear__algebra_1aa35d330ed1d66664b874fc261902c7b5" compoundref="linear__algebra_8hpp" startline="82" endline="105">linear_algebra::gauss</referencedby>
        <referencedby refid="namespacelinear__algebra_1a30be90e8c8b57bcd04237e9b1d5b2fe9" compoundref="linear__algebra_8hpp" startline="41" endline="46">linear_algebra::identity</referencedby>
        <referencedby refid="namespacemodulo__namespace_1aac690d54b7665a90ca461724df8907c0" compoundref="modulo_8hpp" startline="77" endline="81">modulo_namespace::invert</referencedby>
        <referencedby refid="structsplay__tree_1_1SplayTree_1a21a513a7ac2715f280d2a89b3890722a" compoundref="splay__tree_8hpp" startline="146" endline="157">splay_tree::SplayTree&lt; T &gt;::join</referencedby>
        <referencedby refid="structlinear__algebra_1_1matrix_1a1c8d8e45107bea445551c6189263768d" compoundref="linear__algebra_8hpp" startline="25" endline="31">linear_algebra::matrix&lt; T &gt;::matrix</referencedby>
        <referencedby refid="namespaceutility_1a7cd324d23686536d1d4eeb92afb61ed4" compoundref="utility_8hpp" startline="76" endline="85">utility::next_comb</referencedby>
        <referencedby refid="namespacepermutation_1a68665163bd10ce50e6606b1babe2e041" compoundref="permutation_8hpp" startline="55" endline="60">permutation::operator*</referencedby>
        <referencedby refid="namespacelinear__algebra_1a0d0136db9933ef3b6a0d91efe567df28" compoundref="linear__algebra_8hpp" startline="66" endline="76">linear_algebra::operator*</referencedby>
        <referencedby refid="structstring__tools_1_1search__it_1af1edaa6e375d857575d012a55cdd4980" compoundref="string_8hpp" startline="85" endline="88">string_tools::search_it::operator*</referencedby>
        <referencedby refid="namespacelinear__algebra_1a297c703d12bd9b758de47e299044d8f2" compoundref="linear__algebra_8hpp" startline="48" endline="55">linear_algebra::operator+</referencedby>
        <referencedby refid="namespacemodulo__namespace_1a8e6fc91a032b336ea0bbed9eabf54f69" compoundref="modulo_8hpp" startline="11" endline="27">modulo_namespace::power</referencedby>
        <referencedby refid="number__theory_8hpp_1a02e886c6eb18cd3b8894ea2ba9ca9784" compoundref="number__theory_8hpp" startline="6" endline="32">prime</referencedby>
        <referencedby refid="classsparse__table_1_1DisjointSparseTable_1a771c763802ff4f1679749951ae94393e" compoundref="sparse__table_8hpp" startline="61" endline="72">sparse_table::DisjointSparseTable&lt; T, Monoid &gt;::query</referencedby>
        <referencedby refid="namespacegraph__theory_1ae6ad3f54671798a8d8f3c4253ea83db4" compoundref="graph_2all_8hpp" startline="59" endline="72">graph_theory::shortest_dist</referencedby>
        <referencedby refid="number__theory_8hpp_1ae8dd217fd3a3de037c6a1031aef548aa" compoundref="number__theory_8hpp" startline="56" endline="71">sieve</referencedby>
        <referencedby refid="namespacegraph__theory_1_1test_1afca7670537e2da47c79f8e3602e96c2c" compoundref="test__all_8hpp" startline="57" endline="67">graph_theory::test::test_add_edge</referencedby>
        <referencedby refid="namespacegraph__theory_1_1test_1a89fa4a3244eff73fe109343d7e132c43" compoundref="test__all_8hpp" startline="5" endline="15">graph_theory::test::test_BFS</referencedby>
        <referencedby refid="test__biconnected_8hpp_1a07c975aa9b96f7bdb70155ae0c3acd17" compoundref="test__biconnected_8hpp" startline="23" endline="105">test_biconnected</referencedby>
        <referencedby refid="test__bit_8hpp_1af86f570cf0a5201c700ffeec06aec7f6" compoundref="test__bit_8hpp" startline="3" endline="16">test_bit</referencedby>
        <referencedby refid="namespaceutility_1_1test_1a1dc18cbf86fee8a275f4cc46d125f43c" compoundref="test__utility_8hpp" startline="22" endline="31">utility::test::test_bit_ceil</referencedby>
        <referencedby refid="namespacestring_1_1test_1aa81e1649f52bbba5ef5ab646d0ae06e3" compoundref="test__string_8hpp" startline="17" endline="23">string::test::test_bytehash</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1a9b689c83ba8f830281d1aabf43efd1e4" compoundref="test__cht_8hpp" startline="20" endline="34">convex_hull_trick::test::test_ccw</referencedby>
        <referencedby refid="namespacecombinatorics_1_1test_1a02b85c66d33799029d94ecfbb7c8b062" compoundref="test__combinatorics_8hpp" startline="18" endline="27">combinatorics::test::test_choose</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1af431d14b14918c006bfb450ff5a69a81" compoundref="test__cht_8hpp" startline="48" endline="58">convex_hull_trick::test::test_cht</referencedby>
        <referencedby refid="namespacegraph__theory_1_1bipartite_1_1test_1a7e5ad591c1ee6db41745438d98b39825" compoundref="test__bipartite_8hpp" startline="4" endline="20">graph_theory::bipartite::test::test_color2</referencedby>
        <referencedby refid="namespaceflow_1_1test_1ae4d5bb4d481a3e83a36a3797ff8f782c" compoundref="test__flow_8hpp" startline="43" endline="49">flow::test::test_compare_flow</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1aa454df2800722deea3ac74b53e40a21b" compoundref="test__cht_8hpp" startline="35" endline="39">convex_hull_trick::test::test_convex_min</referencedby>
        <referencedby refid="namespacecoroutine_1_1test_1a22ebde81203b27ead34dd1fcc2afdbfc" compoundref="test__coroutine_8hpp" startline="4" endline="14">coroutine::test::test_coroutine</referencedby>
        <referencedby refid="namespacepermutation_1_1test_1a77ed30fee0c9874f9763b5665ee273b4" compoundref="test__permutation_8hpp" startline="12" endline="12">permutation::test::test_cycles_impl</referencedby>
        <referencedby refid="test__number__theory_8hpp_1a3e935b9aca6e9dfa6b0a8ef9a4c7e153" compoundref="test__number__theory_8hpp" startline="10" endline="17">test_divisors</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1a923d7187d947f574ed2f5b54d9406f69" compoundref="test__cht_8hpp" startline="11" endline="14">convex_hull_trick::test::test_dot</referencedby>
        <referencedby refid="namespacedsu__ds_1_1test_1adafe4323a317f827a39c3516cf6d792b" compoundref="test__dsu_8hpp" startline="4" endline="16">dsu_ds::test::test_dsu</referencedby>
        <referencedby refid="test__number__theory_8hpp_1ae2f84cd254fbf1373fc273141ce470ed" compoundref="test__number__theory_8hpp" startline="28" endline="32">test_egcd</referencedby>
        <referencedby refid="test__number__theory_8hpp_1afcfd3b1e3415393029bc6a496d825459" compoundref="test__number__theory_8hpp" startline="19" endline="27">test_fac</referencedby>
        <referencedby refid="namespacecombinatorics_1_1test_1a8936aa7ea767d4ccba752f2a5c54785f" compoundref="test__combinatorics_8hpp" startline="12" endline="17">combinatorics::test::test_fact</referencedby>
        <referencedby refid="namespaceflow_1_1test_1a736d0df4682738fa9d4502d37fda8352" compoundref="test__flow_8hpp" startline="3" endline="28">flow::test::test_flow_algo</referencedby>
        <referencedby refid="graph__view_8hpp_1ac5d2f097a07285733e610a52b16e790b" compoundref="graph__view_8hpp" startline="45" endline="65">test_graph_view</referencedby>
        <referencedby refid="namespacestring_1_1test_1afe38d20385f730f6125c922d408c4c5a" compoundref="test__string_8hpp" startline="4" endline="16">string::test::test_hash_str</referencedby>
        <referencedby refid="namespacehld_1_1test_1a2c2ea10aedda3e4e51f08d38ea3fa3f0" compoundref="test__hld_8hpp" startline="4" endline="27">hld::test::test_hld</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1a585d91f97ee3a90cbcdb2ba5bbfe94ac" compoundref="test__cht_8hpp" startline="40" endline="47">convex_hull_trick::test::test_hull</referencedby>
        <referencedby refid="namespacelinear__algebra_1_1test_1a8104ca6c18938c522aa7a1225170aab1" compoundref="test__linear__algebra_8hpp" startline="4" endline="7">linear_algebra::test::test_invert_impl</referencedby>
        <referencedby refid="namespaceutility_1_1test_1a027d0f534d798b71531e664ed33a7318" compoundref="test__utility_8hpp" startline="18" endline="21">utility::test::test_key_compare</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1a1407d23268d09f369dbb939414ec7961" compoundref="test__cht_8hpp" startline="4" endline="10">convex_hull_trick::test::test_less</referencedby>
        <referencedby refid="namespacelinear__algebra_1_1test_1a5e39baa2e5b5fa6453ab6307d6e4f201" compoundref="test__linear__algebra_8hpp" startline="21" endline="24">linear_algebra::test::test_lin_recur</referencedby>
        <referencedby refid="namespacelink__cut_1_1test_1ad63bee2821de932f5d295238e48d106f" compoundref="test__link__cut_8hpp" startline="2" endline="47">link_cut::test::test_link_cut_tree</referencedby>
        <referencedby refid="namespacelinear__algebra_1_1test_1a9a0a8549e208f8a719d5450d21b339ed" compoundref="test__linear__algebra_8hpp" startline="15" endline="20">linear_algebra::test::test_matrix</referencedby>
        <referencedby refid="namespacegraph__theory_1_1bipartite_1_1test_1af862fd7b59fb6a9e0a396a5bd8801c3e" compoundref="test__bipartite_8hpp" startline="21" endline="83">graph_theory::bipartite::test::test_max_match</referencedby>
        <referencedby refid="namespacemodulo__namespace_1_1test_1a1125f7652707749c464a2dfa2732a94c" compoundref="test__modulo_8hpp" startline="11" endline="15">modulo_namespace::test::test_md</referencedby>
        <referencedby refid="namespacequeue__tools_1_1test_1abbd87df8add26a608947323b21bb1921" compoundref="test__queue_8hpp" startline="40" endline="54">queue_tools::test::test_minqueue</referencedby>
        <referencedby refid="namespacequeue__tools_1_1test_1a82af7ed59099217b26702a8b7c1f1d40" compoundref="test__queue_8hpp" startline="29" endline="39">queue_tools::test::test_minstack</referencedby>
        <referencedby refid="namespacegraph__theory_1_1test_1ab6022fd4e376f6aa5e2fe088ff623d57" compoundref="test__all_8hpp" startline="37" endline="42">graph_theory::test::test_mst</referencedby>
        <referencedby refid="namespaceutility_1_1test_1a7185c2baa5f4d2655e37174048fa6e1f" compoundref="test__utility_8hpp" startline="32" endline="45">utility::test::test_next_comb</referencedby>
        <referencedby refid="namespacepermutation_1_1test_1aed3c9c5d90d50bda7028886916647a15" compoundref="test__permutation_8hpp" startline="4" endline="11">permutation::test::test_ops</referencedby>
        <referencedby refid="namespacecombinatorics_1_1test_1afa19fd10b0370b61660f897eb66f8875" compoundref="test__combinatorics_8hpp" startline="4" endline="11">combinatorics::test::test_perm</referencedby>
        <referencedby refid="namespacepolynomial__ns_1_1test_1a5ed51dd96ea5d0597e0c721fb647bfcc" compoundref="test__polynomial_8hpp" startline="3" endline="19">polynomial_ns::test::test_polynomial</referencedby>
        <referencedby refid="namespacemodulo__namespace_1_1test_1a528d9ed1db3200393555b3dc75036599" compoundref="test__modulo_8hpp" startline="3" endline="10">modulo_namespace::test::test_power</referencedby>
        <referencedby refid="namespacepermutation_1_1test_1a79866de5f43125b4ac233cdc1bae579e" compoundref="test__permutation_8hpp" startline="18" endline="22">permutation::test::test_power</referencedby>
        <referencedby refid="test__number__theory_8hpp_1a87d7c3ba2489977a16ec40544a918e00" compoundref="test__number__theory_8hpp" startline="2" endline="9">test_prime</referencedby>
        <referencedby refid="test__number__theory_8hpp_1a0ff115471f41e78245b5dc48eaf8032f" compoundref="test__number__theory_8hpp" startline="57" endline="66">test_primitive_root</referencedby>
        <referencedby refid="namespacequeue__tools_1_1test_1a6fd4ee97af3a8636da778c03cef44c14" compoundref="test__queue_8hpp" startline="4" endline="28">queue_tools::test::test_queueadaptor</referencedby>
        <referencedby refid="namespacesat2_1_1test_1a39c93d63732b7216ede171b3589de7f2" compoundref="test__2sat_8hpp" startline="4" endline="16">sat2::test::test_sat2</referencedby>
        <referencedby refid="namespacegraph__theory_1_1test_1a12ae68923e728fc307296eb6e6a56466" compoundref="test__all_8hpp" startline="43" endline="56">graph_theory::test::test_scc</referencedby>
        <referencedby refid="namespacesegment__tree_1_1test_1a216822c7d0ea6df09e13ff90a519e0fd" compoundref="test__segment__tree_8hpp" startline="4" endline="65">segment_tree::test::test_segment_tree_impl</referencedby>
        <referencedby refid="namespacegraph__theory_1_1test_1a85895e3668b3921ec39edbbe8ab3cb37" compoundref="test__all_8hpp" startline="20" endline="36">graph_theory::test::test_shortest_dist</referencedby>
        <referencedby refid="test__number__theory_8hpp_1a8956d5feae5d2dd01656f6f960d568c7" compoundref="test__number__theory_8hpp" startline="18" endline="18">test_sieve</referencedby>
        <referencedby refid="namespacesparse__table_1_1test_1a274f88cabaff31f12dbb19ed28eb1bb7" compoundref="test__sparse__table_8hpp" startline="4" endline="10">sparse_table::test::test_sparse_table_impl</referencedby>
        <referencedby refid="namespacesplay__tree_1_1test_1a5aa5fd954b1cb0fb099a2310d2801e9e" compoundref="test__splay__tree_8hpp" startline="4" endline="33">splay_tree::test::test_splay_tree</referencedby>
        <referencedby refid="test__number__theory_8hpp_1a8ae320acad5e35d58ca5ad7adc6ddd78" compoundref="test__number__theory_8hpp" startline="40" endline="40">test_totient</referencedby>
        <referencedby refid="namespacegraph__theory_1_1test_1a39d1cd9f78ffe067260878347c9e178d" compoundref="test__all_8hpp" startline="16" endline="19">graph_theory::test::test_trans</referencedby>
        <referencedby refid="tree_8hpp_1a3723e2fdc7693c4777b321d0619f189d" compoundref="tree_8hpp" startline="16" endline="38">test_tree_diameter</referencedby>
        <referencedby refid="namespaceutility_1_1test_1a29adbf9294cbaa7132f9d922bea29299" compoundref="test__utility_8hpp" startline="14" endline="17">utility::test::test_uniq</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1a84a3352ebc4eb5a1f911bb8e8d1af61d" compoundref="test__cht_8hpp" startline="15" endline="19">convex_hull_trick::test::test_wedge</referencedby>
        <referencedby refid="namespaceutility_1_1test_1a5b509a14966e453c36c0b3263b8c73f3" compoundref="test__utility_8hpp" startline="4" endline="13">utility::test::test_with</referencedby>
        <referencedby refid="number__theory_8hpp_1af0753ff92c84e6924e1fd6461e77b16f" compoundref="number__theory_8hpp" startline="108" endline="115">totient</referencedby>
        <referencedby refid="classsegment__tree_1_1SegmentTree_1ad2375790875e1231b39795e93d61e176" compoundref="segment__tree_8hpp" startline="134" endline="139">segment_tree::SegmentTree&lt; T, Query, Update, has_lazy, has_ptr, has_pers, base &gt;::update</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ram/OmniTemplate/src/graph/tree/lca.hpp" line="3" column="14"/>
  </compounddef>
</doxygen>
