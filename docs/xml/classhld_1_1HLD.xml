<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classhld_1_1HLD" kind="class" language="C++" prot="public">
    <compoundname>hld::HLD</compoundname>
    <includes refid="hld_8hpp" local="no">hld.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Monoid</type>
      </param>
      <param>
        <type>typename QueryDS</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhld_1_1HLD_1a891f87bda863c1d391e15455a63db9f5" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="structll" kindref="compound">ll</ref> &gt;</type>
        <definition>vector&lt;ll&gt; hld::HLD&lt; T, Monoid, QueryDS &gt;::heavy</definition>
        <argsstring></argsstring>
        <name>heavy</name>
        <briefdescription>
<para>Heavy child. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" line="83" column="8" bodyfile="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="structll" kindref="compound">ll</ref> &gt;</type>
        <definition>vector&lt;ll&gt; hld::HLD&lt; T, Monoid, QueryDS &gt;::head</definition>
        <argsstring></argsstring>
        <name>head</name>
        <briefdescription>
<para>Head of heavy path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" line="84" column="8" bodyfile="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" bodystart="84" bodyend="-1"/>
        <referencedby refid="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" compoundref="hld_8hpp" startline="50" endline="64">hld::HLD&lt; T, Monoid, QueryDS &gt;::func_path</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="structll" kindref="compound">ll</ref> &gt;</type>
        <definition>vector&lt;ll&gt; hld::HLD&lt; T, Monoid, QueryDS &gt;::pos</definition>
        <argsstring></argsstring>
        <name>pos</name>
        <briefdescription>
<para>Position in segment tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" line="85" column="8" bodyfile="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" bodystart="85" bodyend="-1"/>
        <referencedby refid="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" compoundref="hld_8hpp" startline="50" endline="64">hld::HLD&lt; T, Monoid, QueryDS &gt;::func_path</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" prot="private" static="no" mutable="no">
        <type><ref refid="structgraph__theory_1_1DFS" kindref="compound">DFS</ref></type>
        <definition>DFS hld::HLD&lt; T, Monoid, QueryDS &gt;::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" line="86" column="2" bodyfile="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" bodystart="86" bodyend="-1"/>
        <referencedby refid="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" compoundref="hld_8hpp" startline="50" endline="64">hld::HLD&lt; T, Monoid, QueryDS &gt;::func_path</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classhld_1_1HLD_1ac165aef014cd2c6e1cec6d56530e3881" prot="private" static="no" mutable="no">
        <type>QueryDS</type>
        <definition>QueryDS hld::HLD&lt; T, Monoid, QueryDS &gt;::ds</definition>
        <argsstring></argsstring>
        <name>ds</name>
        <initializer>{vector&lt;T&gt;{-100, -100}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" line="88" column="9" bodyfile="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" bodystart="88" bodyend="-1"/>
        <referencedby refid="classhld_1_1HLD_1a89ad91fa5429a48db553da8d44849415" compoundref="hld_8hpp" startline="72" endline="76">hld::HLD&lt; T, Monoid, QueryDS &gt;::query</referencedby>
        <referencedby refid="classhld_1_1HLD_1a5010452fe04b89ecba385cec7a0c183f" compoundref="hld_8hpp" startline="78" endline="80">hld::HLD&lt; T, Monoid, QueryDS &gt;::update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhld_1_1HLD_1a8d5d8abcf2da6437d67365cf2f70ef66" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hld::HLD&lt; T, Monoid, QueryDS &gt;::HLD</definition>
        <argsstring>(const GraphAdj &amp;graph, const vector&lt; T &gt; &amp;data)</argsstring>
        <name>HLD</name>
        <param>
          <type>const <ref refid="structgraph__theory_1_1GraphAdj" kindref="compound">GraphAdj</ref> &amp;</type>
          <declname>graph</declname>
        </param>
        <param>
          <type>const vector&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Data permuted by pos</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" line="18" column="10" bodyfile="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" bodystart="18" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void hld::HLD&lt; T, Monoid, QueryDS &gt;::func_path</definition>
        <argsstring>(ll u, ll v, const Func &amp;func)</argsstring>
        <name>func_path</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>const Func &amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Calls func (could be an update or query function, for example) on each heavy chain in the path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" line="50" column="18" bodyfile="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" bodystart="50" bodyend="64"/>
        <references refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" compoundref="hld_8hpp" startline="86">hld::HLD&lt; T, Monoid, QueryDS &gt;::d</references>
        <references refid="structgraph__theory_1_1GeneralSearch_1aadc7aa595d1aa3509f0ba6ee8489cf36" compoundref="core_8hpp" startline="102">graph_theory::GeneralSearch&lt; Searcher, Graph &gt;::distance</references>
        <references refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" compoundref="hld_8hpp" startline="84">hld::HLD&lt; T, Monoid, QueryDS &gt;::head</references>
        <references refid="structgraph__theory_1_1GeneralSearch_1a3ed9b9d45c85402850e22f6e98055045" compoundref="core_8hpp" startline="101">graph_theory::GeneralSearch&lt; Searcher, Graph &gt;::parent</references>
        <references refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" compoundref="hld_8hpp" startline="85">hld::HLD&lt; T, Monoid, QueryDS &gt;::pos</references>
        <references refid="namespaceutility_1a4c8a9d0142092c8f2255e518bfdf9dc4" compoundref="utility_8hpp" startline="106" endline="110">utility::sort2</references>
        <referencedby refid="classhld_1_1HLD_1a89ad91fa5429a48db553da8d44849415" compoundref="hld_8hpp" startline="72" endline="76">hld::HLD&lt; T, Monoid, QueryDS &gt;::query</referencedby>
        <referencedby refid="classhld_1_1HLD_1a5010452fe04b89ecba385cec7a0c183f" compoundref="hld_8hpp" startline="78" endline="80">hld::HLD&lt; T, Monoid, QueryDS &gt;::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classhld_1_1HLD_1a89ad91fa5429a48db553da8d44849415" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T hld::HLD&lt; T, Monoid, QueryDS &gt;::query</definition>
        <argsstring>(ll u, ll v)</argsstring>
        <name>query</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the Monoid sum over values of vertices on the path from u to v. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>The start vertex. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>The end vertex. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>T </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" line="72" column="3" bodyfile="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" bodystart="72" bodyend="76"/>
        <references refid="classhld_1_1HLD_1ac165aef014cd2c6e1cec6d56530e3881" compoundref="hld_8hpp" startline="88">hld::HLD&lt; T, Monoid, QueryDS &gt;::ds</references>
        <references refid="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" compoundref="hld_8hpp" startline="50" endline="64">hld::HLD&lt; T, Monoid, QueryDS &gt;::func_path</references>
        <references refid="namespacelinear__algebra_1aac11793366a8aa7d2396775fdb1ba8ca" compoundref="linear__algebra_8hpp" startline="40" endline="42">linear_algebra::identity</references>
      </memberdef>
      <memberdef kind="function" id="classhld_1_1HLD_1a5010452fe04b89ecba385cec7a0c183f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hld::HLD&lt; T, Monoid, QueryDS &gt;::update</definition>
        <argsstring>(ll u, ll v, const T &amp;val)</argsstring>
        <name>update</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Update the values of vertices on the path from u to v by val. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" line="78" column="6" bodyfile="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" bodystart="78" bodyend="80"/>
        <references refid="classhld_1_1HLD_1ac165aef014cd2c6e1cec6d56530e3881" compoundref="hld_8hpp" startline="88">hld::HLD&lt; T, Monoid, QueryDS &gt;::ds</references>
        <references refid="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" compoundref="hld_8hpp" startline="50" endline="64">hld::HLD&lt; T, Monoid, QueryDS &gt;::func_path</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Heavy-light decomposition. </para>
    </briefdescription>
    <detaileddescription>
<para>Construct a decomposition of the tree represented by graph into heavy and light edges.</para>
<para>Time complexity: <formula id="25">$O(log^2 n)$</formula> per query. <formula id="26">$O(n)$</formula> for construction.</para>
<para>Space complexity <formula id="26">$O(n)$</formula> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>hld::HLD&lt; T, Monoid, QueryDS &gt;</label>
        <link refid="classhld_1_1HLD"/>
        <childnode refid="2" relation="usage">
          <edgelabel>d</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>head</edgelabel>
          <edgelabel>heavy</edgelabel>
          <edgelabel>pos</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>T</label>
      </node>
      <node id="11">
        <label>std::vector&lt; char &gt;</label>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; char &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; T &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; ll &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; ll &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>graph_theory::GeneralSearch&lt; DFS&lt; GraphAdj &gt;, GraphAdj &gt;</label>
        <link refid="structgraph__theory_1_1GeneralSearch"/>
        <childnode refid="4" relation="usage">
          <edgelabel>parent</edgelabel>
          <edgelabel>distance</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>graph</edgelabel>
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; DFS&lt; GraphAdj &gt;, GraphAdj &gt;</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>std::deque&lt; ll &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="13" relation="template-instance">
          <edgelabel>&lt; ll &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>graph_theory::GraphAdj</label>
        <link refid="structgraph__theory_1_1GraphAdj"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>GraphAdj_Base</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; vector&lt; ll &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>graph_theory::GeneralSearch&lt; Searcher, Graph &gt;</label>
        <link refid="structgraph__theory_1_1GeneralSearch"/>
        <childnode refid="4" relation="usage">
          <edgelabel>parent</edgelabel>
          <edgelabel>distance</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>visited</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>queue</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>ll</label>
        <link refid="structll"/>
      </node>
      <node id="2">
        <label>graph_theory::DFS&lt; Graph &gt;</label>
        <link refid="structgraph__theory_1_1DFS"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>std::deque&lt; T &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" line="16" column="1" bodyfile="/home/ram/OmniTemplate/src/graph/tree/hld.hpp" bodystart="16" bodyend="89"/>
    <listofallmembers>
      <member refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" prot="private" virt="non-virtual"><scope>hld::HLD</scope><name>d</name></member>
      <member refid="classhld_1_1HLD_1ac165aef014cd2c6e1cec6d56530e3881" prot="private" virt="non-virtual"><scope>hld::HLD</scope><name>ds</name></member>
      <member refid="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" prot="public" virt="non-virtual"><scope>hld::HLD</scope><name>func_path</name></member>
      <member refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" prot="private" virt="non-virtual"><scope>hld::HLD</scope><name>head</name></member>
      <member refid="classhld_1_1HLD_1a891f87bda863c1d391e15455a63db9f5" prot="private" virt="non-virtual"><scope>hld::HLD</scope><name>heavy</name></member>
      <member refid="classhld_1_1HLD_1a8d5d8abcf2da6437d67365cf2f70ef66" prot="public" virt="non-virtual"><scope>hld::HLD</scope><name>HLD</name></member>
      <member refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" prot="private" virt="non-virtual"><scope>hld::HLD</scope><name>pos</name></member>
      <member refid="classhld_1_1HLD_1a89ad91fa5429a48db553da8d44849415" prot="public" virt="non-virtual"><scope>hld::HLD</scope><name>query</name></member>
      <member refid="classhld_1_1HLD_1a5010452fe04b89ecba385cec7a0c183f" prot="public" virt="non-virtual"><scope>hld::HLD</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
