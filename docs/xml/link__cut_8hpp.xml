<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="link__cut_8hpp" kind="file" language="C++">
    <compoundname>link_cut.hpp</compoundname>
    <includes refid="core_2all_8hpp" local="yes">core/all.hpp</includes>
    <includes refid="splay__tree_8hpp" local="yes">ds/splay_tree.hpp</includes>
    <includedby refid="template_8hpp" local="yes">/home/ram/OmniTemplate/src/core/template.hpp</includedby>
    <includedby refid="test__link__cut_8hpp" local="yes">/home/ram/OmniTemplate/src/graph/tree/test_link_cut.hpp</includedby>
    <incdepgraph>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="14">
        <label>queue</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>numeric</label>
      </node>
      <node id="23">
        <label>experimental/source_location</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="26">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>unordered_set</label>
      </node>
      <node id="24">
        <label>experimental/iterator</label>
      </node>
      <node id="9">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>ds/splay_tree.hpp</label>
        <link refid="splay__tree_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>random</label>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/graph/tree/link_cut.hpp</label>
        <link refid="link__cut_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>bitset</label>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
      <node id="17">
        <label>stack</label>
      </node>
      <node id="29">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>utility</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="28">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>climits</label>
      </node>
      <node id="6">
        <label>chrono</label>
      </node>
      <node id="18">
        <label>thread</label>
      </node>
      <node id="19">
        <label>type_traits</label>
      </node>
      <node id="16">
        <label>set</label>
      </node>
      <node id="8">
        <label>complex</label>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/home/ram/OmniTemplate/src/test/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="3">
        <label>/home/ram/OmniTemplate/src/graph/tree/test_link_cut.hpp</label>
        <link refid="test__link__cut_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/graph/tree/link_cut.hpp</label>
        <link refid="link__cut_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/src/core/template.hpp</label>
        <link refid="template_8hpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacelink__cut">link_cut</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2all_8hpp" kindref="compound">core/all.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="splay__tree_8hpp" kindref="compound">ds/splay_tree.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="namespacelink__cut" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelink__cut" kindref="compound">link_cut</ref><sp/>{</highlight></codeline>
<codeline lineno="5" refid="namespacelink__cut_1a09d87e8cebaf4f6d638db321c396f97b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>=<sp/><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">SplayNode&lt;ll, true&gt;</ref>;</highlight></codeline>
<codeline lineno="6" refid="namespacelink__cut_1a3dce57f6ba794543c43ff4ddbe83be1a" refkind="member"><highlight class="normal"><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*<ref refid="namespacelink__cut_1a3dce57f6ba794543c43ff4ddbe83be1a" kindref="member">make_tree</ref>()<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref>{};</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10" refid="namespacelink__cut_1aa421dd91c5a7dc689972109e651b8c9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelink__cut_1aa421dd91c5a7dc689972109e651b8c9a" kindref="member">detach_child</ref>(<ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*node)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a093b72ce317727a267a5d019b810942f" kindref="member">child</ref>[1])<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a093b72ce317727a267a5d019b810942f" kindref="member">child</ref>[1]-&gt;path_parent<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a093b72ce317727a267a5d019b810942f" kindref="member">child</ref>[1]-&gt;parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17" refid="namespacelink__cut_1ac946b39708c027e0827fa6e4f1440e71" refkind="member"><highlight class="normal"><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*<ref refid="namespacelink__cut_1ac946b39708c027e0827fa6e4f1440e71" kindref="member">access</ref>(<ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*node)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a34a54d6c33025f4be7b37065e584b8c5" kindref="member">splay</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1aa421dd91c5a7dc689972109e651b8c9a" kindref="member">detach_child</ref>(node);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a093b72ce317727a267a5d019b810942f" kindref="member">child</ref>[1]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*par<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node-&gt;path_parent)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par<sp/>=<sp/>node-&gt;path_parent;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a34a54d6c33025f4be7b37065e584b8c5" kindref="member">splay</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1aa421dd91c5a7dc689972109e651b8c9a" kindref="member">detach_child</ref>(par);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a510653918c7b8181c888bbb608a9e6ee" kindref="member">attach</ref>(1,<sp/>node);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;path_parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a34a54d6c33025f4be7b37065e584b8c5" kindref="member">splay</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>par;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34" refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" refkind="member"><highlight class="normal"><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(<ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*node)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1ac946b39708c027e0827fa6e4f1440e71" kindref="member">access</ref>(node);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>node-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a093b72ce317727a267a5d019b810942f" kindref="member">child</ref>[0];<sp/>node<sp/>=<sp/>node-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a093b72ce317727a267a5d019b810942f" kindref="member">child</ref>[0])</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1ac946b39708c027e0827fa6e4f1440e71" kindref="member">access</ref>(node);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42" refid="namespacelink__cut_1ab6b1e676cdcb014dd718dcef1bc009de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelink__cut_1ab6b1e676cdcb014dd718dcef1bc009de" kindref="member">cut</ref>(<ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*node)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1ac946b39708c027e0827fa6e4f1440e71" kindref="member">access</ref>(node);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a093b72ce317727a267a5d019b810942f" kindref="member">child</ref>[0]-&gt;parent<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a093b72ce317727a267a5d019b810942f" kindref="member">child</ref>[0]<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48" refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacelink__cut_1a4547d61253b63b606fb1d477541d454e" kindref="member">link</ref>(<ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*par,<sp/><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*child)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1ac946b39708c027e0827fa6e4f1440e71" kindref="member">access</ref>(child);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1ac946b39708c027e0827fa6e4f1440e71" kindref="member">access</ref>(par);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>child-&gt;<ref refid="structsplay__tree_1_1SplayNode_1a510653918c7b8181c888bbb608a9e6ee" kindref="member">attach</ref>(0,<sp/>par);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54" refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" refkind="member"><highlight class="normal"><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*<ref refid="namespacelink__cut_1a87ccf88a6b91bcd10ae30fcfcd4b2b9d" kindref="member">lca</ref>(<ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*u,<sp/><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref><sp/>*v)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(u)<sp/>!=<sp/><ref refid="namespacelink__cut_1a3cb07576c29a6d57e510b41c59832ef4" kindref="member">find_root</ref>(v))<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacelink__cut_1ac946b39708c027e0827fa6e4f1440e71" kindref="member">access</ref>(u);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacelink__cut_1ac946b39708c027e0827fa6e4f1440e71" kindref="member">access</ref>(v);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>link_cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelink__cut" kindref="compound">link_cut</ref>;</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/graph/tree/link_cut.hpp"/>
  </compounddef>
</doxygen>
