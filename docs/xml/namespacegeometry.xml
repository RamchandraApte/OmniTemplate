<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacegeometry" kind="namespace" language="C++">
    <compoundname>geometry</compoundname>
    <innerclass refid="structgeometry_1_1cht" prot="public">geometry::cht</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1a6f5b94d51a13ddc8282f8ef617de73bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geometry::test_less</definition>
        <argsstring>()</argsstring>
        <name>test_less</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="21" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="21" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1a307816ea40ce680d3c4eb34968b52520" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto geometry::dot</definition>
        <argsstring>(point const &amp;a, point const &amp;b)</argsstring>
        <name>dot</name>
        <param>
          <type>point const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>point const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>returns the dot product of 2D vectors a and b, i.e. <formula id="4">$a \cdot b$</formula></para>
<para>returns the dot product of 2D vectors a and b, i.e. <formula id="4">$a \cdot b$</formula></para>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="33" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1afaf01b71e2401cde2a17f7de0c7589f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geometry::test_dot</definition>
        <argsstring>()</argsstring>
        <name>test_dot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="36" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1aabae68a797dfbc044ca0ed89cc6cc1af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto geometry::wedge</definition>
        <argsstring>(point const &amp;a, point const &amp;b)</argsstring>
        <name>wedge</name>
        <param>
          <type>point const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>point const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Returns the wedge product of 2D vectors a and b, <formula id="5">$a \wedge b$</formula>. This is the signed area of the parallelogram spanned by vectors <formula id="6">$\vec{f}$</formula> and <formula id="7">$\vec{b}$</formula>.</para>
<para>Returns the wedge product of 2D vectors a and b, <formula id="5">$a \wedge b$</formula>. This is the signed area of the parallelogram spanned by vectors <formula id="6">$\vec{f}$</formula> and <formula id="7">$\vec{b}$</formula>.</para>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="40" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1af24e139ee1704a4aa6452a7fec700995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geometry::test_wedge</definition>
        <argsstring>()</argsstring>
        <name>test_wedge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="43" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1ab8556a4c9ecf62f348ba9d0635bf8cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto geometry::area</definition>
        <argsstring>(const point &amp;a, const point &amp;b, const point &amp;c)</argsstring>
        <name>area</name>
        <param>
          <type>const point &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const point &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const point &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="48" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1a5f1383116499536e16ded93d8a011900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool geometry::ccw</definition>
        <argsstring>(const point &amp;a, const point &amp;b, const point &amp;c)</argsstring>
        <name>ccw</name>
        <param>
          <type>const point &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const point &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const point &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Returns whether moving through <formula id="8">$a \rightarrow b \rightarrow c$</formula> is counterclockwise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if a, b, c are collinear and distinct.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true if counterclockwise, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="51" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="51" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1a18ead2a577ff9e1f661e55515285809b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geometry::test_ccw</definition>
        <argsstring>()</argsstring>
        <name>test_ccw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="58" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="58" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1aa5f5a1c7604870d01eaf0b29bfb11e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto geometry::hull</definition>
        <argsstring>(vector&lt; point &gt; v, df(do_sort, true))</argsstring>
        <name>hull</name>
        <param>
          <type>vector&lt; point &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>df(do_sort, true)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="73" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="73" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1a8143f89812fca762e08ba1a5d984c46b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Range</type>
          </param>
          <param>
            <type>typename Func</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto geometry::convex_min</definition>
        <argsstring>(const Range &amp;r, const Func &amp;f)</argsstring>
        <name>convex_min</name>
        <param>
          <type>const Range &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const Func &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Returns x in Range r that minimizes the value of a convex function f(x).</para>
<para>Returns x in Range r that minimizes the value of a convex function f(x).</para>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="90" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1a9ac8131722d15a1da83d0065f1093f1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geometry::test_convex_min</definition>
        <argsstring>()</argsstring>
        <name>test_convex_min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="94" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="94" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1a27118bb54df18fa8cdda0a971ad58027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geometry::test_hull</definition>
        <argsstring>()</argsstring>
        <name>test_hull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="114" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="114" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1a403f2d9011246963c0e4b7a2101c5ec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geometry::test_cht</definition>
        <argsstring>()</argsstring>
        <name>test_cht</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="122" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="122" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__geometry_8hpp_8rst_8txt_1aad3419586eb6065d81469c30417d5530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void geometry::test_geometry</definition>
        <argsstring>()</argsstring>
        <name>test_geometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="133" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" bodystart="133" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="geometry_8hpp_1acdc6602c58d77b560832434cc2e25b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto geometry::hull</definition>
        <argsstring>(vector&lt; point &gt; v, remove_const_t&lt; decltype(true)&gt; do_sort=true)</argsstring>
        <name>hull</name>
        <param>
          <type>vector&lt; point &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>remove_const_t&lt; decltype(true)&gt;</type>
          <declname>do_sort</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Returns the convex hull of the points in v</para>
        </inbodydescription>
        <location file="geometry.hpp" line="77" column="6" bodyfile="geometry.hpp" bodystart="77" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="docs/_build/html/_sources/api/program_listing_file_geometry.hpp.rst.txt" line="20" column="21"/>
  </compounddef>
</doxygen>
