<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="test__bit_8hpp" kind="file" language="C++">
    <compoundname>test_bit.hpp</compoundname>
    <includes refid="bit_8hpp" local="yes">bit.hpp</includes>
    <includedby refid="test_8cpp" local="yes">/home/ram/OmniTemplate/src/test/test.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>bits/stdc++.h</label>
      </node>
      <node id="6">
        <label>experimental/source_location</label>
      </node>
      <node id="8">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>experimental/iterator</label>
      </node>
      <node id="3">
        <label>core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>bit.hpp</label>
        <link refid="bit_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/ds/test_bit.hpp</label>
        <link refid="test__bit_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/ram/OmniTemplate/src/test/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/ds/test_bit.hpp</label>
        <link refid="test__bit_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__bit_8hpp_1af86f570cf0a5201c700ffeec06aec7f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_bit</definition>
        <argsstring>()</argsstring>
        <name>test_bit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/test_bit.hpp" line="3" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/test_bit.hpp" bodystart="3" bodyend="16"/>
        <references refid="classBIT_1a495d58c744095867ad69123897c60700" compoundref="bit_8hpp" startline="18" endline="24">BIT&lt; Value, MonoidOp &gt;::query</references>
        <references refid="classBIT_1a20ea8eb0ea2065179c756ec96417227f" compoundref="bit_8hpp" startline="31" endline="35">BIT&lt; Value, MonoidOp &gt;::update</references>
        <referencedby refid="test_8cpp_1af095a232149097b5605064623a9345ac" compoundref="test_8cpp" startline="31" endline="60">main2</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bit_8hpp" kindref="compound">bit.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="test__bit_8hpp_1af86f570cf0a5201c700ffeec06aec7f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__bit_8hpp_1af86f570cf0a5201c700ffeec06aec7f6" kindref="member">test_bit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classBIT" kindref="compound">BIT&lt;ll&gt;</ref><sp/>bit(10);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>bit.<ref refid="classBIT_1a20ea8eb0ea2065179c756ec96417227f" kindref="member">update</ref>(3,<sp/>4);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((bit.<ref refid="classBIT_1a495d58c744095867ad69123897c60700" kindref="member">query</ref>(10)<sp/>==<sp/>4));</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>bit.<ref refid="classBIT_1a20ea8eb0ea2065179c756ec96417227f" kindref="member">update</ref>(2,<sp/>3);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((bit.<ref refid="classBIT_1a495d58c744095867ad69123897c60700" kindref="member">query</ref>(2)<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((bit.<ref refid="classBIT_1a495d58c744095867ad69123897c60700" kindref="member">query</ref>(3)<sp/>==<sp/>3));</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((bit.<ref refid="classBIT_1a495d58c744095867ad69123897c60700" kindref="member">query</ref>(4)<sp/>==<sp/>7));</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>bit.<ref refid="classBIT_1a20ea8eb0ea2065179c756ec96417227f" kindref="member">update</ref>(0,<sp/>2);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>bit.<ref refid="classBIT_1a20ea8eb0ea2065179c756ec96417227f" kindref="member">update</ref>(9,<sp/>5);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((bit.<ref refid="classBIT_1a495d58c744095867ad69123897c60700" kindref="member">query</ref>(10)<sp/>==<sp/>4<sp/>+<sp/>3<sp/>+<sp/>2<sp/>+<sp/>5));</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((bit.<ref refid="classBIT_1a495d58c744095867ad69123897c60700" kindref="member">query</ref>(0)<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((bit.<ref refid="classBIT_1a495d58c744095867ad69123897c60700" kindref="member">query</ref>(1)<sp/>==<sp/>2));</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/ds/test_bit.hpp"/>
  </compounddef>
</doxygen>
