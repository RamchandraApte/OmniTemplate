<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structutility_1_1fix" kind="struct" language="C++" prot="public">
    <compoundname>utility::fix</compoundname>
    <includes refid="utility_8hpp" local="no">utility.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Func</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structutility_1_1fix_1a2012a85b07f6b8fca89428ee232a0c52" prot="public" static="no" mutable="no">
        <type>Func</type>
        <definition>Func fix&lt; Func &gt;::func</definition>
        <argsstring></argsstring>
        <name>func</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d_compiled.cpp" line="429" column="7" bodyfile="d_compiled.cpp" bodystart="429" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>utility::fix&lt; Func &gt;::fix</definition>
        <argsstring>(const Func &amp;func_)</argsstring>
        <name>fix</name>
        <param>
          <type>const Func &amp;</type>
          <declname>func_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d_compiled.cpp" line="430" column="2" bodyfile="d_compiled.cpp" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) utility::fix&lt; Func &gt;::operator()</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d_compiled.cpp" line="431" column="23" bodyfile="d_compiled.cpp" bodystart="431" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>utility::fix&lt; Func &gt;::fix</definition>
        <argsstring>(const Func &amp;func_)</argsstring>
        <name>fix</name>
        <param>
          <type>const Func &amp;</type>
          <declname>func_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" line="442" column="5" bodyfile="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" bodystart="442" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) utility::fix&lt; Func &gt;::operator()</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" line="443" column="26" bodyfile="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" bodystart="443" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>utility::fix&lt; Func &gt;::fix</definition>
        <argsstring>(const Func &amp;func_)</argsstring>
        <name>fix</name>
        <param>
          <type>const Func &amp;</type>
          <declname>func_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" line="442" column="5" bodyfile="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" bodystart="442" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) utility::fix&lt; Func &gt;::operator()</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" line="443" column="26" bodyfile="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" bodystart="443" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>utility::fix&lt; Func &gt;::fix</definition>
        <argsstring>(const Func &amp;func_)</argsstring>
        <name>fix</name>
        <param>
          <type>const Func &amp;</type>
          <declname>func_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e_compiled.cpp" line="430" column="2" bodyfile="e_compiled.cpp" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) utility::fix&lt; Func &gt;::operator()</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e_compiled.cpp" line="431" column="23" bodyfile="e_compiled.cpp" bodystart="431" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>utility::fix&lt; Func &gt;::fix</definition>
        <argsstring>(const Func &amp;func_)</argsstring>
        <name>fix</name>
        <param>
          <type>const Func &amp;</type>
          <declname>func_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utility.hpp" line="25" column="1" bodyfile="utility.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>decltype(auto)</type>
        <definition>decltype(auto) utility::fix&lt; Func &gt;::operator()</definition>
        <argsstring>(Args &amp;&amp;... args) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="utility.hpp" line="26" column="22" bodyfile="utility.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Helper for lambda recursive functions. The recursive function is passed to Func as the first argument. </para>
    </detaileddescription>
    <location file="d_compiled.cpp" line="428" column="22" bodyfile="d_compiled.cpp" bodystart="428" bodyend="432"/>
    <listofallmembers>
      <member refid="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>fix</name></member>
      <member refid="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>fix</name></member>
      <member refid="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>fix</name></member>
      <member refid="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>fix</name></member>
      <member refid="structutility_1_1fix_1a0dc72e4b470b6c975318e9127706510f" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>fix</name></member>
      <member refid="structutility_1_1fix_1a2012a85b07f6b8fca89428ee232a0c52" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>func</name></member>
      <member refid="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>operator()</name></member>
      <member refid="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>operator()</name></member>
      <member refid="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>operator()</name></member>
      <member refid="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>operator()</name></member>
      <member refid="structutility_1_1fix_1a93b091b536b383499aaf376d12f92fa7" prot="public" virt="non-virtual"><scope>utility::fix</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
