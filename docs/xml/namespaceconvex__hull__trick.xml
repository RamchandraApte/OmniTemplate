<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="namespaceconvex__hull__trick" kind="namespace" language="C++">
    <compoundname>convex_hull_trick</compoundname>
    <innerclass refid="structconvex__hull__trick_1_1CHT" prot="public">convex_hull_trick::CHT</innerclass>
    <innernamespace refid="namespaceconvex__hull__trick_1_1test">convex_hull_trick::test</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceconvex__hull__trick_1a884b15c6042069f32e237941b4047536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto convex_hull_trick::dot</definition>
        <argsstring>(point const &amp;a, point const &amp;b)</argsstring>
        <name>dot</name>
        <param>
          <type><ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>returns the dot product of 2D vectors a and b, i.e. <formula id="14">$a \cdot b$</formula></para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/cht.hpp" line="11" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/cht.hpp" bodystart="11" bodyend="15"/>
        <referencedby refid="namespacegraph__draw_1acb94157dfde90c9f5dc096b224ec156e" compoundref="graph__draw_8hpp" startline="19" endline="22">graph_draw::show_dot</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1af431d14b14918c006bfb450ff5a69a81" compoundref="test__cht_8hpp" startline="48" endline="58">convex_hull_trick::test::test_cht</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1a923d7187d947f574ed2f5b54d9406f69" compoundref="test__cht_8hpp" startline="11" endline="14">convex_hull_trick::test::test_dot</referencedby>
        <referencedby refid="namespacegraph__draw_1_1test_1a037737d6386f4405a42dc842eb4d7436" compoundref="test__graph__draw_8hpp" startline="4" endline="13">graph_draw::test::test_graph_draw</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceconvex__hull__trick_1a4f9b285a0e38652eb9839ac60b39e34a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto convex_hull_trick::wedge</definition>
        <argsstring>(point const &amp;a, point const &amp;b)</argsstring>
        <name>wedge</name>
        <param>
          <type><ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Returns the wedge product of 2D vectors a and b, <formula id="15">$a \wedge b$</formula>. This is the signed area of the parallelogram spanned by vectors <formula id="16">$\vec{a}$</formula> and <formula id="17">$\vec{b}$</formula>.</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/cht.hpp" line="16" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/cht.hpp" bodystart="16" bodyend="21"/>
        <referencedby refid="namespaceconvex__hull__trick_1abeaee6745d46728e8edf0f80a1e92ddf" compoundref="cht_8hpp" startline="22" endline="22">area</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1a84a3352ebc4eb5a1f911bb8e8d1af61d" compoundref="test__cht_8hpp" startline="15" endline="19">convex_hull_trick::test::test_wedge</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceconvex__hull__trick_1abeaee6745d46728e8edf0f80a1e92ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto convex_hull_trick::area</definition>
        <argsstring>(const point &amp;a, const point &amp;b, const point &amp;c)</argsstring>
        <name>area</name>
        <param>
          <type>const <ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/cht.hpp" line="22" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/cht.hpp" bodystart="22" bodyend="22"/>
        <references refid="namespaceconvex__hull__trick_1a4f9b285a0e38652eb9839ac60b39e34a" compoundref="cht_8hpp" startline="16" endline="21">wedge</references>
        <referencedby refid="namespaceconvex__hull__trick_1a09a415224250703a38ef6bd668e1cac5" compoundref="cht_8hpp" startline="33" endline="39">ccw</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceconvex__hull__trick_1a09a415224250703a38ef6bd668e1cac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool convex_hull_trick::ccw</definition>
        <argsstring>(const point &amp;a, const point &amp;b, const point &amp;c)</argsstring>
        <name>ccw</name>
        <param>
          <type>const <ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Returns whether moving through <formula id="18">$a \rightarrow b \rightarrow c$</formula> is counterclockwise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if a, b, c are collinear and distinct.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool true if counterclockwise, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/cht.hpp" line="33" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/cht.hpp" bodystart="33" bodyend="39"/>
        <references refid="namespaceconvex__hull__trick_1abeaee6745d46728e8edf0f80a1e92ddf" compoundref="cht_8hpp" startline="22" endline="22">area</references>
        <referencedby refid="namespaceconvex__hull__trick_1aa194f52c547fd3298f72caf6371a23ed" compoundref="cht_8hpp" startline="40" endline="58">hull</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1a9b689c83ba8f830281d1aabf43efd1e4" compoundref="test__cht_8hpp" startline="20" endline="34">convex_hull_trick::test::test_ccw</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceconvex__hull__trick_1aa194f52c547fd3298f72caf6371a23ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto convex_hull_trick::hull</definition>
        <argsstring>(vector&lt; point &gt; v, bool do_sort=true)</argsstring>
        <name>hull</name>
        <param>
          <type>vector&lt; <ref refid="core_2all_8hpp_1ae6bbe80dfafc6e30f518f3de1cafec50" kindref="member">point</ref> &gt;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>do_sort</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Returns the convex hull of the points in v</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/cht.hpp" line="40" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/cht.hpp" bodystart="40" bodyend="58"/>
        <references refid="core_2all_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" compoundref="core_2all_8hpp" startline="65">al</references>
        <references refid="namespaceconvex__hull__trick_1a09a415224250703a38ef6bd668e1cac5" compoundref="cht_8hpp" startline="33" endline="39">ccw</references>
        <references refid="namespaceutility_1a3f485f407bcf34b3ad3831f7fda882e4" compoundref="utility_8hpp" startline="52" endline="56">utility::key_compare</references>
        <referencedby refid="structconvex__hull__trick_1_1CHT_1a2166ed9dd69f17fe9f4ed77fbf4d0907" compoundref="cht_8hpp" startline="69" endline="72">convex_hull_trick::CHT::CHT</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1a585d91f97ee3a90cbcdb2ba5bbfe94ac" compoundref="test__cht_8hpp" startline="40" endline="47">convex_hull_trick::test::test_hull</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespaceconvex__hull__trick_1a8a2d8bb18a7c97e9b898e56bbb644978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Range</type>
          </param>
          <param>
            <type>typename Func</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto convex_hull_trick::convex_min</definition>
        <argsstring>(const Range &amp;r, const Func &amp;f)</argsstring>
        <name>convex_min</name>
        <param>
          <type>const Range &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const Func &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Returns x in Range r that minimizes the value of a convex function f(x). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/cht.hpp" line="61" column="20" bodyfile="/home/ram/OmniTemplate/src/ds/cht.hpp" bodystart="61" bodyend="63"/>
        <references refid="core_2all_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" compoundref="core_2all_8hpp" startline="65">al</references>
        <referencedby refid="structconvex__hull__trick_1_1CHT_1a033ef6e8e798b2803762f8c199da345a" compoundref="cht_8hpp" startline="74" endline="79">convex_hull_trick::CHT::min</referencedby>
        <referencedby refid="namespaceconvex__hull__trick_1_1test_1aa454df2800722deea3ac74b53e40a21b" compoundref="test__cht_8hpp" startline="35" endline="39">convex_hull_trick::test::test_convex_min</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ram/OmniTemplate/src/ds/cht.hpp" line="9" column="8"/>
  </compounddef>
</doxygen>
