<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="dict__search_8hpp" kind="file" language="C++">
    <compoundname>dict_search.hpp</compoundname>
    <includes refid="core_2all_8hpp" local="yes">core/all.hpp</includes>
    <includedby refid="test__dict__search_8hpp" local="yes">/home/ram/OmniTemplate/src/string/test_dict_search.hpp</includedby>
    <incdepgraph>
      <node id="10">
        <label>functional</label>
      </node>
      <node id="14">
        <label>queue</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>numeric</label>
      </node>
      <node id="23">
        <label>experimental/source_location</label>
      </node>
      <node id="12">
        <label>map</label>
      </node>
      <node id="26">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>unordered_set</label>
      </node>
      <node id="24">
        <label>experimental/iterator</label>
      </node>
      <node id="9">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>random</label>
      </node>
      <node id="4">
        <label>bitset</label>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
      <node id="17">
        <label>stack</label>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/string/dict_search.hpp</label>
        <link refid="dict__search_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>utility</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="28">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>climits</label>
      </node>
      <node id="6">
        <label>chrono</label>
      </node>
      <node id="18">
        <label>thread</label>
      </node>
      <node id="19">
        <label>type_traits</label>
      </node>
      <node id="16">
        <label>set</label>
      </node>
      <node id="8">
        <label>complex</label>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="25">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/ram/OmniTemplate/src/test/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/src/string/test_dict_search.hpp</label>
        <link refid="test__dict__search_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/string/dict_search.hpp</label>
        <link refid="dict__search_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structstring__tools_1_1Trie" prot="public">string_tools::Trie</innerclass>
    <innernamespace refid="namespacestring__tools">string_tools</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2all_8hpp" kindref="compound">core/all.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="namespacestring__tools" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestring__tools" kindref="compound">string_tools</ref><sp/>{</highlight></codeline>
<codeline lineno="4" refid="structstring__tools_1_1Trie" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;ll<sp/>start<sp/>=<sp/>&apos;a&apos;,<sp/>ll<sp/>alphabet_size<sp/>=<sp/>26&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>{</highlight></codeline>
<codeline lineno="6" refid="structstring__tools_1_1Trie_1ad058f2470e8934ee58e8466071470445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1ad058f2470e8934ee58e8466071470445" kindref="member">leaf</ref>{};</highlight></codeline>
<codeline lineno="8" refid="structstring__tools_1_1Trie_1a3a4a07a6e9479d4a03f558a514be4664" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1a3a4a07a6e9479d4a03f558a514be4664" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="10" refid="structstring__tools_1_1Trie_1a7962b53f5ad52f4df60dd7aafa376cf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*<ref refid="structstring__tools_1_1Trie_1a7962b53f5ad52f4df60dd7aafa376cf0" kindref="member">parent</ref>{};</highlight></codeline>
<codeline lineno="12" refid="structstring__tools_1_1Trie_1aef06d67ed53a08634d0df64b6e9df1af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1aef06d67ed53a08634d0df64b6e9df1af" kindref="member">edge_char</ref>{};</highlight></codeline>
<codeline lineno="14" refid="structstring__tools_1_1Trie_1ad3ba1336804cc5520df5c870e806e26b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*&amp;<ref refid="structstring__tools_1_1Trie_1ad3ba1336804cc5520df5c870e806e26b" kindref="member">next</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1afe826d471a843b31caa9c69d79e675ee" kindref="member">next_storage</ref>[c<sp/>-<sp/>start];<sp/>}</highlight></codeline>
<codeline lineno="15" refid="structstring__tools_1_1Trie_1a58174618b92907ee56eb2914625b7959" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="structstring__tools_1_1Trie_1a58174618b92907ee56eb2914625b7959" kindref="member">next</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;<ref refid="structstring__tools_1_1Trie_1ad3ba1336804cc5520df5c870e806e26b" kindref="member">next</ref>(c));</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20" refid="structstring__tools_1_1Trie_1a819249dc8ec7d31d7666f3c6a9b85e3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*<ref refid="structstring__tools_1_1Trie_1a819249dc8ec7d31d7666f3c6a9b85e3c" kindref="member">next_default</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;vert<sp/>=<sp/><ref refid="structstring__tools_1_1Trie_1ad3ba1336804cc5520df5c870e806e26b" kindref="member">next</ref>(c);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vert)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vert<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref>{};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vert-&gt;<ref refid="structstring__tools_1_1Trie_1a7962b53f5ad52f4df60dd7aafa376cf0" kindref="member">parent</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vert-&gt;<ref refid="structstring__tools_1_1Trie_1aef06d67ed53a08634d0df64b6e9df1af" kindref="member">edge_char</ref><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vert;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="30" refid="structstring__tools_1_1Trie_1a9fe6156d37bd26e9fd4d8e9b5a6e21c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1a9fe6156d37bd26e9fd4d8e9b5a6e21c4" kindref="member">insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<ref refid="structstring__tools_1_1Trie_1a3a4a07a6e9479d4a03f558a514be4664" kindref="member">str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cur<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>:<sp/><ref refid="structstring__tools_1_1Trie_1a3a4a07a6e9479d4a03f558a514be4664" kindref="member">str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>old<sp/>=<sp/>cur;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;next_default(c);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur-&gt;leaf<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur-&gt;str<sp/>=<sp/><ref refid="structstring__tools_1_1Trie_1a3a4a07a6e9479d4a03f558a514be4664" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40" refid="structstring__tools_1_1Trie_1ac02e556e3dfd0c6608ffde23cee5a9dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*<ref refid="structstring__tools_1_1Trie_1ac02e556e3dfd0c6608ffde23cee5a9dc" kindref="member">find_leaf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<ref refid="structstring__tools_1_1Trie_1a3a4a07a6e9479d4a03f558a514be4664" kindref="member">str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>node<sp/>=<sp/><ref refid="structstring__tools_1_1Trie_1a219e9e60d7843d09a2e4d2ee54b733ee" kindref="member">find_node</ref>(<ref refid="structstring__tools_1_1Trie_1a3a4a07a6e9479d4a03f558a514be4664" kindref="member">str</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node<sp/>&amp;&amp;<sp/>node-&gt;leaf<sp/>?<sp/>node<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45" refid="structstring__tools_1_1Trie_1a219e9e60d7843d09a2e4d2ee54b733ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*<ref refid="structstring__tools_1_1Trie_1a219e9e60d7843d09a2e4d2ee54b733ee" kindref="member">find_node</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<ref refid="structstring__tools_1_1Trie_1a3a4a07a6e9479d4a03f558a514be4664" kindref="member">str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cur<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>:<sp/><ref refid="structstring__tools_1_1Trie_1a3a4a07a6e9479d4a03f558a514be4664" kindref="member">str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;<ref refid="structstring__tools_1_1Trie_1ad3ba1336804cc5520df5c870e806e26b" kindref="member">next</ref>(c);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cur)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56" refid="structstring__tools_1_1Trie_1ad0189e6ff15f4d305addadb7e011b80b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*<ref refid="structstring__tools_1_1Trie_1ad0189e6ff15f4d305addadb7e011b80b" kindref="member">link</ref>()<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structstring__tools_1_1Trie_1add3a2c8ef2f3c49a0d027923cd83dce4" kindref="member">suffix_link_cache</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>get<sp/>=<sp/>[&amp;]<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structstring__tools_1_1Trie_1a7962b53f5ad52f4df60dd7aafa376cf0" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structstring__tools_1_1Trie_1a7962b53f5ad52f4df60dd7aafa376cf0" kindref="member">parent</ref>-&gt;<ref refid="structstring__tools_1_1Trie_1a7962b53f5ad52f4df60dd7aafa376cf0" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1a7962b53f5ad52f4df60dd7aafa376cf0" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1a7962b53f5ad52f4df60dd7aafa376cf0" kindref="member">parent</ref>-&gt;<ref refid="structstring__tools_1_1Trie_1ad0189e6ff15f4d305addadb7e011b80b" kindref="member">link</ref>()-&gt;<ref refid="structstring__tools_1_1Trie_1aa30d5277840d084371dcb2193168b4a0" kindref="member">go</ref>(<ref refid="structstring__tools_1_1Trie_1aef06d67ed53a08634d0df64b6e9df1af" kindref="member">edge_char</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie_1add3a2c8ef2f3c49a0d027923cd83dce4" kindref="member">suffix_link_cache</ref><sp/>=<sp/>get();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1add3a2c8ef2f3c49a0d027923cd83dce4" kindref="member">suffix_link_cache</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72" refid="structstring__tools_1_1Trie_1aa30d5277840d084371dcb2193168b4a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*<ref refid="structstring__tools_1_1Trie_1aa30d5277840d084371dcb2193168b4a0" kindref="member">go</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;go_val<sp/>=<sp/><ref refid="structstring__tools_1_1Trie_1ab189b614c6f5996aa334ecb1ecb961be" kindref="member">go_cache</ref>[c<sp/>-<sp/>start];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!go_val)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>get<sp/>=<sp/>[&amp;]<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>next_c<sp/>=<sp/><ref refid="structstring__tools_1_1Trie_1ad3ba1336804cc5520df5c870e806e26b" kindref="member">next</ref>(c))<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>next_c;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1a7962b53f5ad52f4df60dd7aafa376cf0" kindref="member">parent</ref><sp/>?<sp/><ref refid="structstring__tools_1_1Trie_1ad0189e6ff15f4d305addadb7e011b80b" kindref="member">link</ref>()-&gt;<ref refid="structstring__tools_1_1Trie_1aa30d5277840d084371dcb2193168b4a0" kindref="member">go</ref>(c)<sp/>:<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>go_val<sp/>=<sp/>get();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>go_val;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86" refid="structstring__tools_1_1Trie_1ab8f1d2a13b82d8dbaccc886df20f8371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*<ref refid="structstring__tools_1_1Trie_1ab8f1d2a13b82d8dbaccc886df20f8371" kindref="member">exit_link</ref>()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structstring__tools_1_1Trie_1a4a9753a6a7efc00d537c7c2d22747595" kindref="member">exit_link_cache</ref>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structstring__tools_1_1Trie_1a7962b53f5ad52f4df60dd7aafa376cf0" kindref="member">parent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie_1a4a9753a6a7efc00d537c7c2d22747595" kindref="member">exit_link_cache</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>suffix<sp/>=<sp/><ref refid="structstring__tools_1_1Trie_1ad0189e6ff15f4d305addadb7e011b80b" kindref="member">link</ref>();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie_1a4a9753a6a7efc00d537c7c2d22747595" kindref="member">exit_link_cache</ref><sp/>=<sp/>suffix-&gt;<ref refid="structstring__tools_1_1Trie_1ad058f2470e8934ee58e8466071470445" kindref="member">leaf</ref><sp/>?<sp/>suffix<sp/>:<sp/>suffix-&gt;exit_link();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1a4a9753a6a7efc00d537c7c2d22747595" kindref="member">exit_link_cache</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102" refid="structstring__tools_1_1Trie_1a0bfc816d1bbcfa5a160a8f34400816d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1Trie_1a0bfc816d1bbcfa5a160a8f34400816d4" kindref="member">search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;text)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;pair&lt;array&lt;ll,<sp/>2&gt;,<sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*&gt;&gt;<sp/>matches;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cur<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(idx,<sp/>text.size())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;go(text[idx]);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exit<sp/>=<sp/>cur;<sp/>exit;<sp/>exit<sp/>=<sp/>exit-&gt;exit_link())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exit-&gt;leaf)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>j<sp/>=<sp/>idx<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches.push_back({{j<sp/>-<sp/><ref refid="namespaceutility_1adafa966f1819210cf795fff85b2a40c5" kindref="member">ssize</ref>(exit-&gt;str),<sp/>j},<sp/>exit});</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matches;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="118" refid="structstring__tools_1_1Trie_1afe826d471a843b31caa9c69d79e675ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>array&lt;Trie<sp/>*,<sp/>alphabet_size&gt;<sp/><ref refid="structstring__tools_1_1Trie_1afe826d471a843b31caa9c69d79e675ee" kindref="member">next_storage</ref>{};</highlight></codeline>
<codeline lineno="119" refid="structstring__tools_1_1Trie_1ab189b614c6f5996aa334ecb1ecb961be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>array&lt;Trie<sp/>*,<sp/>alphabet_size&gt;<sp/><ref refid="structstring__tools_1_1Trie_1ab189b614c6f5996aa334ecb1ecb961be" kindref="member">go_cache</ref>{};</highlight></codeline>
<codeline lineno="120" refid="structstring__tools_1_1Trie_1add3a2c8ef2f3c49a0d027923cd83dce4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*<ref refid="structstring__tools_1_1Trie_1add3a2c8ef2f3c49a0d027923cd83dce4" kindref="member">suffix_link_cache</ref>{};</highlight></codeline>
<codeline lineno="121" refid="structstring__tools_1_1Trie_1a4a9753a6a7efc00d537c7c2d22747595" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1Trie" kindref="compound">Trie</ref><sp/>*<ref refid="structstring__tools_1_1Trie_1a4a9753a6a7efc00d537c7c2d22747595" kindref="member">exit_link_cache</ref>{};</highlight></codeline>
<codeline lineno="122"><highlight class="normal">};</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>string_tools</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/string/dict_search.hpp"/>
  </compounddef>
</doxygen>
