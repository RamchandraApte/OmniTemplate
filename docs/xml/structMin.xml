<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structMin" kind="struct" language="C++" prot="public">
    <compoundname>Min</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Min::operator()</definition>
        <argsstring>(T a, T b) const</argsstring>
        <name>operator()</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d_compiled.cpp" line="271" column="19" bodyfile="d_compiled.cpp" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Min::operator()</definition>
        <argsstring>(T a, T b) const</argsstring>
        <name>operator()</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" line="283" column="22" bodyfile="docs/_build/html/_sources/api/program_listing_file_d_compiled.cpp.rst.txt" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Min::operator()</definition>
        <argsstring>(T a, T b) const</argsstring>
        <name>operator()</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" line="283" column="22" bodyfile="docs/_build/html/_sources/api/program_listing_file_e_compiled.cpp.rst.txt" bodystart="283" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Min::operator()</definition>
        <argsstring>(T a, T b) const</argsstring>
        <name>operator()</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_operations.hpp.rst.txt" line="116" column="25" bodyfile="docs/_build/html/_sources/api/program_listing_file_operations.hpp.rst.txt" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Min::operator()</definition>
        <argsstring>(T a, T b) const</argsstring>
        <name>operator()</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e_compiled.cpp" line="271" column="19" bodyfile="e_compiled.cpp" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto Min::operator()</definition>
        <argsstring>(T a, T b) const</argsstring>
        <name>operator()</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="operations.hpp" line="112" column="18" bodyfile="operations.hpp" bodystart="112" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="d_compiled.cpp" line="270" column="10" bodyfile="d_compiled.cpp" bodystart="270" bodyend="272"/>
    <listofallmembers>
      <member refid="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" virt="non-virtual"><scope>Min</scope><name>operator()</name></member>
      <member refid="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" virt="non-virtual"><scope>Min</scope><name>operator()</name></member>
      <member refid="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" virt="non-virtual"><scope>Min</scope><name>operator()</name></member>
      <member refid="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" virt="non-virtual"><scope>Min</scope><name>operator()</name></member>
      <member refid="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" virt="non-virtual"><scope>Min</scope><name>operator()</name></member>
      <member refid="structMin_1ad62e831f067eda6b8cb817f0c5893f8b" prot="public" virt="non-virtual"><scope>Min</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
