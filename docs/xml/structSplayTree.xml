<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structSplayTree" kind="struct" language="C++" prot="public">
    <compoundname>SplayTree</compoundname>
    <innerclass refid="structSplayTree_1_1iterator" prot="public">SplayTree::iterator</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structSplayTree_1a73b9d1b4374faaf231b93803f55543bd" prot="public" static="no">
        <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">SplayNode</ref>&lt; T &gt;</type>
        <definition>using SplayTree&lt; T &gt;::Node =  SplayNode&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="70" column="8" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structSplayTree_1a6420512e79937fd59edb2a595f977750" prot="public" static="no" mutable="no">
        <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref> *</type>
        <definition>Node* SplayTree&lt; T &gt;::root</definition>
        <argsstring></argsstring>
        <name>root</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="95" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structSplayTree_1ab53a322338a48bb46f04bcb7b99a3dae" prot="public" static="no" mutable="no">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll SplayTree&lt; T &gt;::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="96" column="11" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structSplayTree_1a83684091424cc8dab08bba29cacfc6df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SplayTree&lt; T &gt;::SplayTree</definition>
        <argsstring>()</argsstring>
        <name>SplayTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="97" column="8" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1a9e4c104df4c96bec374dc45246a3d0dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SplayTree&lt; T &gt;::~SplayTree</definition>
        <argsstring>()</argsstring>
        <name>~SplayTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="98" column="8" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1a68ee8070ca751318c345c2ec728b6003" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SplayTree&lt; T &gt;::insert</definition>
        <argsstring>(Node *const x)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref> *const</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="108" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="108" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1a9885fe15adae36e69006e8e2e2e5e21c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SplayTree&lt; T &gt;::insert</definition>
        <argsstring>(const T &amp;key)</argsstring>
        <name>insert</name>
        <param>
          <type>const T &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="128" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1a31e65260a6cc94aab86c6a3def846830" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SplayTree&lt; T &gt;::erase</definition>
        <argsstring>(Node *const x)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref> *const</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="131" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="131" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1afb833e454430e81bb3b1442237805320" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SplayTree&lt; T &gt;::erase</definition>
        <argsstring>(const T &amp;key)</argsstring>
        <name>erase</name>
        <param>
          <type>const T &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="138" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1a875c802868fd4e94282efdedd86cb772" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref> *</type>
        <definition>Node* SplayTree&lt; T &gt;::find</definition>
        <argsstring>(const T &amp;key)</argsstring>
        <name>find</name>
        <param>
          <type>const T &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="156" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="156" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1a1f5834d8ef3ed54a23221f8dcb386d9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll SplayTree&lt; T &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="162" column="11" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1aac9d8884553d884638b1b8a49f404c07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SplayTree&lt; T &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="163" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1aec1d30f8e415fe8e5946e524d27c1ad6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structSplayTree_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator SplayTree&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="164" column="17" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1a45302c7001ad3e2564ac91ccd7dd9a0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structSplayTree_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator SplayTree&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="165" column="17" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="165" bodyend="165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structSplayTree_1ac70b4b2c0a50a56f2984a1dfb332649a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void SplayTree&lt; T &gt;::destroy</definition>
        <argsstring>(Node *const node)</argsstring>
        <name>destroy</name>
        <param>
          <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref> *const</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="99" column="20" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="99" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1a3fe0f3639d520e635a96347d273ca3c3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>i</declname>
            <defname>i</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref> *</type>
        <definition>static Node* SplayTree&lt; T &gt;::extremum</definition>
        <argsstring>(Node *x)</argsstring>
        <name>extremum</name>
        <param>
          <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref> *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="139" column="32" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structSplayTree_1a17f97eb4546fb9a2c182c5f6b2061395" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref> *</type>
        <definition>static Node* SplayTree&lt; T &gt;::join</definition>
        <argsstring>(Node *const a, Node *const b)</argsstring>
        <name>join</name>
        <param>
          <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref> *const</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structsplay__tree_1_1SplayNode" kindref="compound">Node</ref> *const</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="144" column="20" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="144" bodyend="155"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>conditional_t&lt; false, PathParent&lt; SplayNode&lt; T, false &gt; &gt;, Empty &gt;</label>
      </node>
      <node id="2">
        <label>splay_tree::SplayNode&lt; T, has_link_cut &gt;</label>
        <link refid="structsplay__tree_1_1SplayNode"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>SplayTree&lt; T &gt;</label>
        <link refid="structSplayTree"/>
        <childnode refid="2" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" line="68" column="31" bodyfile="docs/_build/html/_sources/api/program_listing_file_splay_tree.hpp.rst.txt" bodystart="68" bodyend="166"/>
    <listofallmembers>
      <member refid="structSplayTree_1aec1d30f8e415fe8e5946e524d27c1ad6" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>begin</name></member>
      <member refid="structSplayTree_1ac70b4b2c0a50a56f2984a1dfb332649a" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>destroy</name></member>
      <member refid="structSplayTree_1aac9d8884553d884638b1b8a49f404c07" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>empty</name></member>
      <member refid="structSplayTree_1a45302c7001ad3e2564ac91ccd7dd9a0c" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>end</name></member>
      <member refid="structSplayTree_1a31e65260a6cc94aab86c6a3def846830" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>erase</name></member>
      <member refid="structSplayTree_1afb833e454430e81bb3b1442237805320" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>erase</name></member>
      <member refid="structSplayTree_1a3fe0f3639d520e635a96347d273ca3c3" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>extremum</name></member>
      <member refid="structSplayTree_1a875c802868fd4e94282efdedd86cb772" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>find</name></member>
      <member refid="structSplayTree_1a68ee8070ca751318c345c2ec728b6003" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>insert</name></member>
      <member refid="structSplayTree_1a9885fe15adae36e69006e8e2e2e5e21c" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>insert</name></member>
      <member refid="structSplayTree_1a17f97eb4546fb9a2c182c5f6b2061395" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>join</name></member>
      <member refid="structSplayTree_1a73b9d1b4374faaf231b93803f55543bd" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>Node</name></member>
      <member refid="structSplayTree_1a6420512e79937fd59edb2a595f977750" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>root</name></member>
      <member refid="structSplayTree_1a1f5834d8ef3ed54a23221f8dcb386d9f" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>size</name></member>
      <member refid="structSplayTree_1ab53a322338a48bb46f04bcb7b99a3dae" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>size_</name></member>
      <member refid="structSplayTree_1a83684091424cc8dab08bba29cacfc6df" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>SplayTree</name></member>
      <member refid="structSplayTree_1a9e4c104df4c96bec374dc45246a3d0dd" prot="public" virt="non-virtual"><scope>SplayTree</scope><name>~SplayTree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
