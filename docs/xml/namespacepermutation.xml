<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacepermutation" kind="namespace" language="C++">
    <compoundname>permutation</compoundname>
    <innerclass refid="classpermutation_1_1Permutation" prot="public">permutation::Permutation</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepermutation_1a4c6e81c9c25d20631e5b1a63edeedb74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref></type>
        <definition>Permutation permutation::identity</definition>
        <argsstring>(multiplies&lt;&gt;, const Permutation &amp;perm)</argsstring>
        <name>identity</name>
        <param>
          <type>multiplies&lt;&gt;</type>
        </param>
        <param>
          <type>const <ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref> &amp;</type>
          <declname>perm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="permutation.hpp" line="51" column="13" bodyfile="permutation.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="namespacepermutation_1a68665163bd10ce50e6606b1babe2e041" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref></type>
        <definition>Permutation permutation::operator*</definition>
        <argsstring>(const Permutation &amp;a, const Permutation &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the composition of permutations a and b, so that ret[i] = a[b[i]]. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><formula id="21">$ab$</formula> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="permutation.hpp" line="55" column="13" bodyfile="permutation.hpp" bodystart="55" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespacepermutation_1a68e876731be5159eaefd46b1fb8fe031" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref></type>
        <definition>Permutation permutation::invert</definition>
        <argsstring>(multiplies&lt;&gt;, const Permutation &amp;p)</argsstring>
        <name>invert</name>
        <param>
          <type>multiplies&lt;&gt;</type>
        </param>
        <param>
          <type>const <ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Inverts a permutation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Inverse of the permutation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="permutation.hpp" line="68" column="13" bodyfile="permutation.hpp" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespacepermutation_1ade64590f0931d6f5d80521cdf52e4bed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref></type>
        <definition>Permutation permutation::power</definition>
        <argsstring>(const Permutation &amp;perm, ll n)</argsstring>
        <name>power</name>
        <param>
          <type>const <ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref> &amp;</type>
          <declname>perm</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Returns in linear-time, perm^n using cycle-decomposition. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>perm</parametername>
</parameternamelist>
<parameterdescription>
<para>A permutation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The exponent. If negative, returns the power of the inverse permutation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><formula id="22">$\left(perm\right)^n$</formula> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="permutation.hpp" line="80" column="13" bodyfile="permutation.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespacepermutation_1acf8168de557ed1092dec6dafdca3721a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void permutation::test_ops</definition>
        <argsstring>()</argsstring>
        <name>test_ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="permutation.hpp" line="83" column="6" bodyfile="permutation.hpp" bodystart="83" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespacepermutation_1a0373557adc489168fb0138098ca354dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void permutation::test_cycles_impl</definition>
        <argsstring>(const Permutation &amp;perm)</argsstring>
        <name>test_cycles_impl</name>
        <param>
          <type>const <ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref> &amp;</type>
          <declname>perm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="permutation.hpp" line="91" column="6" bodyfile="permutation.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="namespacepermutation_1a0d218a444863e87f4f8ffdb3eb48b289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void permutation::test_cycles</definition>
        <argsstring>()</argsstring>
        <name>test_cycles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="permutation.hpp" line="92" column="6" bodyfile="permutation.hpp" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespacepermutation_1a90736a636d503ca5341c3acc87cdb45f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void permutation::test_power</definition>
        <argsstring>()</argsstring>
        <name>test_power</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="permutation.hpp" line="97" column="6" bodyfile="permutation.hpp" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="namespacepermutation_1a62d1bd6c9055805cce7003ed56bd2e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void permutation::test_permutation</definition>
        <argsstring>()</argsstring>
        <name>test_permutation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="permutation.hpp" line="102" column="6" bodyfile="permutation.hpp" bodystart="102" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref> namespace. Contains the <ref refid="classpermutation_1_1Permutation" kindref="compound">Permutation</ref> class and tools related to permutations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="permutation.hpp" line="8" column="21"/>
  </compounddef>
</doxygen>
