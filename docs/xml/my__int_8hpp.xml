<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="my__int_8hpp" kind="file" language="C++">
    <compoundname>my_int.hpp</compoundname>
    <includes refid="core_8hpp" local="yes">core.hpp</includes>
    <incdepgraph>
      <node id="32">
        <label>number_theory/modulo.hpp</label>
        <link refid="modulo_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>functional</label>
      </node>
      <node id="16">
        <label>queue</label>
      </node>
      <node id="7">
        <label>cassert</label>
      </node>
      <node id="15">
        <label>numeric</label>
      </node>
      <node id="33">
        <label>polynomial.hpp</label>
        <link refid="polynomial_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algebra/linear_algebra.hpp</label>
        <link refid="linear__algebra_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>experimental/source_location</label>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/utility/my_int.hpp</label>
        <link refid="my__int_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="28">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>unordered_set</label>
      </node>
      <node id="26">
        <label>experimental/iterator</label>
      </node>
      <node id="11">
        <label>fstream</label>
      </node>
      <node id="2">
        <label>core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>random</label>
      </node>
      <node id="6">
        <label>bitset</label>
      </node>
      <node id="24">
        <label>vector</label>
      </node>
      <node id="19">
        <label>stack</label>
      </node>
      <node id="31">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>utility</label>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
      <node id="30">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>climits</label>
      </node>
      <node id="8">
        <label>chrono</label>
      </node>
      <node id="20">
        <label>thread</label>
      </node>
      <node id="21">
        <label>type_traits</label>
      </node>
      <node id="18">
        <label>set</label>
      </node>
      <node id="10">
        <label>complex</label>
      </node>
      <node id="5">
        <label>algorithm</label>
      </node>
      <node id="27">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ds/dsu.hpp</label>
        <link refid="dsu_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structll" prot="public">ll</innerclass>
    <innerclass refid="structstd_1_1hash_3_01ll_01_4" prot="public">std::hash&lt; ll &gt;</innerclass>
    <innerclass refid="structstd_1_1is__integral_3_01ll_01_4" prot="public">std::is_integral&lt; ll &gt;</innerclass>
    <innerclass refid="structstd_1_1is__unsigned_3_01ll_01_4" prot="public">std::is_unsigned&lt; ll &gt;</innerclass>
    <innerclass refid="structstd_1_1is__signed_3_01ll_01_4" prot="public">std::is_signed&lt; ll &gt;</innerclass>
    <innerclass refid="structstd_1_1numeric__limits_3_01ll_01_4" prot="public">std::numeric_limits&lt; ll &gt;</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="my__int_8hpp_1a896acbe39c98c053f809a8001774ab6f" prot="public" static="no">
        <name>opi</name>
        <param><defname>type</defname></param>
        <initializer>operator type() { return x; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="12" column="9" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="my__int_8hpp_1a6f517c16e8b3947a66f2bf27bc3173e9" prot="public" static="no">
        <name>MIX128</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="37" column="11" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="my__int_8hpp_1a36d34dc408fc2b97bca91bf466563f18" prot="public" static="no">
        <name>mix1</name>
        <param><defname>op</defname></param>
        <param><defname>T1</defname></param>
        <param><defname>T2</defname></param>
        <initializer>constexpr auto operator op(T1 a, T2 b) { return static_cast&lt;<ref refid="structll" kindref="compound">ll</ref>&gt;(a) op static_cast&lt;<ref refid="structll" kindref="compound">ll</ref>&gt;(b); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="39" column="10" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="my__int_8hpp_1a7ab6bf7557d5b999f7339d4cfc7cb4b6" prot="public" static="no">
        <name>mix</name>
        <param><defname>op</defname></param>
        <param><defname>T1</defname></param>
        <param><defname>T2</defname></param>
        <initializer><ref refid="my__int_8hpp_1a36d34dc408fc2b97bca91bf466563f18" kindref="member">mix1</ref>(op, T1, T2) <ref refid="my__int_8hpp_1a36d34dc408fc2b97bca91bf466563f18" kindref="member">mix1</ref>(op, T2, T1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="41" column="9" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" prot="public" static="no">
        <name>mixll</name>
        <param><defname>op</defname></param>
        <initializer><ref refid="my__int_8hpp_1a7ab6bf7557d5b999f7339d4cfc7cb4b6" kindref="member">mix</ref>(op, <ref refid="structll" kindref="compound">ll</ref>, int) <ref refid="my__int_8hpp_1a7ab6bf7557d5b999f7339d4cfc7cb4b6" kindref="member">mix</ref>(op, <ref refid="structll" kindref="compound">ll</ref>, <ref refid="structll" kindref="compound">ll</ref>) <ref refid="my__int_8hpp_1a6f517c16e8b3947a66f2bf27bc3173e9" kindref="member">MIX128</ref>(op, <ref refid="structll" kindref="compound">ll</ref>) <ref refid="my__int_8hpp_1a7ab6bf7557d5b999f7339d4cfc7cb4b6" kindref="member">mix</ref>(op, <ref refid="structll" kindref="compound">ll</ref>, size_t) <ref refid="my__int_8hpp_1a7ab6bf7557d5b999f7339d4cfc7cb4b6" kindref="member">mix</ref>(op, <ref refid="structll" kindref="compound">ll</ref>, double)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="42" column="9" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="my__int_8hpp_1a2c978e12b0aa097e3f8dc633e68451d7" prot="public" static="no">
        <name>bill</name>
        <param><defname>op</defname></param>
        <initializer>constexpr <ref refid="structll" kindref="compound">ll</ref> operator op(<ref refid="structll" kindref="compound">ll</ref> const &amp;a, <ref refid="structll" kindref="compound">ll</ref> const &amp;b) { return <ref refid="structll" kindref="compound">ll</ref>(a) op <ref refid="structll" kindref="compound">ll</ref>(b); }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="44" column="9" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="my__int_8hpp_1a33e977ac03b44c7fb6b3f74dae8b2eb6" prot="public" static="no">
        <name>inh</name>
        <param><defname>cls</defname></param>
        <initializer>template &lt;&gt; struct cls&lt;<ref refid="structll" kindref="compound">ll</ref>&gt; : cls&lt;<ref refid="structll" kindref="compound">ll</ref>&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="69" column="9" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="my__int_8hpp_1adc9ca497c254909c83f973aa03b0e1c4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator+</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="46" column="14" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1af2b3846e8acafcb6f3213db0c0036252" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator*</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="46" column="71" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1aaa2f10d451711a02282b53f8d67322a9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator|</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator|</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="46" column="128" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a9b2eee581ee9ecf1605147ab0c35c575" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator&amp;</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="46" column="185" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1ac6d529776051928bfb80844daec345a9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator^</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator^</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="46" column="242" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a0516ee37ba1334020c90320aedd2392b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator&lt;&lt;</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="46" column="296" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a969b32b65ba433b56130ae656df66052" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator&gt;&gt;</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="46" column="356" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a16edb2064180aa002b50c0df6971ac76" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll operator/</definition>
        <argsstring>(ll const &amp;a, ll const &amp;b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="46" column="415" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a1ad47cb4e54d783e97787f2d8180b26b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="51" column="11" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1addc2b513488b556dc2d53112f6c54dcf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="52" column="16" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a4f09c437b0c98279749c6a3eb961d98d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="53" column="14" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1acd91be1fddd6cfafd08f6ec8bb5efcd1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="16" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a2f9f062714f104ffaac089296845069a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator+</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="101" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a36a7823eab9727a0c57fe8db0c320b5f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="186" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a89863f5d564a94c728d284514f71a09a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="357" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1ac1023414d318d3a6439d3a2567399a30" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator+</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="442" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a3b63b23737ed9e91a2b7339f284d96e6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="527" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a0da77df2e89895ba1b7d7c562479461c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator+</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator+</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="612" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1abb749cbfaa17d7b386e253b603485998" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="697" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a5596c417bb97bd74960e4cca33d13880" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator/</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="781" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a1aecb92f3cbe13bb10d3122ab5d07d93" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="865" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a5f6edf8dca5afc643d6e72e57699730f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1034" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a87683aa0c8ee0cdccaead85b3e2b8d90" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator/</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1118" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a9f41bc653534f4f6203630517f2156f6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator/</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1202" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a142f763bbb1736a76b95130b8d2d8b1a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator/</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1286" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a5158155b3a836df54586f2350d91cbab" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1370" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a750ea4d1fdd157fbcb04741a1545f6e6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator*</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1455" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a6ec2155e1fca79fe02d0c5eb6d4503b6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1540" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1aabc85797b453ca213dbd7abbf945056c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1711" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a5612b2793a4532fe9970c5d2a114d6ec" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator*</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1796" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a2a8768cedd8e538507499220371852be" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1881" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a43ffab71ec13580985a070ea33d08df0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator*</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator*</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="1966" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a7c36efcf569faf3715e418d3da1db17a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="2046" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a87859c8d35163e9e4758aa01fd520407" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="2130" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a7ea748b99bb21ae495717f64bbdcf4e6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="2383" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1abe88c83cf5dc9b46884a1b2bc8183e68" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="2467" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a7781b25df43bf46926920191911d737b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="2551" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1adb176a0734aa2cfd1449982c44fce144" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="2635" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1ad3d70e11768093396bb23339c8ac82eb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="2724" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a142f9bffdd11b6d2ff259b27ded735b3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator==</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="2811" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1ad6c4a2aed28be9e342d2ad975e4136c6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="3073" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a06a48e329f407c401d7828ad830737f0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator==</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="3160" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a39bfb6bbc475fabc3fedcdbff48a1bcd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="3247" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a9e5a071bceddccdc70270c68e1c62000" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator==</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator==</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="3334" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a2f032ec489803d91bbecaf05aeae3d02" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="3421" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a2bbbee53a572ca55acf8c6a9bd23ac31" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator%</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="3506" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1ab7ba6fcd25875e50ba1b4d58c5636df8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="3762" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1ac07363b9ed6f9e81f69ada65d70fb2fe" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator%</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="3847" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a5683757111c643b4f25e4bd44c9b43d6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator%</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="3932" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a25b896413f748b4cfea0899dbfe293df" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator%</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator%</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4017" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1afe67594319f62fc54a00ac97fdcfa7cd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4102" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a25cb8d29162de6a8341a162a555178b2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4187" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1aca6ed3316d728aade15d081f9f731656" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4272" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1aa3e03dfc13fb08fd0890e9891f1d270e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4443" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a750f758fefe8bcd1883904009607c323" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4528" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a4d018945906db6aaaec78c6bb25a8d0c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4613" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a1dabb22258a4f164313783a15aa92326" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&amp;</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4698" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1adad0fdb7fea444f4b4dc79942382c841" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4783" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1aab5bf9e75ec2e05f32bfe248f26b2fb2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4870" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a0975b001bc2c8fb9bcbb07ff3b108a80" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="4957" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a075c178690dc773422a3aeaf1ffa8173" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="5132" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a3a78b7a4b3e181f7842b4a3775895d7a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="5219" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1acca7da4ef13b9d21d66d02bf959f78d0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="5306" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a5a9bbf4c8dbe708d702ed219b1caa290" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&gt;&gt;</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="5393" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a5038197ce9c31f52268a7d69042fbeff" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(ll a, int b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="5475" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a3bf6f579bb3c901a70403ff474880bea" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(int a, ll b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="5560" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a89f069c59e076c7159834f53d76fb267" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(ll a, ll b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="5645" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a514556e3fea9889325683b6d0d0b39b9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(ll a, size_t b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="5816" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1aa6336f6e0326e004c4e921f41742977c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(size_t a, ll b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>size_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="5901" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1ad4ffdd1b37e291ac1fa1c42f6c6e02f3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(ll a, double b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="5986" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1ac45054cf258d397a92db203450fc4e25" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto operator&lt;&lt;</definition>
        <argsstring>(double a, ll b)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="60" column="6071" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1a65931ffae276ba2eac94c8ba0294829b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>auto &amp;</type>
        <definition>auto&amp; operator&lt;&lt;</definition>
        <argsstring>(Stream &amp;os, ll const &amp;a)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="63" column="5" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1ae6bb4b1c502150862dc1bd720dddd1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll operator&quot;&quot;_ll</definition>
        <argsstring>(unsigned long long int x)</argsstring>
        <name>operator&quot;&quot;_ll</name>
        <param>
          <type>unsigned long long int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="66" column="4" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="my__int_8hpp_1ab40cf8d960a2bfa49f09a97ed15c056d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto ceil_div</definition>
        <argsstring>(ll x, ll y)</argsstring>
        <name>ceil_div</name>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp" line="67" column="6" bodyfile="/home/ram/OmniTemplate/src/utility/my_int.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_8hpp" kindref="compound">core.hpp</ref>&quot;</highlight></codeline>
<codeline lineno="5" refid="structll" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structll" kindref="compound">ll</ref><sp/>{</highlight></codeline>
<codeline lineno="6" refid="structll_1a4bdfa09dbbf7923cd92223015f12861f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structll_1a4bdfa09dbbf7923cd92223015f12861f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="7" refid="structll_1a4f550126ee54fd066f53186f27093b76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structll_1a4f550126ee54fd066f53186f27093b76" kindref="member">ll</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_<sp/>=<sp/>0)<sp/>:<sp/><ref refid="structll_1a4bdfa09dbbf7923cd92223015f12861f" kindref="member">x</ref>(x_)<sp/>{}</highlight></codeline>
<codeline lineno="8" refid="structll_1a8b0607da16d0d7e00bb430f04f3a6f3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structll_1a4bdfa09dbbf7923cd92223015f12861f" kindref="member">x</ref>;<sp/>}</highlight></codeline>
<codeline lineno="9" refid="structll_1a6e7bf3f765fff61bab09378b9279b4d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="structll_1a4f550126ee54fd066f53186f27093b76" kindref="member">ll</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structll_1a4bdfa09dbbf7923cd92223015f12861f" kindref="member">x</ref>;<sp/>}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>=<sp/>enable_if_t&lt;is_integral&lt;T&gt;::value,<sp/>void&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template&lt;typename<sp/>T,<sp/>typename<sp/>=<sp/>enable_if_t&lt;is_integral&lt;T&gt;::value,<sp/>void&gt;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>opi(type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="13" refid="my__int_8hpp_1a896acbe39c98c053f809a8001774ab6f" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>operator<sp/>type()<sp/>{<sp/>return<sp/>x;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>opi(double);opi(int);opi(size_t);opi(long<sp/>double);opi(unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int);opi(bool);<sp/>constexpr<sp/>operator<sp/>T()<sp/>const{return<sp/>x;}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*operator<sp/>bool()<sp/>const{return<sp/>x;}</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>operator<sp/>size_t()<sp/>const<sp/>{return<sp/>x;}</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>operator<sp/>int128()<sp/>const<sp/>{return<sp/>x;}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structll_1a6bf19079acad25173814f398d03c6785" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structll_1a6bf19079acad25173814f398d03c6785" kindref="member">operator-</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="structll_1a4bdfa09dbbf7923cd92223015f12861f" kindref="member">x</ref>;<sp/>}</highlight></codeline>
<codeline lineno="20" refid="structll_1a3253b9882ccb1168c5aecfb54188f769" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structll_1a3253b9882ccb1168c5aecfb54188f769" kindref="member">operator--</ref>()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="structll_1a4bdfa09dbbf7923cd92223015f12861f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24" refid="structll_1ab3dcffcb63a9afc64a1ed739c72f7367" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structll_1ab3dcffcb63a9afc64a1ed739c72f7367" kindref="member">operator++</ref>()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="structll_1a4bdfa09dbbf7923cd92223015f12861f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28" refid="structll_1afe1cbe7e5183933ed0a2e943d5850088" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structll_1afe1cbe7e5183933ed0a2e943d5850088" kindref="member">operator+=</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structll_1a4bdfa09dbbf7923cd92223015f12861f" kindref="member">x</ref><sp/>+=<sp/>b.<ref refid="structll_1a4bdfa09dbbf7923cd92223015f12861f" kindref="member">x</ref>;<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__SIZEOF_INT128__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>int128<sp/>=<sp/>__int128;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>uint128<sp/>=<sp/>__uint128_t;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__SIZEOF_INT128__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIX128(op,<sp/>T1)<sp/>mix(op,<sp/>T1,<sp/>int128)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIX128(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="my__int_8hpp_1a6f517c16e8b3947a66f2bf27bc3173e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mix1(op,<sp/>T1,<sp/>T2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="40" refid="my__int_8hpp_1a36d34dc408fc2b97bca91bf466563f18" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>constexpr<sp/>auto<sp/>operator<sp/>op(T1<sp/>a,<sp/>T2<sp/>b)<sp/>{<sp/>return<sp/>static_cast&lt;ll&gt;(a)<sp/>op<sp/>static_cast&lt;ll&gt;(b);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mix(op,<sp/>T1,<sp/>T2)<sp/>mix1(op,<sp/>T1,<sp/>T2)<sp/>mix1(op,<sp/>T2,<sp/>T1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="my__int_8hpp_1a7ab6bf7557d5b999f7339d4cfc7cb4b6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mixll(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43" refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>mix(op,<sp/>ll,<sp/>int)<sp/>mix(op,<sp/>ll,<sp/>ll)<sp/>MIX128(op,<sp/>ll)<sp/>mix(op,<sp/>ll,<sp/>size_t)<sp/>mix(op,<sp/>ll,<sp/>double)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>bill(op)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45" refid="my__int_8hpp_1a2c978e12b0aa097e3f8dc633e68451d7" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>constexpr<sp/>ll<sp/>operator<sp/>op(ll<sp/>const<sp/>&amp;a,<sp/>ll<sp/>const<sp/>&amp;b)<sp/>{<sp/>return<sp/>ll(a)<sp/>op<sp/>ll(b);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="my__int_8hpp_1aaa2f10d451711a02282b53f8d67322a9" refkind="member"><highlight class="normal"><ref refid="my__int_8hpp_1a2c978e12b0aa097e3f8dc633e68451d7" kindref="member">bill</ref>(+)<sp/><ref refid="my__int_8hpp_1a2c978e12b0aa097e3f8dc633e68451d7" kindref="member">bill</ref>(*)<sp/><ref refid="my__int_8hpp_1a2c978e12b0aa097e3f8dc633e68451d7" kindref="member">bill</ref>(|)<sp/><ref refid="my__int_8hpp_1a2c978e12b0aa097e3f8dc633e68451d7" kindref="member">bill</ref>(&amp;)<sp/><ref refid="my__int_8hpp_1a2c978e12b0aa097e3f8dc633e68451d7" kindref="member">bill</ref>(^)<sp/><ref refid="my__int_8hpp_1a2c978e12b0aa097e3f8dc633e68451d7" kindref="member">bill</ref>(&lt;&lt;)<sp/><ref refid="my__int_8hpp_1a2c978e12b0aa097e3f8dc633e68451d7" kindref="member">bill</ref>(&gt;&gt;)<sp/>constexpr<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>operator/(<ref refid="structll" kindref="compound">ll</ref><sp/>const<sp/>&amp;a,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>const<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>x<sp/>=<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(a)<sp/>/<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(b),<sp/>r<sp/>=<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(a)<sp/>%<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(b);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>-<sp/>((x<sp/>&lt;<sp/>0)<sp/>&amp;&amp;<sp/>r);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51" refid="my__int_8hpp_1a1ad47cb4e54d783e97787f2d8180b26b" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="my__int_8hpp_1a1ad47cb4e54d783e97787f2d8180b26b" kindref="member">operator&lt;</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>a,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(a)<sp/>&lt;<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(b);<sp/>}</highlight></codeline>
<codeline lineno="52" refid="my__int_8hpp_1addc2b513488b556dc2d53112f6c54dcf" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="my__int_8hpp_1addc2b513488b556dc2d53112f6c54dcf" kindref="member">operator==</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>a,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>b)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(a)<sp/>==<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(b);<sp/>}</highlight></codeline>
<codeline lineno="53" refid="my__int_8hpp_1a4f09c437b0c98279749c6a3eb961d98d" refkind="member"><highlight class="normal">constexpr<sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="my__int_8hpp_1a4f09c437b0c98279749c6a3eb961d98d" kindref="member">operator%</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>a,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>x<sp/>=<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(a)<sp/>%<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(b);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(x)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(b);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60" refid="my__int_8hpp_1a5a9bbf4c8dbe708d702ed219b1caa290" refkind="member"><highlight class="normal"><ref refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" kindref="member">mixll</ref>(+)<sp/><ref refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" kindref="member">mixll</ref>(/)<sp/><ref refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" kindref="member">mixll</ref>(*)<sp/><ref refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" kindref="member">mixll</ref>(&lt;)<sp/><ref refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" kindref="member">mixll</ref>(==)<sp/><ref refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" kindref="member">mixll</ref>(%)<sp/><ref refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" kindref="member">mixll</ref>(&amp;)<sp/><ref refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" kindref="member">mixll</ref>(&gt;&gt;)<sp/><ref refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" kindref="member">mixll</ref>(&lt;&lt;)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>Stream&gt;</highlight></codeline>
<codeline lineno="63" refid="my__int_8hpp_1a65931ffae276ba2eac94c8ba0294829b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>auto<sp/>&amp;operator&lt;&lt;(Stream<sp/>&amp;os,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>const<sp/>&amp;a)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/>a.x;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66" refid="my__int_8hpp_1ae6bb4b1c502150862dc1bd720dddd1bd" refkind="member"><highlight class="normal"><ref refid="structll" kindref="compound">ll</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>_ll(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;<sp/>}</highlight></codeline>
<codeline lineno="67" refid="my__int_8hpp_1ab40cf8d960a2bfa49f09a97ed15c056d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="my__int_8hpp_1ab40cf8d960a2bfa49f09a97ed15c056d" kindref="member">ceil_div</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>x,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>y)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>+<sp/>y<sp/>-<sp/>1)<sp/>/<sp/>y;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>inh(cls)<sp/>template<sp/>&lt;&gt;<sp/>struct<sp/>cls&lt;ll&gt;<sp/>:<sp/>cls&lt;ll&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="my__int_8hpp_1a33e977ac03b44c7fb6b3f74dae8b2eb6" refkind="member"><highlight class="normal"><ref refid="my__int_8hpp_1a33e977ac03b44c7fb6b3f74dae8b2eb6" kindref="member">inh</ref>(hash)<sp/>{<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>hash&lt;ll&gt;::hash;<sp/>};</highlight></codeline>
<codeline lineno="71" refid="structstd_1_1is__integral_3_01ll_01_4" refkind="compound"><highlight class="normal"><ref refid="my__int_8hpp_1a33e977ac03b44c7fb6b3f74dae8b2eb6" kindref="member">inh</ref>(is_integral){};</highlight></codeline>
<codeline lineno="72" refid="structstd_1_1is__unsigned_3_01ll_01_4" refkind="compound"><highlight class="normal"><ref refid="my__int_8hpp_1a33e977ac03b44c7fb6b3f74dae8b2eb6" kindref="member">inh</ref>(is_unsigned){};</highlight></codeline>
<codeline lineno="73" refid="structstd_1_1is__signed_3_01ll_01_4" refkind="compound"><highlight class="normal"><ref refid="my__int_8hpp_1a33e977ac03b44c7fb6b3f74dae8b2eb6" kindref="member">inh</ref>(is_signed){};</highlight></codeline>
<codeline lineno="74" refid="structstd_1_1numeric__limits_3_01ll_01_4" refkind="compound"><highlight class="normal"><ref refid="my__int_8hpp_1a33e977ac03b44c7fb6b3f74dae8b2eb6" kindref="member">inh</ref>(numeric_limits){};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ll_t,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>enable_if_t&lt;is_same_v&lt;ll_t,<sp/>ll&gt;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;&gt;</highlight></codeline>
<codeline lineno="76" refid="my__int_8hpp_1a9c62d70a4d570035afd252221695db29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="my__int_8hpp_1adc9ca497c254909c83f973aa03b0e1c4" kindref="member">operator+</ref>(T<sp/>a,<sp/>ll_t<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>(b);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>std</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/utility/my_int.hpp"/>
  </compounddef>
</doxygen>
