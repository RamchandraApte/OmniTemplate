<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="hld_8hpp" kind="file" language="C++">
    <compoundname>hld.hpp</compoundname>
    <includes refid="core_2all_8hpp" local="yes">core/all.hpp</includes>
    <includes refid="sparse__table_8hpp" local="yes">ds/sparse_table.hpp</includes>
    <includes refid="graph_2all_8hpp" local="yes">graph/all.hpp</includes>
    <includedby refid="template_8hpp" local="yes">/home/ram/OmniTemplate/src/core/template.hpp</includedby>
    <includedby refid="test__hld_8hpp" local="yes">/home/ram/OmniTemplate/src/graph/tree/test_hld.hpp</includedby>
    <incdepgraph>
      <node id="32">
        <label>number_theory/modulo.hpp</label>
        <link refid="modulo_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="13">
        <label>queue</label>
      </node>
      <node id="29">
        <label>ds/sparse_table.hpp</label>
        <link refid="sparse__table_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cassert</label>
      </node>
      <node id="12">
        <label>numeric</label>
      </node>
      <node id="33">
        <label>polynomial.hpp</label>
        <link refid="polynomial_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/graph/tree/hld.hpp</label>
        <link refid="hld_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>algebra/linear_algebra.hpp</label>
        <link refid="linear__algebra_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>experimental/source_location</label>
      </node>
      <node id="11">
        <label>map</label>
      </node>
      <node id="25">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>unordered_set</label>
      </node>
      <node id="22">
        <label>experimental/iterator</label>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="35">
        <label>graph/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>random</label>
      </node>
      <node id="37">
        <label>test_biconnected.hpp</label>
        <link refid="test__biconnected_8hpp"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>biconnected.hpp</label>
        <link refid="biconnected_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>test_flow.hpp</label>
        <link refid="test__flow_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>vector</label>
      </node>
      <node id="16">
        <label>stack</label>
      </node>
      <node id="28">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>utility</label>
      </node>
      <node id="38">
        <label>bipartite.hpp</label>
        <link refid="bipartite_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>graph/all.hpp</label>
        <link refid="graph_2all_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="27">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>climits</label>
      </node>
      <node id="40">
        <label>graph_view.hpp</label>
        <link refid="graph__view_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
      <node id="17">
        <label>thread</label>
      </node>
      <node id="18">
        <label>type_traits</label>
      </node>
      <node id="15">
        <label>set</label>
      </node>
      <node id="7">
        <label>complex</label>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="42">
        <label>tree/tree.hpp</label>
        <link refid="tree_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>flow.hpp</label>
        <link refid="flow_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>ds/dsu.hpp</label>
        <link refid="dsu_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/ram/OmniTemplate/src/graph/tree/test_hld.hpp</label>
        <link refid="test__hld_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/graph/tree/hld.hpp</label>
        <link refid="hld_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/ram/OmniTemplate/src/test/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/src/core/template.hpp</label>
        <link refid="template_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classhld_1_1HLD" prot="public">hld::HLD</innerclass>
    <innernamespace refid="namespacehld">hld</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2all_8hpp" kindref="compound">core/all.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sparse__table_8hpp" kindref="compound">ds/sparse_table.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="graph_2all_8hpp" kindref="compound">graph/all.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="namespacehld" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehld" kindref="compound">hld</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Mono</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>QueryDS&gt;</highlight></codeline>
<codeline lineno="16" refid="classhld_1_1HLD" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhld_1_1HLD" kindref="compound">HLD</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18" refid="classhld_1_1HLD_1a8d5d8abcf2da6437d67365cf2f70ef66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classhld_1_1HLD_1a8d5d8abcf2da6437d67365cf2f70ef66" kindref="member">HLD</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgraph__theory_1_1GraphAdj" kindref="compound">GraphAdj</ref><sp/>&amp;graph,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;T&gt;<sp/>&amp;data)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classhld_1_1HLD_1a891f87bda863c1d391e15455a63db9f5" kindref="member">heavy</ref>(graph.size(),<sp/>-1),<sp/><ref refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" kindref="member">head</ref>(graph.size(),<sp/>-1),<sp/><ref refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" kindref="member">pos</ref>(graph.size(),<sp/>-1),<sp/><ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>{graph}<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>.<ref refid="structgraph__theory_1_1GeneralSearch_1aadc7aa595d1aa3509f0ba6ee8489cf36" kindref="member">distance</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>(0);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacetree_1ae464c2bd0d1e78d727832472c579c2f6" kindref="member">sz</ref><sp/>=<sp/><ref refid="namespacegraph__theory_1a1fa8a9b42e79b9ce10e89e4659164f8d" kindref="member">get_size</ref>(<ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>heavy<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>:<sp/><ref refid="range_8hpp_1a438bd5fc0a79e42a6a2abb632203f925" kindref="member">rev</ref>(<ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>.<ref refid="structgraph__theory_1_1GeneralSearch_1ab65b2c9f98ace39d40abfaf399c135a7" kindref="member">queue</ref>))<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>.<ref refid="structgraph__theory_1_1GeneralSearch_1a3ed9b9d45c85402850e22f6e98055045" kindref="member">parent</ref>[idx]<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>2<sp/>*<sp/><ref refid="namespacetree_1ae464c2bd0d1e78d727832472c579c2f6" kindref="member">sz</ref>[<ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>.<ref refid="structgraph__theory_1_1GeneralSearch_1a3ed9b9d45c85402850e22f6e98055045" kindref="member">parent</ref>[idx]]<sp/>&gt;=<sp/><ref refid="namespacetree_1ae464c2bd0d1e78d727832472c579c2f6" kindref="member">sz</ref>[<ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>.<ref refid="structgraph__theory_1_1GeneralSearch_1a3ed9b9d45c85402850e22f6e98055045" kindref="member">parent</ref>[idx]])<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhld_1_1HLD_1a891f87bda863c1d391e15455a63db9f5" kindref="member">heavy</ref>[<ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>.<ref refid="structgraph__theory_1_1GeneralSearch_1a3ed9b9d45c85402850e22f6e98055045" kindref="member">parent</ref>[idx]]<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Walk<sp/>down<sp/>each<sp/>heavy<sp/>path<sp/>and<sp/>set<sp/>head<sp/>and<sp/>pos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>glob_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>idx<sp/>:<sp/><ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>.<ref refid="structgraph__theory_1_1GeneralSearch_1ab65b2c9f98ace39d40abfaf399c135a7" kindref="member">queue</ref>)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" kindref="member">head</ref>[idx]<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" kindref="member">head</ref>[x]<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" kindref="member">pos</ref>[x]<sp/>=<sp/>glob_pos;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++glob_pos;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/><ref refid="classhld_1_1HLD_1a891f87bda863c1d391e15455a63db9f5" kindref="member">heavy</ref>[x];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(glob_pos<sp/>==<sp/>graph.size());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;T&gt;<sp/>perm_data(graph.size());<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(idx,<sp/>graph.size())<sp/>{<sp/>perm_data[<ref refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" kindref="member">pos</ref>[idx]]<sp/>=<sp/>data[idx];<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhld_1_1HLD_1ac165aef014cd2c6e1cec6d56530e3881" kindref="member">ds</ref><sp/>=<sp/>QueryDS{perm_data};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50" refid="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" kindref="member">func_path</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>u,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Func<sp/>&amp;func)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;re<sp/>assuming<sp/>the<sp/>operation<sp/>is<sp/>commutative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>find<sp/>the<sp/>LCA<sp/>and<sp/>use<sp/>that<sp/>to<sp/>do<sp/>it<sp/>for<sp/>non-commutative<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>swap<sp/>u<sp/>and<sp/>v<sp/>if<sp/>there&apos;s<sp/>a<sp/>tie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceutility_1a4c8a9d0142092c8f2255e518bfdf9dc4" kindref="member">sort2</ref>(u,<sp/>v,<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>.<ref refid="structgraph__theory_1_1GeneralSearch_1aadc7aa595d1aa3509f0ba6ee8489cf36" kindref="member">distance</ref>[<ref refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" kindref="member">head</ref>[x]];<sp/>});</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" kindref="member">head</ref>[u]<sp/>==<sp/><ref refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" kindref="member">head</ref>[v])<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func(<ref refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" kindref="member">pos</ref>[<ref refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" kindref="member">head</ref>[v]],<sp/><ref refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" kindref="member">pos</ref>[v]<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>.<ref refid="structgraph__theory_1_1GeneralSearch_1a3ed9b9d45c85402850e22f6e98055045" kindref="member">parent</ref>[<ref refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" kindref="member">head</ref>[v]];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deal<sp/>with<sp/>the<sp/>last<sp/>heavy<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func(<ref refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" kindref="member">pos</ref>[v],<sp/><ref refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" kindref="member">pos</ref>[u]<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72" refid="classhld_1_1HLD_1a89ad91fa5429a48db553da8d44849415" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classhld_1_1HLD_1a89ad91fa5429a48db553da8d44849415" kindref="member">query</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>u,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>ret{<ref refid="namespacelinear__algebra_1aac11793366a8aa7d2396775fdb1ba8ca" kindref="member">identity</ref>(Monoid{},<sp/>T{})};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" kindref="member">func_path</ref>(u,<sp/>v,<sp/>[&amp;](<ref refid="structll" kindref="compound">ll</ref><sp/>u,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>v)<sp/>{<sp/>ret<sp/>=<sp/>Monoid{}(ret,<sp/><ref refid="classhld_1_1HLD_1ac165aef014cd2c6e1cec6d56530e3881" kindref="member">ds</ref>.query(u,<sp/>v));<sp/>});</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78" refid="classhld_1_1HLD_1a5010452fe04b89ecba385cec7a0c183f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhld_1_1HLD_1a5010452fe04b89ecba385cec7a0c183f" kindref="member">update</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>u,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhld_1_1HLD_1ace75fa88e8df29573405e9241c56baf0" kindref="member">func_path</ref>(u,<sp/>v,<sp/>[&amp;](<ref refid="structll" kindref="compound">ll</ref><sp/>u,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>v)<sp/>{<sp/><ref refid="classhld_1_1HLD_1ac165aef014cd2c6e1cec6d56530e3881" kindref="member">ds</ref>.update(u,<sp/>v,<sp/>val);<sp/>});</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83" refid="classhld_1_1HLD_1a891f87bda863c1d391e15455a63db9f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ll&gt;<sp/><ref refid="classhld_1_1HLD_1a891f87bda863c1d391e15455a63db9f5" kindref="member">heavy</ref>;<sp/></highlight></codeline>
<codeline lineno="84" refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ll&gt;<sp/><ref refid="classhld_1_1HLD_1aa7fead41864b4d6eac6470e62da467b5" kindref="member">head</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ll&gt;<sp/><ref refid="classhld_1_1HLD_1a6aa11b93d4b28d9353bf1b8568acce04" kindref="member">pos</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraph__theory_1_1DFS" kindref="compound">DFS&lt;&gt;</ref><sp/><ref refid="classhld_1_1HLD_1a521f3dfd2740fbb7f76946702355baf5" kindref="member">d</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DFS<sp/>of<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>why<sp/>doesn&apos;t<sp/>vector&lt;T&gt;{1}<sp/>work?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classhld_1_1HLD_1ac165aef014cd2c6e1cec6d56530e3881" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QueryDS<sp/><ref refid="classhld_1_1HLD_1ac165aef014cd2c6e1cec6d56530e3881" kindref="member">ds</ref>{vector&lt;T&gt;{-100,<sp/>-100}};<sp/></highlight><highlight class="comment">//<sp/>DS<sp/>used<sp/>for<sp/>querying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hld</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/graph/tree/hld.hpp"/>
  </compounddef>
</doxygen>
