<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="range_8hpp" kind="file" language="C++">
    <compoundname>range.hpp</compoundname>
    <includes refid="core_2all_8hpp" local="yes">core/all.hpp</includes>
    <includedby refid="operations_8hpp" local="yes">/home/ram/OmniTemplate/src/core/operations.hpp</includedby>
    <includedby refid="debug_8hpp" local="yes">/home/ram/OmniTemplate/src/core/debug.hpp</includedby>
    <includedby refid="core_2all_8hpp" local="yes">/home/ram/OmniTemplate/src/core/all.hpp</includedby>
    <includedby refid="utility_8hpp" local="yes">/home/ram/OmniTemplate/src/core/utility.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>bits/stdc++.h</label>
      </node>
      <node id="5">
        <label>experimental/source_location</label>
      </node>
      <node id="8">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>experimental/iterator</label>
      </node>
      <node id="2">
        <label>core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/core/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="55">
        <label>/home/ram/OmniTemplate/src/number_theory/modulo.hpp</label>
        <link refid="modulo_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>/home/ram/OmniTemplate/src/ds/test_cht.hpp</label>
        <link refid="test__cht_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/ram/OmniTemplate/src/combinatorics/test_combinatorics.hpp</label>
        <link refid="test__combinatorics_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/ram/OmniTemplate/src/graph/test_all.hpp</label>
        <link refid="test__all_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>/home/ram/OmniTemplate/src/ds/test_splay_tree.hpp</label>
        <link refid="test__splay__tree_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/ram/OmniTemplate/src/combinatorics/test_permutation.hpp</label>
        <link refid="test__permutation_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/ram/OmniTemplate/src/algebra/test_polynomial.hpp</label>
        <link refid="test__polynomial_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>/home/ram/OmniTemplate/src/ds/test_queue.hpp</label>
        <link refid="test__queue_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>/home/ram/OmniTemplate/src/ds/test_dsu.hpp</label>
        <link refid="test__dsu_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>/home/ram/OmniTemplate/src/ds/sparse_table.hpp</label>
        <link refid="sparse__table_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>/home/ram/OmniTemplate/src/core/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/home/ram/OmniTemplate/src/utility/test_graph_draw.hpp</label>
        <link refid="test__graph__draw_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/ram/OmniTemplate/src/graph/tree/test_hld.hpp</label>
        <link refid="test__hld_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/home/ram/OmniTemplate/src/algebra/polynomial.hpp</label>
        <link refid="polynomial_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/ram/OmniTemplate/src/graph/tree/hld.hpp</label>
        <link refid="hld_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>/home/ram/OmniTemplate/src/utility/test_string.hpp</label>
        <link refid="test__string_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/ram/OmniTemplate/src/algebra/linear_algebra.hpp</label>
        <link refid="linear__algebra_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>/home/ram/OmniTemplate/src/combinatorics/combinatorics.hpp</label>
        <link refid="combinatorics_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/src/core/operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>/home/ram/OmniTemplate/src/number_theory/number_theory.hpp</label>
        <link refid="number__theory_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>/home/ram/OmniTemplate/src/utility/coroutine.hpp</label>
        <link refid="coroutine_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/ram/OmniTemplate/src/number_theory/test_modulo.hpp</label>
        <link refid="test__modulo_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/ram/OmniTemplate/src/combinatorics/permutation.hpp</label>
        <link refid="permutation_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/ram/OmniTemplate/src/test/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="46">
        <label>/home/ram/OmniTemplate/src/ds/treap.hpp</label>
        <link refid="treap_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>/home/ram/OmniTemplate/src/ds/cht.hpp</label>
        <link refid="cht_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/ram/OmniTemplate/src/core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>/home/ram/OmniTemplate/src/graph/tree/test_centroid.hpp</label>
        <link refid="test__centroid_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>/home/ram/OmniTemplate/src/ds/splay_tree.hpp</label>
        <link refid="splay__tree_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>/home/ram/OmniTemplate/src/graph/tree/link_cut.hpp</label>
        <link refid="link__cut_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>/home/ram/OmniTemplate/src/graph/test_biconnected.hpp</label>
        <link refid="test__biconnected_8hpp"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/ram/OmniTemplate/src/algebra/test_linear_algebra.hpp</label>
        <link refid="test__linear__algebra_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>/home/ram/OmniTemplate/src/core/test_utility.hpp</label>
        <link refid="test__utility_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>/home/ram/OmniTemplate/src/ds/queue.hpp</label>
        <link refid="queue_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/home/ram/OmniTemplate/src/ds/segment_tree.hpp</label>
        <link refid="segment__tree_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>/home/ram/OmniTemplate/src/ds/bit.hpp</label>
        <link refid="bit_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/ram/OmniTemplate/src/graph/test_2sat.hpp</label>
        <link refid="test__2sat_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>/home/ram/OmniTemplate/src/number_theory/test_number_theory.hpp</label>
        <link refid="test__number__theory_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>/home/ram/OmniTemplate/src/graph/biconnected.hpp</label>
        <link refid="biconnected_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/ram/OmniTemplate/src/graph/test_flow.hpp</label>
        <link refid="test__flow_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>/home/ram/OmniTemplate/src/core/utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/core/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/ram/OmniTemplate/src/core/template.hpp</label>
        <link refid="template_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>/home/ram/OmniTemplate/src/ds/persistent.hpp</label>
        <link refid="persistent_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>/home/ram/OmniTemplate/src/utility/test_coroutine.hpp</label>
        <link refid="test__coroutine_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>/home/ram/OmniTemplate/src/graph/test_bipartite.hpp</label>
        <link refid="test__bipartite_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>/home/ram/OmniTemplate/src/ds/test_segment_tree.hpp</label>
        <link refid="test__segment__tree_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>/home/ram/OmniTemplate/src/ds/test_bit.hpp</label>
        <link refid="test__bit_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/ram/OmniTemplate/src/algebra/big_integer.hpp</label>
        <link refid="big__integer_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>/home/ram/OmniTemplate/src/graph/bipartite.hpp</label>
        <link refid="bipartite_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/ram/OmniTemplate/src/graph/all.hpp</label>
        <link refid="graph_2all_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/ram/OmniTemplate/src/core/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>/home/ram/OmniTemplate/src/graph/graph_view.hpp</label>
        <link refid="graph__view_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/ram/OmniTemplate/src/graph/2sat.hpp</label>
        <link refid="2sat_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>/home/ram/OmniTemplate/src/utility/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/ram/OmniTemplate/src/algebra/fft.hpp</label>
        <link refid="fft_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>/home/ram/OmniTemplate/src/graph/tree/centroid.hpp</label>
        <link refid="centroid_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/home/ram/OmniTemplate/src/core/main.hpp</label>
        <link refid="main_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>/home/ram/OmniTemplate/src/ds/test_sparse_table.hpp</label>
        <link refid="test__sparse__table_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>/home/ram/OmniTemplate/src/graph/tree/tree.hpp</label>
        <link refid="tree_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/ram/OmniTemplate/src/core/debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/ram/OmniTemplate/src/graph/flow.hpp</label>
        <link refid="flow_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>/home/ram/OmniTemplate/src/ds/dsu.hpp</label>
        <link refid="dsu_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/ram/OmniTemplate/src/utility/graph_draw.hpp</label>
        <link refid="graph__draw_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structit__base" prot="public">it_base</innerclass>
    <innerclass refid="structint__it" prot="public">int_it</innerclass>
    <innerclass refid="structrange" prot="public">range</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="range_8hpp_1a198fc8d7aeb577c1c390bbf3cf9ade86" prot="public" static="no">
        <name>bin</name>
        <param><defname>op</defname></param>
        <param><defname>Tp</defname></param>
        <initializer>auto operator op(Tp const &amp;a, Tp const &amp;<ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>) { return a.x op b.x; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="36" column="9" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78" prot="public" static="no" strong="no">
        <type></type>
        <name>isect</name>
        <enumvalue id="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78af9a713ed26dee661a259730e650987e4" prot="public">
          <name>null</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78ac667beae9e87c3d08798cd0a05efc536" prot="public">
          <name>dis</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a77dcb2124006c2c1902d0f49f75eacdc" prot="public">
          <name>over</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a37a1cc6c35e50ff31a8bda2d00998c1e" prot="public">
          <name>cont</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78ac1400642bc856b68972da1ae5e7a1015" prot="public">
          <name>eq</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="60" column="11" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="range_8hpp_1a6288a170c5a67a2c0b45c858a043722a" prot="public" static="no">
        <type><ref refid="structrange" kindref="compound">range</ref>&lt; <ref refid="structint__it" kindref="compound">int_it</ref>&lt; <ref refid="structll" kindref="compound">ll</ref> &gt; &gt;</type>
        <definition>using ra =  range&lt;int_it&lt;ll&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>ra</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="57" column="1" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="range_8hpp_1a2a9660e705c73071a9c68c86e5e92e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator==</definition>
        <argsstring>(int_it&lt; T &gt; const &amp;a, int_it&lt; T &gt; const &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structint__it" kindref="compound">int_it</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structint__it" kindref="compound">int_it</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="38" column="18" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="range_8hpp_1adf37877debb40c87ce158743d128a8df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator&lt;</definition>
        <argsstring>(int_it&lt; T &gt; const &amp;a, int_it&lt; T &gt; const &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structint__it" kindref="compound">int_it</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structint__it" kindref="compound">int_it</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="39" column="13" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="39" bodyend="39"/>
        <referencedby refid="cht_8hpp_1a18b063c150d95a5ec77dab71218c4f48" compoundref="cht_8hpp" startline="4" endline="7">std::operator&lt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="range_8hpp_1a5b1fcbc62cc963f6ab2598b13f114dd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator&lt;</definition>
        <argsstring>(range&lt; T &gt; const &amp;a, range&lt; T &gt; const &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="structrange" kindref="compound">range</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structrange" kindref="compound">range</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="51" column="13" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="51" bodyend="51"/>
        <references refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" compoundref="my__int_8hpp" startline="61">b</references>
        <references refid="structrange_1a626638a2956ba810e53246d756b2e653" compoundref="range_8hpp" startline="42">range&lt; T &gt;::bg</references>
        <references refid="structrange_1ae3f4c53575e4bd9a8ddfa92c3646c7b5" compoundref="range_8hpp" startline="42">range&lt; T &gt;::ed</references>
      </memberdef>
      <memberdef kind="function" id="range_8hpp_1a295cbb09d532a8eeeaab519fd1db0928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator&amp;</definition>
        <argsstring>(range&lt; T &gt; const &amp;a, range&lt; T &gt; const &amp;b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="structrange" kindref="compound">range</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structrange" kindref="compound">range</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="52" column="18" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="52" bodyend="52"/>
        <references refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" compoundref="my__int_8hpp" startline="61">b</references>
        <references refid="structrange_1a626638a2956ba810e53246d756b2e653" compoundref="range_8hpp" startline="42">range&lt; T &gt;::bg</references>
        <references refid="structrange_1ae3f4c53575e4bd9a8ddfa92c3646c7b5" compoundref="range_8hpp" startline="42">range&lt; T &gt;::ed</references>
      </memberdef>
      <memberdef kind="function" id="range_8hpp_1a438bd5fc0a79e42a6a2abb632203f925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Range</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto rev</definition>
        <argsstring>(const Range &amp;r)</argsstring>
        <name>rev</name>
        <param>
          <type>const Range &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="53" column="18" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="53" bodyend="56"/>
        <referencedby refid="biconnected_8hpp_1a72476443ae31ddf840e52f4a47f79055" compoundref="biconnected_8hpp" startline="7" endline="48">biconnected</referencedby>
        <referencedby refid="centroid_8hpp_1a3831178b7f165ffd952602f1ec4ba6a4" compoundref="centroid_8hpp" startline="6" endline="47">centroid_decomp</referencedby>
        <referencedby refid="structtree_1_1no_1af0fdce790d620d5787ac8efe7642ce70" compoundref="lca_8hpp" startline="28" endline="38">tree::no&lt; T &gt;::dp</referencedby>
        <referencedby refid="namespacegraph__theory_1a1fa8a9b42e79b9ce10e89e4659164f8d" compoundref="graph_2all_8hpp" startline="113" endline="121">graph_theory::get_size</referencedby>
        <referencedby refid="namespacetree_1ad6fb77bc640502f7cfbc3b49c7891419" compoundref="lca_8hpp" startline="40" endline="57">tree::lca</referencedby>
      </memberdef>
      <memberdef kind="function" id="range_8hpp_1acb6120c8a8224e1d4465bf980bc01d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structint__it" kindref="compound">int_it</ref>&lt; T &gt;</type>
        <definition>int_it&lt;T&gt; operator+</definition>
        <argsstring>(int_it&lt; T &gt; const &amp;a, int_it&lt; T &gt; const &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structint__it" kindref="compound">int_it</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structint__it" kindref="compound">int_it</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="58" column="20" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="58" bodyend="58"/>
        <references refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" compoundref="my__int_8hpp" startline="61">b</references>
        <references refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" compoundref="range_8hpp" startline="11">int_it&lt; T &gt;::x</references>
      </memberdef>
      <memberdef kind="function" id="range_8hpp_1a8b072587149274d1639908e4edb23d3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structint__it" kindref="compound">int_it</ref>&lt; T &gt;</type>
        <definition>int_it&lt;T&gt; operator-</definition>
        <argsstring>(int_it&lt; T &gt; const &amp;a)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="structint__it" kindref="compound">int_it</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="59" column="20" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="59" bodyend="59"/>
        <references refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" compoundref="range_8hpp" startline="11">int_it&lt; T &gt;::x</references>
      </memberdef>
      <memberdef kind="function" id="range_8hpp_1a5eeb4818d038580518b4e590a066ec12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto intersect</definition>
        <argsstring>(const T1 &amp;a, const T2 &amp;b)</argsstring>
        <name>intersect</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="61" column="20" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="61" bodyend="75"/>
        <references refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" compoundref="my__int_8hpp" startline="61">b</references>
        <references refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a37a1cc6c35e50ff31a8bda2d00998c1e" compoundref="range_8hpp" startline="60">cont</references>
        <references refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78ac667beae9e87c3d08798cd0a05efc536" compoundref="range_8hpp" startline="60">dis</references>
        <references refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78ac1400642bc856b68972da1ae5e7a1015" compoundref="range_8hpp" startline="60">eq</references>
        <references refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78af9a713ed26dee661a259730e650987e4" compoundref="range_8hpp" startline="60">null</references>
        <references refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a77dcb2124006c2c1902d0f49f75eacdc" compoundref="range_8hpp" startline="60">over</references>
        <referencedby refid="range_8hpp_1a2e6b26fca3ba13b074816e7b97f8245d" compoundref="range_8hpp" startline="76" endline="76">operator^</referencedby>
      </memberdef>
      <memberdef kind="function" id="range_8hpp_1a2e6b26fca3ba13b074816e7b97f8245d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator^</definition>
        <argsstring>(range&lt; T &gt; const &amp;a, range&lt; T &gt; const &amp;b)</argsstring>
        <name>operator^</name>
        <param>
          <type><ref refid="structrange" kindref="compound">range</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structrange" kindref="compound">range</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="76" column="18" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="76" bodyend="76"/>
        <references refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" compoundref="my__int_8hpp" startline="61">b</references>
        <references refid="range_8hpp_1a5eeb4818d038580518b4e590a066ec12" compoundref="range_8hpp" startline="61" endline="75">intersect</references>
      </memberdef>
      <memberdef kind="function" id="range_8hpp_1a3eb62dcf88ab5afad4d62c6fea4bb570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto filter</definition>
        <argsstring>(vector&lt; ra &gt; &amp;v)</argsstring>
        <name>filter</name>
        <param>
          <type>vector&lt; <ref refid="range_8hpp_1a6288a170c5a67a2c0b45c858a043722a" kindref="member">ra</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/core/range.hpp" line="77" column="6" bodyfile="/home/ram/OmniTemplate/src/core/range.hpp" bodystart="77" bodyend="85"/>
        <references refid="core_2all_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" compoundref="core_2all_8hpp" startline="19">al</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2all_8hpp" kindref="compound">core/all.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="structit__base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structit__base" kindref="compound">it_base</ref><sp/>{</highlight></codeline>
<codeline lineno="4" refid="structit__base_1a750730b3baf6464b16f1483c656f5dce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">value_type</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="5" refid="structit__base_1aff4e3754839c1106ced2e57a47d44425" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">pointer</ref><sp/>=<sp/>T<sp/>*;</highlight></codeline>
<codeline lineno="6" refid="structit__base_1a65ea2a2492ba8ae44a336fd192f5ff2a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">reference</ref><sp/>=<sp/>T<sp/>&amp;;</highlight></codeline>
<codeline lineno="7" refid="structit__base_1a2f441c3115c3b785aedc6816276d7511" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">difference_type</ref><sp/>=<sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal">};</highlight></codeline>
<codeline lineno="9" refid="structint__it" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structint__it" kindref="compound">int_it</ref><sp/>:<sp/><ref refid="structit__base" kindref="compound">it_base</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="10" refid="structint__it_1ad986a324b4a8e1c5a8fca9e411d6c078" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structint__it_1ad986a324b4a8e1c5a8fca9e411d6c078" kindref="member">iterator_category</ref><sp/>=<sp/>random_access_iterator_tag;</highlight></codeline>
<codeline lineno="11" refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref>,<sp/><ref refid="structint__it_1abf47510f41383d441e656a7a60e0ed19" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Integer&gt;</highlight></codeline>
<codeline lineno="13" refid="structint__it_1aa90da42bd4e6bda319461fece4aeec7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structint__it_1aa90da42bd4e6bda319461fece4aeec7b" kindref="member">int_it</ref>(Integer<sp/>x_,<sp/>T<sp/>m_<sp/>=<sp/>1)<sp/>:<sp/><ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref>(x_),<sp/><ref refid="structint__it_1abf47510f41383d441e656a7a60e0ed19" kindref="member">m</ref>(m_)<sp/>{}</highlight></codeline>
<codeline lineno="14" refid="structint__it_1a97f5d5ebe98f08abe434fcf64fd83f1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structint__it_1a97f5d5ebe98f08abe434fcf64fd83f1f" kindref="member">int_it</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="15" refid="structint__it_1a6afa1f0489e1f8b6ae372aee8cbfa244" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="structint__it_1a6afa1f0489e1f8b6ae372aee8cbfa244" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>x_stat;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x_stat<sp/>=<sp/><ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19" refid="structint__it_1aefbd19544f6f65507479b9058aab2998" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref>;<sp/>}</highlight></codeline>
<codeline lineno="20" refid="structint__it_1aff5e9dd149ee82a037564e075635b763" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structint__it" kindref="compound">int_it</ref><sp/><ref refid="structint__it_1aff5e9dd149ee82a037564e075635b763" kindref="member">operator+</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>y)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref><sp/>+<sp/><ref refid="structint__it_1abf47510f41383d441e656a7a60e0ed19" kindref="member">m</ref><sp/>*<sp/>y;<sp/>}</highlight></codeline>
<codeline lineno="21" refid="structint__it_1a11d8b2c8dacbe2341c89f62cf9e8610d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structint__it" kindref="compound">int_it</ref><sp/><ref refid="structint__it_1a11d8b2c8dacbe2341c89f62cf9e8610d" kindref="member">operator-</ref>(<ref refid="structll" kindref="compound">ll</ref><sp/>y)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref><sp/>-<sp/><ref refid="structint__it_1abf47510f41383d441e656a7a60e0ed19" kindref="member">m</ref><sp/>*<sp/>y;<sp/>}</highlight></codeline>
<codeline lineno="22" refid="structint__it_1a3a2c84ca5c1870c3047e052b5f5b3395" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structint__it_1a3a2c84ca5c1870c3047e052b5f5b3395" kindref="member">operator-</ref>(<ref refid="structint__it" kindref="compound">int_it&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;y)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref><sp/>-<sp/>y.<ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref>)<sp/>/<sp/><ref refid="structint__it_1abf47510f41383d441e656a7a60e0ed19" kindref="member">m</ref>;<sp/>}</highlight></codeline>
<codeline lineno="23" refid="structint__it_1a5cd1e32162f9ad122fb85002d6321013" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structint__it" kindref="compound">int_it</ref><sp/><ref refid="structint__it_1a5cd1e32162f9ad122fb85002d6321013" kindref="member">operator++</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref><sp/>+=<sp/><ref refid="structint__it_1abf47510f41383d441e656a7a60e0ed19" kindref="member">m</ref>;<sp/>}</highlight></codeline>
<codeline lineno="24" refid="structint__it_1afda2c78b3b1431cd325a63e47d5b4f9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structint__it" kindref="compound">int_it</ref><sp/><ref refid="structint__it_1afda2c78b3b1431cd325a63e47d5b4f9b" kindref="member">operator--</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref><sp/>-=<sp/><ref refid="structint__it_1abf47510f41383d441e656a7a60e0ed19" kindref="member">m</ref>;<sp/>}</highlight></codeline>
<codeline lineno="25" refid="structint__it_1a85eb0ee7f734e93b64a6432da5c2ab56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structint__it" kindref="compound">int_it</ref><sp/><ref refid="structint__it_1a85eb0ee7f734e93b64a6432da5c2ab56" kindref="member">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref><sp/>=<sp/><ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30" refid="structint__it_1a2892123a79f6f13fa6a9f16e8f5f207b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structint__it" kindref="compound">int_it</ref><sp/><ref refid="structint__it_1a2892123a79f6f13fa6a9f16e8f5f207b" kindref="member">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref><sp/>=<sp/><ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36" refid="range_8hpp_1a198fc8d7aeb577c1c390bbf3cf9ade86" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>bin(op,<sp/>Tp)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>auto<sp/>operator<sp/>op(Tp<sp/>const<sp/>&amp;a,<sp/>Tp<sp/>const<sp/>&amp;b)<sp/>{<sp/>return<sp/>a.x<sp/>op<sp/>b.x;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="range_8hpp_1a2a9660e705c73071a9c68c86e5e92e29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="range_8hpp_1a198fc8d7aeb577c1c390bbf3cf9ade86" kindref="member">bin</ref>(==,<sp/><ref refid="structint__it" kindref="compound">int_it&lt;T&gt;</ref>);</highlight></codeline>
<codeline lineno="39" refid="range_8hpp_1adf37877debb40c87ce158743d128a8df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="range_8hpp_1a198fc8d7aeb577c1c390bbf3cf9ade86" kindref="member">bin</ref>(&lt;,<sp/><ref refid="structint__it" kindref="compound">int_it&lt;T&gt;</ref>);</highlight></codeline>
<codeline lineno="41" refid="structrange" refkind="compound"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrange" kindref="compound">range</ref><sp/>{</highlight></codeline>
<codeline lineno="42" refid="structrange_1ae3f4c53575e4bd9a8ddfa92c3646c7b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structrange_1a626638a2956ba810e53246d756b2e653" kindref="member">bg</ref>,<sp/><ref refid="structrange_1ae3f4c53575e4bd9a8ddfa92c3646c7b5" kindref="member">ed</ref>;</highlight></codeline>
<codeline lineno="43" refid="structrange_1ad05dc640fa5b15e5bcffec3e6e195ab9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structrange_1ad05dc640fa5b15e5bcffec3e6e195ab9" kindref="member">range</ref>(T<sp/>ed_)<sp/>:<sp/><ref refid="structrange" kindref="compound">range</ref>(0LL,<sp/>ed_)<sp/>{}</highlight></codeline>
<codeline lineno="44" refid="structrange_1acc39e7240d6dd0d4f4069a610e0c366b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrange_1acc39e7240d6dd0d4f4069a610e0c366b" kindref="member">range</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;bg_,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;ed_)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//:<sp/>bg(bg_),<sp/>ed(max(bg,<sp/>static_cast&lt;T&gt;(ed_)))<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structrange_1a626638a2956ba810e53246d756b2e653" kindref="member">bg</ref>(bg_),<sp/><ref refid="structrange_1ae3f4c53575e4bd9a8ddfa92c3646c7b5" kindref="member">ed</ref>(ed_)<sp/>{}</highlight></codeline>
<codeline lineno="47" refid="structrange_1a9e40a11c9a0e9da9b9dbe5e1b21e1a38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structrange_1a9e40a11c9a0e9da9b9dbe5e1b21e1a38" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structrange_1a626638a2956ba810e53246d756b2e653" kindref="member">bg</ref>;<sp/>}</highlight></codeline>
<codeline lineno="48" refid="structrange_1abbe13c40fc2dbb3052319e1c1aa24ca8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structrange_1abbe13c40fc2dbb3052319e1c1aa24ca8" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structrange_1ae3f4c53575e4bd9a8ddfa92c3646c7b5" kindref="member">ed</ref>;<sp/>}</highlight></codeline>
<codeline lineno="49" refid="structrange_1a39b799ab3f38facb002a424f67cc2e71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structrange_1ae3f4c53575e4bd9a8ddfa92c3646c7b5" kindref="member">ed</ref><sp/>-<sp/><ref refid="structrange_1a626638a2956ba810e53246d756b2e653" kindref="member">bg</ref>;<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51" refid="range_8hpp_1a5b1fcbc62cc963f6ab2598b13f114dd8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1adf37877debb40c87ce158743d128a8df" kindref="member">operator&lt;</ref>(<ref refid="structrange" kindref="compound">range&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/><ref refid="structrange" kindref="compound">range&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="structrange_1a626638a2956ba810e53246d756b2e653" kindref="member">bg</ref><sp/>==<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>.bg<sp/>?<sp/>a.<ref refid="structrange_1ae3f4c53575e4bd9a8ddfa92c3646c7b5" kindref="member">ed</ref><sp/>&gt;<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>.ed<sp/>:<sp/>a.<ref refid="structrange_1a626638a2956ba810e53246d756b2e653" kindref="member">bg</ref><sp/>&lt;<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>.bg;<sp/>}</highlight></codeline>
<codeline lineno="52" refid="range_8hpp_1a295cbb09d532a8eeeaab519fd1db0928" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a295cbb09d532a8eeeaab519fd1db0928" kindref="member">operator&amp;</ref>(<ref refid="structrange" kindref="compound">range&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/><ref refid="structrange" kindref="compound">range&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structrange" kindref="compound">range&lt;T&gt;</ref>{max(a.<ref refid="structrange_1a626638a2956ba810e53246d756b2e653" kindref="member">bg</ref>,<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>.bg),<sp/>min(a.<ref refid="structrange_1ae3f4c53575e4bd9a8ddfa92c3646c7b5" kindref="member">ed</ref>,<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>.ed)};<sp/>}</highlight></codeline>
<codeline lineno="53" refid="range_8hpp_1a438bd5fc0a79e42a6a2abb632203f925" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Range&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a438bd5fc0a79e42a6a2abb632203f925" kindref="member">rev</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Range<sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>rev_it<sp/>=<sp/>reverse_iterator&lt;decltype(begin(r))&gt;;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structrange" kindref="compound">range</ref>{rev_it{end(r)},<sp/>rev_it{begin(r)}};</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57" refid="range_8hpp_1a6288a170c5a67a2c0b45c858a043722a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structrange" kindref="compound">ra</ref><sp/>=<sp/><ref refid="structrange" kindref="compound">range&lt;int_it&lt;ll&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="58" refid="range_8hpp_1acb6120c8a8224e1d4465bf980bc01d07" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="structint__it" kindref="compound">int_it&lt;T&gt;</ref><sp/><ref refid="range_8hpp_1acb6120c8a8224e1d4465bf980bc01d07" kindref="member">operator+</ref>(<ref refid="structint__it" kindref="compound">int_it&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/><ref refid="structint__it" kindref="compound">int_it&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref><sp/>+<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>.x;<sp/>}</highlight></codeline>
<codeline lineno="59" refid="range_8hpp_1a8b072587149274d1639908e4edb23d3d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="structint__it" kindref="compound">int_it&lt;T&gt;</ref><sp/><ref refid="range_8hpp_1a8b072587149274d1639908e4edb23d3d" kindref="member">operator-</ref>(<ref refid="structint__it" kindref="compound">int_it&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-a.<ref refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kindref="member">x</ref>;<sp/>}</highlight></codeline>
<codeline lineno="60" refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a77dcb2124006c2c1902d0f49f75eacdc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78" kindref="member">isect</ref><sp/>{<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">,<sp/><ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78ac667beae9e87c3d08798cd0a05efc536" kindref="member">dis</ref>,<sp/><ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a77dcb2124006c2c1902d0f49f75eacdc" kindref="member">over</ref>,<sp/><ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a37a1cc6c35e50ff31a8bda2d00998c1e" kindref="member">cont</ref>,<sp/><ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78ac1400642bc856b68972da1ae5e7a1015" kindref="member">eq</ref><sp/>};</highlight></codeline>
<codeline lineno="61" refid="range_8hpp_1a5eeb4818d038580518b4e590a066ec12" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a5eeb4818d038580518b4e590a066ec12" kindref="member">intersect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>&amp;<ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>==<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78ac1400642bc856b68972da1ae5e7a1015" kindref="member">isect::eq</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[1]<sp/>&lt;=<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>[0])<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78ac667beae9e87c3d08798cd0a05efc536" kindref="member">isect::dis</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[0]<sp/>&lt;=<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>[0]<sp/>&amp;&amp;<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>[1]<sp/>&lt;=<sp/>a[1])<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a37a1cc6c35e50ff31a8bda2d00998c1e" kindref="member">isect::cont</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[0]<sp/>&lt;=<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>[0]<sp/>&amp;&amp;<sp/>a[1]<sp/>&lt;=<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>[1])<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a77dcb2124006c2c1902d0f49f75eacdc" kindref="member">isect::over</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78af9a713ed26dee661a259730e650987e4" kindref="member">isect::null</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76" refid="range_8hpp_1a2e6b26fca3ba13b074816e7b97f8245d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a2e6b26fca3ba13b074816e7b97f8245d" kindref="member">operator^</ref>(<ref refid="structrange" kindref="compound">range&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/><ref refid="structrange" kindref="compound">range&lt;T&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max(<ref refid="range_8hpp_1a5eeb4818d038580518b4e590a066ec12" kindref="member">intersect</ref>(a,<sp/><ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>),<sp/><ref refid="range_8hpp_1a5eeb4818d038580518b4e590a066ec12" kindref="member">intersect</ref>(<ref refid="my__int_8hpp_1a9dc54a811b75d3d05d3deff10980ca7e" kindref="member">b</ref>,<sp/>a));<sp/>}</highlight></codeline>
<codeline lineno="77" refid="range_8hpp_1a3eb62dcf88ab5afad4d62c6fea4bb570" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="range_8hpp_1a3eb62dcf88ab5afad4d62c6fea4bb570" kindref="member">filter</ref>(vector&lt;ra&gt;<sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>sort(<ref refid="core_2all_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" kindref="member">al</ref>(v));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ra&gt;<sp/>sg;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p<sp/>:<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sg.empty()<sp/>||<sp/>sg.back().ed<sp/>&lt;<sp/>p.ed)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sg.push_back(p);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/core/range.hpp"/>
  </compounddef>
</doxygen>
