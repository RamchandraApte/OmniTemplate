<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="treap_8hpp" kind="file" language="C++">
    <compoundname>treap.hpp</compoundname>
    <includes refid="core_2all_8hpp" local="yes">core/all.hpp</includes>
    <includedby refid="template_8hpp" local="yes">/home/ram/OmniTemplate/src/core/template.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>bits/stdc++.h</label>
      </node>
      <node id="5">
        <label>experimental/source_location</label>
      </node>
      <node id="7">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>experimental/iterator</label>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/ds/treap.hpp</label>
        <link refid="treap_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/ds/treap.hpp</label>
        <link refid="treap_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/src/core/template.hpp</label>
        <link refid="template_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structtreap" prot="public">treap</innerclass>
    <innerclass refid="structsize__data" prot="public">size_data</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="treap_8hpp_1a75a87b416e4b63590fe320df19d3c513" prot="public" static="no">
        <name>flip</name>
        <param><defname>x</defname></param>
        <initializer>	if (trp-&gt;x) {                                                                              \
		trp-&gt;x-&gt;<ref refid="test__compiled_8cpp_1a438bd5fc0a79e42a6a2abb632203f925" kindref="member">rev</ref> ^= 1;                                                                  \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="115" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="treap_8hpp_1a7c3f109eab4e8235dee6ef14bfdf920b" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>template&lt; typename &gt; typename</type>
            <declname>Data_Temp</declname>
            <defname>Data_Temp</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structtreap" kindref="compound">treap</ref>&lt; Key, Data_Temp&lt; Key &gt; &gt;</type>
        <definition>using treap_t =  treap&lt;Key, Data_Temp&lt;Key&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>treap_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="13" column="1" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="treap_8hpp_1a8e26670f57733242dc7312c4072c49b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
        </templateparamlist>
        <type><ref refid="structsize__data" kindref="compound">size_data</ref>&lt; Key &gt;</type>
        <definition>size_data&lt;Key&gt; operator+</definition>
        <argsstring>(size_data&lt; Key &gt; const &amp;l, size_data&lt; Key &gt; const &amp;r)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="structsize__data" kindref="compound">size_data</ref>&lt; Key &gt; const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structsize__data" kindref="compound">size_data</ref>&lt; Key &gt; const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the data for a node given the data for the children. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="17" column="11" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="17" bodyend="19"/>
        <references refid="structsize__data_1a80d59df6df3a4dd01fdf8b3919785ecc" compoundref="treap_8hpp" startline="14">size_data&lt; Key &gt;::size</references>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1a1bb22f09c6a50d177b40b56d60bb62f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Key</type>
          </param>
        </templateparamlist>
        <type>ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(Stream &amp;os, size_data&lt; Key &gt; const &amp;data)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structsize__data" kindref="compound">size_data</ref>&lt; Key &gt; const &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print size data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="22" column="1" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="22" bodyend="24"/>
        <references refid="structsize__data_1a80d59df6df3a4dd01fdf8b3919785ecc" compoundref="treap_8hpp" startline="14">size_data&lt; Key &gt;::size</references>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1a88d816c35d3a703c27719dabc1631d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type>Data</type>
        <definition>Data get_data</definition>
        <argsstring>(treap&lt; Key, Data &gt; *trp)</argsstring>
        <name>get_data</name>
        <param>
          <type><ref refid="structtreap" kindref="compound">treap</ref>&lt; Key, Data &gt; *</type>
          <declname>trp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get data associated with the treap node </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="26" column="20" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="26" bodyend="28"/>
        <references refid="structtreap_1ab40ce02fc95a404710848a91512ecc9e" compoundref="treap_8hpp" startline="8">treap&lt; Key, Data &gt;::data</references>
        <referencedby refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" compoundref="treap_8hpp" startline="123" endline="139">split_imp</referencedby>
        <referencedby refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" compoundref="treap_8hpp" startline="29" endline="34">update_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Trp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void update_data</definition>
        <argsstring>(Trp *trp)</argsstring>
        <name>update_data</name>
        <param>
          <type>Trp *</type>
          <declname>trp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="29" column="18" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="29" bodyend="34"/>
        <references refid="treap_8hpp_1a88d816c35d3a703c27719dabc1631d79" compoundref="treap_8hpp" startline="26" endline="28">get_data</references>
        <referencedby refid="treap_8hpp_1add90798283a022be36a018723badda5b" compoundref="treap_8hpp" startline="99" endline="107">erase</referencedby>
        <referencedby refid="treap_8hpp_1ad45b31cb3a5a560af114abfcbce83936" compoundref="treap_8hpp" startline="80" endline="90">insert</referencedby>
        <referencedby refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" compoundref="treap_8hpp" startline="57" endline="75">join</referencedby>
        <referencedby refid="treap_8hpp_1ab4b19e3c8f0a975627a7261ed3e2c29b" compoundref="treap_8hpp" startline="37" endline="48">split</referencedby>
        <referencedby refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" compoundref="treap_8hpp" startline="123" endline="139">split_imp</referencedby>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1ab4b19e3c8f0a975627a7261ed3e2c29b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Data</type>
          </param>
          <param>
            <type>typename Trp</type>
            <defval><ref refid="structtreap" kindref="compound">treap</ref>&lt;Key, Data&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void split</definition>
        <argsstring>(treap&lt; Key, Data &gt; *trp, const Key &amp;key, Trp *&amp;l, Trp *&amp;r)</argsstring>
        <name>split</name>
        <param>
          <type><ref refid="structtreap" kindref="compound">treap</ref>&lt; Key, Data &gt; *</type>
          <declname>trp</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Trp *&amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>Trp *&amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Splits the treap by key </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="37" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="37" bodyend="48"/>
        <references refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" compoundref="treap_8hpp" startline="5">treap&lt; Key, Data &gt;::l</references>
        <references refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" compoundref="treap_8hpp" startline="5">treap&lt; Key, Data &gt;::r</references>
        <references refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" compoundref="treap_8hpp" startline="29" endline="34">update_data</references>
        <referencedby refid="treap_8hpp_1ad45b31cb3a5a560af114abfcbce83936" compoundref="treap_8hpp" startline="80" endline="90">insert</referencedby>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Trp</type>
          </param>
        </templateparamlist>
        <type>Trp *</type>
        <definition>Trp* join</definition>
        <argsstring>(Trp *l, Trp *r)</argsstring>
        <name>join</name>
        <param>
          <type>Trp *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>Trp *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Joins treap l and treap r. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>All the keys in l must be less than the keys in r. </para>
</simplesect>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Trp</parametername>
</parameternamelist>
<parameterdescription>
<para>A treap type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>The left half </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>The right half </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Trp*: The union of l and r. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="57" column="17" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="57" bodyend="75"/>
        <references refid="treap_8hpp_1a4a94ad7cd8f33ebf044afd6d79a174f8" compoundref="treap_8hpp" startline="109" endline="122">down</references>
        <references refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" compoundref="treap_8hpp" startline="29" endline="34">update_data</references>
        <referencedby refid="treap_8hpp_1add90798283a022be36a018723badda5b" compoundref="treap_8hpp" startline="99" endline="107">erase</referencedby>
        <referencedby refid="structsplay__tree_1_1SplayTree_1a967e320e3d33cad8b0a9c30cd51ed924" compoundref="test__compiled_8cpp" startline="2175" endline="2182">splay_tree::SplayTree&lt; T &gt;::erase</referencedby>
        <referencedby refid="treap_8hpp_1a5029123d55b27e0746b8616a6f79eda3" compoundref="treap_8hpp" startline="148" endline="153">erase_imp</referencedby>
        <referencedby refid="treap_8hpp_1aa2ab504328f4d744315ec1da21b666f3" compoundref="treap_8hpp" startline="155" endline="161">get_imp</referencedby>
        <referencedby refid="treap_8hpp_1aa2a3eaf4c00318c5a4c9298b83d06003" compoundref="treap_8hpp" startline="141" endline="146">insert_imp</referencedby>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1ad45b31cb3a5a560af114abfcbce83936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Trp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void insert</definition>
        <argsstring>(Trp *&amp;trp, Trp *x)</argsstring>
        <name>insert</name>
        <param>
          <type>Trp *&amp;</type>
          <declname>trp</declname>
        </param>
        <param>
          <type>Trp *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>inserts Node x into treap </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the new node to be inserted </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trp</parametername>
</parameternamelist>
<parameterdescription>
<para>the treap the node is inserted into </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Insert node x into treap trp</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="80" column="18" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="80" bodyend="90"/>
        <references refid="treap_8hpp_1ab4b19e3c8f0a975627a7261ed3e2c29b" compoundref="treap_8hpp" startline="37" endline="48">split</references>
        <references refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" compoundref="treap_8hpp" startline="29" endline="34">update_data</references>
        <referencedby refid="treap_8hpp_1a14ea768f9d1a656b814be126c0a631c8" compoundref="treap_8hpp" startline="93" endline="96">insert</referencedby>
        <referencedby refid="structsplay__tree_1_1SplayTree_1a2bf075a9e6a46e3f9b61e7b00b546707" compoundref="test__compiled_8cpp" startline="2171" endline="2174">splay_tree::SplayTree&lt; T &gt;::insert</referencedby>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1a14ea768f9d1a656b814be126c0a631c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Data</type>
          </param>
          <param>
            <type>typename Trp</type>
            <defval><ref refid="structtreap" kindref="compound">treap</ref>&lt;Key, Data&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto insert</definition>
        <argsstring>(treap&lt; Key, Data &gt; *&amp;trp, const Key &amp;key)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="structtreap" kindref="compound">treap</ref>&lt; Key, Data &gt; *&amp;</type>
          <declname>trp</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>insert a node with key </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>into</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Insert key into treap trp</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="93" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="93" bodyend="96"/>
        <references refid="treap_8hpp_1ad45b31cb3a5a560af114abfcbce83936" compoundref="treap_8hpp" startline="80" endline="90">insert</references>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1add90798283a022be36a018723badda5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Data</type>
          </param>
          <param>
            <type>typename Trp</type>
            <defval><ref refid="structtreap" kindref="compound">treap</ref>&lt;Key, Data&gt;</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void erase</definition>
        <argsstring>(treap&lt; Key, Data &gt; *&amp;trp, const Key &amp;key)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="structtreap" kindref="compound">treap</ref>&lt; Key, Data &gt; *&amp;</type>
          <declname>trp</declname>
        </param>
        <param>
          <type>const Key &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>erase the node with key </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>from the treap</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Erase key from treap</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="99" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="99" bodyend="107"/>
        <references refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" compoundref="treap_8hpp" startline="57" endline="75">join</references>
        <references refid="structtreap_1a6297c128b8cc434f2cb5110ea61368c1" compoundref="treap_8hpp" startline="7">treap&lt; Key, Data &gt;::key</references>
        <references refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" compoundref="treap_8hpp" startline="5">treap&lt; Key, Data &gt;::l</references>
        <references refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" compoundref="treap_8hpp" startline="5">treap&lt; Key, Data &gt;::r</references>
        <references refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" compoundref="treap_8hpp" startline="29" endline="34">update_data</references>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1a4a94ad7cd8f33ebf044afd6d79a174f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Trp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void down</definition>
        <argsstring>(Trp *trp)</argsstring>
        <name>down</name>
        <param>
          <type>Trp *</type>
          <declname>trp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Push updates down one level of the treap</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="109" column="18" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="109" bodyend="122"/>
        <references refid="treap_8hpp_1a75a87b416e4b63590fe320df19d3c513">flip</references>
        <referencedby refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" compoundref="treap_8hpp" startline="57" endline="75">join</referencedby>
        <referencedby refid="classsegment__tree_1_1SegmentTree_1aee0899b7aed45c73f0142ce425937fde" compoundref="test__compiled_8cpp" startline="1753" endline="1771">segment_tree::SegmentTree&lt; T, Query, Update, has_lazy, has_ptr, has_pers, base &gt;::query</referencedby>
        <referencedby refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" compoundref="treap_8hpp" startline="123" endline="139">split_imp</referencedby>
        <referencedby refid="classsegment__tree_1_1SegmentTree_1a5207ffe18417463bef339fd6d3183b5c" compoundref="test__compiled_8cpp" startline="1779" endline="1818">segment_tree::SegmentTree&lt; T, Query, Update, has_lazy, has_ptr, has_pers, base &gt;::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Trp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void split_imp</definition>
        <argsstring>(Trp *trp, ll pos, Trp *&amp;l, Trp *&amp;r, ll sum=0)</argsstring>
        <name>split_imp</name>
        <param>
          <type>Trp *</type>
          <declname>trp</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type>Trp *&amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>Trp *&amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>sum</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Splits the treap by pos</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="123" column="18" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="123" bodyend="139"/>
        <references refid="treap_8hpp_1a4a94ad7cd8f33ebf044afd6d79a174f8" compoundref="treap_8hpp" startline="109" endline="122">down</references>
        <references refid="treap_8hpp_1a88d816c35d3a703c27719dabc1631d79" compoundref="treap_8hpp" startline="26" endline="28">get_data</references>
        <references refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" compoundref="treap_8hpp" startline="29" endline="34">update_data</references>
        <referencedby refid="treap_8hpp_1a5029123d55b27e0746b8616a6f79eda3" compoundref="treap_8hpp" startline="148" endline="153">erase_imp</referencedby>
        <referencedby refid="treap_8hpp_1aa2ab504328f4d744315ec1da21b666f3" compoundref="treap_8hpp" startline="155" endline="161">get_imp</referencedby>
        <referencedby refid="treap_8hpp_1aa2a3eaf4c00318c5a4c9298b83d06003" compoundref="treap_8hpp" startline="141" endline="146">insert_imp</referencedby>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1aa2a3eaf4c00318c5a4c9298b83d06003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Trp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void insert_imp</definition>
        <argsstring>(Trp *&amp;trp, Trp *x, ll pos)</argsstring>
        <name>insert_imp</name>
        <param>
          <type>Trp *&amp;</type>
          <declname>trp</declname>
        </param>
        <param>
          <type>Trp *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a node x at position<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="141" column="18" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="141" bodyend="146"/>
        <references refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" compoundref="treap_8hpp" startline="57" endline="75">join</references>
        <references refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" compoundref="treap_8hpp" startline="123" endline="139">split_imp</references>
        <referencedby refid="treap_8hpp_1a4396c20ba2dc1e8172125ce5a28794e6" compoundref="treap_8hpp" startline="164" endline="166">insert_imp</referencedby>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1a5029123d55b27e0746b8616a6f79eda3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Trp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void erase_imp</definition>
        <argsstring>(Trp *&amp;trp, ll pos)</argsstring>
        <name>erase_imp</name>
        <param>
          <type>Trp *&amp;</type>
          <declname>trp</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Erase the node at position<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="148" column="18" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="148" bodyend="153"/>
        <references refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" compoundref="treap_8hpp" startline="57" endline="75">join</references>
        <references refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" compoundref="treap_8hpp" startline="123" endline="139">split_imp</references>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1aa2ab504328f4d744315ec1da21b666f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Trp</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto get_imp</definition>
        <argsstring>(Trp *&amp;trp, ll pos)</argsstring>
        <name>get_imp</name>
        <param>
          <type>Trp *&amp;</type>
          <declname>trp</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the node at positions<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="155" column="18" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="155" bodyend="161"/>
        <references refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" compoundref="treap_8hpp" startline="57" endline="75">join</references>
        <references refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" compoundref="treap_8hpp" startline="123" endline="139">split_imp</references>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1a4396c20ba2dc1e8172125ce5a28794e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Data</type>
          </param>
          <param>
            <type>typename Trp</type>
            <defval><ref refid="structtreap" kindref="compound">treap</ref>&lt;Key, Data&gt;</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto insert_imp</definition>
        <argsstring>(treap&lt; Key, Data &gt; *&amp;trp, Key const &amp;key, ll pos)</argsstring>
        <name>insert_imp</name>
        <param>
          <type><ref refid="structtreap" kindref="compound">treap</ref>&lt; Key, Data &gt; *&amp;</type>
          <declname>trp</declname>
        </param>
        <param>
          <type>Key const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="structll" kindref="compound">ll</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert the node with<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>at position</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>into</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>trp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="164" column="6" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="164" bodyend="166"/>
        <references refid="treap_8hpp_1aa2a3eaf4c00318c5a4c9298b83d06003" compoundref="treap_8hpp" startline="141" endline="146">insert_imp</references>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1adc9b978577ebe26d5cef50ae4dde2362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>auto &amp;</type>
        <definition>auto&amp; operator&lt;&lt;</definition>
        <argsstring>(Stream &amp;os, treap&lt; Ts... &gt; *trp)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structtreap" kindref="compound">treap</ref>&lt; Ts... &gt; *</type>
          <declname>trp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Debug print the treap </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="168" column="15" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="168" bodyend="180"/>
        <references refid="structtreap_1ab40ce02fc95a404710848a91512ecc9e" compoundref="treap_8hpp" startline="8">treap&lt; Key, Data &gt;::data</references>
        <references refid="structtreap_1a6297c128b8cc434f2cb5110ea61368c1" compoundref="treap_8hpp" startline="7">treap&lt; Key, Data &gt;::key</references>
        <references refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" compoundref="treap_8hpp" startline="5">treap&lt; Key, Data &gt;::l</references>
        <references refid="structtreap_1a44d79f0b2ed82d18375892821cf2d08e" compoundref="treap_8hpp" startline="6">treap&lt; Key, Data &gt;::pri</references>
        <references refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" compoundref="treap_8hpp" startline="5">treap&lt; Key, Data &gt;::r</references>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1ad72c7dcf3afbf183a09f2220922543d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void to_array</definition>
        <argsstring>(treap&lt; Key, Data &gt; *trp, vector&lt; Key &gt; &amp;out)</argsstring>
        <name>to_array</name>
        <param>
          <type><ref refid="structtreap" kindref="compound">treap</ref>&lt; Key, Data &gt; *</type>
          <declname>trp</declname>
        </param>
        <param>
          <type>vector&lt; Key &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert the elements of trp in-order into<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="182" column="20" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="182" bodyend="189"/>
        <references refid="structtreap_1a6297c128b8cc434f2cb5110ea61368c1" compoundref="treap_8hpp" startline="7">treap&lt; Key, Data &gt;::key</references>
        <references refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" compoundref="treap_8hpp" startline="5">treap&lt; Key, Data &gt;::l</references>
        <references refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" compoundref="treap_8hpp" startline="5">treap&lt; Key, Data &gt;::r</references>
        <referencedby refid="treap_8hpp_1a8627d817d1d1564b415505110432d65d" compoundref="treap_8hpp" startline="190" endline="195">to_array</referencedby>
      </memberdef>
      <memberdef kind="function" id="treap_8hpp_1a8627d817d1d1564b415505110432d65d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Key</type>
          </param>
          <param>
            <type>typename Data</type>
          </param>
        </templateparamlist>
        <type>vector&lt; Key &gt;</type>
        <definition>vector&lt;Key&gt; to_array</definition>
        <argsstring>(treap&lt; Key, Data &gt; *trp)</argsstring>
        <name>to_array</name>
        <param>
          <type><ref refid="structtreap" kindref="compound">treap</ref>&lt; Key, Data &gt; *</type>
          <declname>trp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Returns the array of keys for an implicit treap.</para>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/src/ds/treap.hpp" line="190" column="22" bodyfile="/home/ram/OmniTemplate/src/ds/treap.hpp" bodystart="190" bodyend="195"/>
        <references refid="treap_8hpp_1ad72c7dcf3afbf183a09f2220922543d5" compoundref="treap_8hpp" startline="182" endline="189">to_array</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2all_8hpp" kindref="compound">core/all.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="structtreap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Data&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtreap" kindref="compound">treap</ref><sp/>{</highlight></codeline>
<codeline lineno="5" refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtreap" kindref="compound">treap</ref><sp/>*<ref refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" kindref="member">l</ref>{},<sp/>*<ref refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" kindref="member">r</ref>{};<sp/></highlight></codeline>
<codeline lineno="6" refid="structtreap_1a44d79f0b2ed82d18375892821cf2d08e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structtreap_1a44d79f0b2ed82d18375892821cf2d08e" kindref="member">pri</ref>{};<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="7" refid="structtreap_1a6297c128b8cc434f2cb5110ea61368c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Key<sp/><ref refid="structtreap_1a6297c128b8cc434f2cb5110ea61368c1" kindref="member">key</ref>{};<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="8" refid="structtreap_1ab40ce02fc95a404710848a91512ecc9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Data<sp/><ref refid="structtreap_1ab40ce02fc95a404710848a91512ecc9e" kindref="member">data</ref>{};<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="9" refid="structtreap_1adf92c9b58f215038c2ddb286124d1f1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtreap_1adf92c9b58f215038c2ddb286124d1f1a" kindref="member">rev</ref>{};<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10" refid="structtreap_1af0c6230acc49fe4a276950fd1934463b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtreap_1af0c6230acc49fe4a276950fd1934463b" kindref="member">treap</ref>(Key<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;key_)<sp/>:<sp/><ref refid="structtreap_1a44d79f0b2ed82d18375892821cf2d08e" kindref="member">pri</ref>(<ref refid="namespaceutility_1a7fea553f6f915aa6c2affe79637d9b9f" kindref="member">reng</ref>()),<sp/><ref refid="structtreap_1a6297c128b8cc434f2cb5110ea61368c1" kindref="member">key</ref>{key_}<sp/>{<sp/><ref refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" kindref="member">update_data</ref>(&amp;</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal">};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Data_Temp&gt;</highlight></codeline>
<codeline lineno="13" refid="treap_8hpp_1a7c3f109eab4e8235dee6ef14bfdf920b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structtreap" kindref="compound">treap_t</ref><sp/>=<sp/><ref refid="structtreap" kindref="compound">treap&lt;Key, Data_Temp&lt;Key&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="14" refid="structsize__data_1a80d59df6df3a4dd01fdf8b3919785ecc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsize__data" kindref="compound">size_data</ref><sp/>{<sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structsize__data_1a80d59df6df3a4dd01fdf8b3919785ecc" kindref="member">size</ref>{};<sp/>};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key&gt;</highlight></codeline>
<codeline lineno="17" refid="treap_8hpp_1a8e26670f57733242dc7312c4072c49b6" refkind="member"><highlight class="normal"><ref refid="structsize__data" kindref="compound">size_data&lt;Key&gt;</ref><sp/><ref refid="treap_8hpp_1a8e26670f57733242dc7312c4072c49b6" kindref="member">operator+</ref>(<ref refid="structsize__data" kindref="compound">size_data&lt;Key&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;l,<sp/><ref refid="structsize__data" kindref="compound">size_data&lt;Key&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structsize__data" kindref="compound">size_data&lt;Key&gt;</ref>{l.<ref refid="structsize__data_1a80d59df6df3a4dd01fdf8b3919785ecc" kindref="member">size</ref><sp/>+<sp/>r.<ref refid="structsize__data_1a80d59df6df3a4dd01fdf8b3919785ecc" kindref="member">size</ref><sp/>+<sp/>1};</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key&gt;</highlight></codeline>
<codeline lineno="22" refid="treap_8hpp_1a1bb22f09c6a50d177b40b56d60bb62f0" refkind="member"><highlight class="normal">ostream<sp/>&amp;<ref refid="treap_8hpp_1a1bb22f09c6a50d177b40b56d60bb62f0" kindref="member">operator&lt;&lt;</ref>(Stream<sp/>&amp;os,<sp/><ref refid="structsize__data" kindref="compound">size_data&lt;Key&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;data)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>data.<ref refid="structsize__data_1a80d59df6df3a4dd01fdf8b3919785ecc" kindref="member">size</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26" refid="treap_8hpp_1a88d816c35d3a703c27719dabc1631d79" refkind="member"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Data&gt;<sp/>Data<sp/><ref refid="treap_8hpp_1a88d816c35d3a703c27719dabc1631d79" kindref="member">get_data</ref>(<ref refid="structtreap" kindref="compound">treap&lt;Key, Data&gt;</ref><sp/>*trp)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trp<sp/>?<sp/>trp-&gt;<ref refid="structtreap_1ab40ce02fc95a404710848a91512ecc9e" kindref="member">data</ref><sp/>:<sp/>Data{};</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29" refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" kindref="member">update_data</ref>(Trp<sp/>*trp)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trp)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>trp-&gt;data<sp/>=<sp/><ref refid="treap_8hpp_1a88d816c35d3a703c27719dabc1631d79" kindref="member">get_data</ref>(trp-&gt;l)<sp/>+<sp/><ref refid="treap_8hpp_1a88d816c35d3a703c27719dabc1631d79" kindref="member">get_data</ref>(trp-&gt;r);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp<sp/>=<sp/>treap&lt;Key,<sp/>Data&gt;&gt;</highlight></codeline>
<codeline lineno="37" refid="treap_8hpp_1ab4b19e3c8f0a975627a7261ed3e2c29b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1ab4b19e3c8f0a975627a7261ed3e2c29b" kindref="member">split</ref>(<ref refid="structtreap" kindref="compound">treap&lt;Key, Data&gt;</ref><sp/>*trp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key<sp/>&amp;key,<sp/>Trp<sp/>*&amp;l,<sp/>Trp<sp/>*&amp;r)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trp)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>r<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>&lt;<sp/>trp-&gt;key)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1ab4b19e3c8f0a975627a7261ed3e2c29b" kindref="member">split</ref>(trp-&gt;<ref refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" kindref="member">l</ref>,<sp/>key,<sp/>l,<sp/>trp-&gt;<ref refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" kindref="member">l</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>trp;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1ab4b19e3c8f0a975627a7261ed3e2c29b" kindref="member">split</ref>(trp-&gt;<ref refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" kindref="member">r</ref>,<sp/>key,<sp/>trp-&gt;<ref refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" kindref="member">r</ref>,<sp/>r);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>trp;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" kindref="member">update_data</ref>(trp);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57" refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" refkind="member"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp&gt;[[nodiscard]]<sp/>Trp<sp/>*<ref refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" kindref="member">join</ref>(Trp<sp/>*l,<sp/>Trp<sp/>*r)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1a4a94ad7cd8f33ebf044afd6d79a174f8" kindref="member">down</ref>(l);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1a4a94ad7cd8f33ebf044afd6d79a174f8" kindref="member">down</ref>(r);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>[&amp;]<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!l)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!r)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l-&gt;pri<sp/>&lt;<sp/>r-&gt;pri)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;l<sp/>=<sp/><ref refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" kindref="member">join</ref>(l,<sp/>r-&gt;l);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l-&gt;r<sp/>=<sp/><ref refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" kindref="member">join</ref>(l-&gt;r,<sp/>r);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" kindref="member">update_data</ref>(ret);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80" refid="treap_8hpp_1ad45b31cb3a5a560af114abfcbce83936" refkind="member"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1ad45b31cb3a5a560af114abfcbce83936" kindref="member">insert</ref>(Trp<sp/>*&amp;trp,<sp/>Trp<sp/>*x)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trp)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trp<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trp-&gt;pri<sp/>&lt;<sp/>x-&gt;pri)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1ab4b19e3c8f0a975627a7261ed3e2c29b" kindref="member">split</ref>(trp,<sp/>x-&gt;key,<sp/>x-&gt;l,<sp/>x-&gt;r),<sp/>trp<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1ad45b31cb3a5a560af114abfcbce83936" kindref="member">insert</ref>(x-&gt;key<sp/>&lt;<sp/>trp-&gt;key<sp/>?<sp/>trp-&gt;l<sp/>:<sp/>trp-&gt;r,<sp/>x);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" kindref="member">update_data</ref>(trp);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp<sp/>=<sp/>treap&lt;Key,<sp/>Data&gt;&gt;</highlight></codeline>
<codeline lineno="93" refid="treap_8hpp_1a14ea768f9d1a656b814be126c0a631c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1ad45b31cb3a5a560af114abfcbce83936" kindref="member">insert</ref>(<ref refid="structtreap" kindref="compound">treap&lt;Key, Data&gt;</ref><sp/>*&amp;trp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key<sp/>&amp;key)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1ad45b31cb3a5a560af114abfcbce83936" kindref="member">insert</ref>(trp,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Trp{key});</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp<sp/>=<sp/>treap&lt;Key,<sp/>Data&gt;&gt;</highlight></codeline>
<codeline lineno="99" refid="treap_8hpp_1add90798283a022be36a018723badda5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1add90798283a022be36a018723badda5b" kindref="member">erase</ref>(<ref refid="structtreap" kindref="compound">treap&lt;Key, Data&gt;</ref><sp/>*&amp;trp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key<sp/>&amp;key)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trp-&gt;<ref refid="structtreap_1a6297c128b8cc434f2cb5110ea61368c1" kindref="member">key</ref><sp/>==<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trp<sp/>=<sp/><ref refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" kindref="member">join</ref>(trp-&gt;<ref refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" kindref="member">l</ref>,<sp/>trp-&gt;<ref refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1add90798283a022be36a018723badda5b" kindref="member">erase</ref>(key<sp/>&lt;<sp/>trp-&gt;key<sp/>?<sp/>trp-&gt;<ref refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" kindref="member">l</ref><sp/>:<sp/>trp-&gt;<ref refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" kindref="member">r</ref>,<sp/>key);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" kindref="member">update_data</ref>(trp);</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Implicit<sp/>treaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="treap_8hpp_1a4a94ad7cd8f33ebf044afd6d79a174f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1a4a94ad7cd8f33ebf044afd6d79a174f8" kindref="member">down</ref>(Trp<sp/>*trp)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(trp<sp/>&amp;&amp;<sp/>trp-&gt;rev))<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>swap(trp-&gt;l,<sp/>trp-&gt;r);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>flip(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(trp-&gt;x)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trp-&gt;x-&gt;rev<sp/>^=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1a75a87b416e4b63590fe320df19d3c513" kindref="member">flip</ref>(l)<sp/><ref refid="treap_8hpp_1a75a87b416e4b63590fe320df19d3c513" kindref="member">flip</ref>(r)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>flip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trp-&gt;rev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123" refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" kindref="member">split_imp</ref>(Trp<sp/>*trp,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>pos,<sp/>Trp<sp/>*&amp;l,<sp/>Trp<sp/>*&amp;r,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>sum<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trp)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>r<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1a4a94ad7cd8f33ebf044afd6d79a174f8" kindref="member">down</ref>(trp);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>cur<sp/>=<sp/>sum<sp/>+<sp/><ref refid="treap_8hpp_1a88d816c35d3a703c27719dabc1631d79" kindref="member">get_data</ref>(trp-&gt;l).size;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;=<sp/>cur)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" kindref="member">split_imp</ref>(trp-&gt;l,<sp/>pos,<sp/>l,<sp/>trp-&gt;l,<sp/>sum);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>trp;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" kindref="member">split_imp</ref>(trp-&gt;r,<sp/>pos,<sp/>trp-&gt;r,<sp/>r,<sp/>cur<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>trp;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" kindref="member">update_data</ref>(trp);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141" refid="treap_8hpp_1aa2a3eaf4c00318c5a4c9298b83d06003" refkind="member"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1aa2a3eaf4c00318c5a4c9298b83d06003" kindref="member">insert_imp</ref>(Trp<sp/>*&amp;trp,<sp/>Trp<sp/>*x,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>Trp<sp/>*l,<sp/>*r;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" kindref="member">split_imp</ref>(trp,<sp/>pos,<sp/>l,<sp/>r);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" kindref="member">join</ref>(l,<sp/>x);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>trp<sp/>=<sp/><ref refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" kindref="member">join</ref>(l,<sp/>r);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148" refid="treap_8hpp_1a5029123d55b27e0746b8616a6f79eda3" refkind="member"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1a5029123d55b27e0746b8616a6f79eda3" kindref="member">erase_imp</ref>(Trp<sp/>*&amp;trp,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Trp<sp/>*l,<sp/>*r,<sp/>*x,<sp/>*nr;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" kindref="member">split_imp</ref>(trp,<sp/>pos,<sp/>l,<sp/>r);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" kindref="member">split_imp</ref>(r,<sp/>1,<sp/>x,<sp/>nr);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>trp<sp/>=<sp/><ref refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" kindref="member">join</ref>(l,<sp/>nr);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155" refid="treap_8hpp_1aa2ab504328f4d744315ec1da21b666f3" refkind="member"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1aa2ab504328f4d744315ec1da21b666f3" kindref="member">get_imp</ref>(Trp<sp/>*&amp;trp,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>Trp<sp/>*l,<sp/>*r,<sp/>*x,<sp/>*nr;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" kindref="member">split_imp</ref>(trp,<sp/>pos,<sp/>l,<sp/>r);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" kindref="member">split_imp</ref>(r,<sp/>1,<sp/>x,<sp/>nr);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>trp<sp/>=<sp/><ref refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" kindref="member">join</ref>(<ref refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" kindref="member">join</ref>(l,<sp/>x),<sp/>nr);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x-&gt;key;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Data,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Trp<sp/>=<sp/>treap&lt;Key,<sp/>Data&gt;&gt;</highlight></codeline>
<codeline lineno="164" refid="treap_8hpp_1a4396c20ba2dc1e8172125ce5a28794e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1aa2a3eaf4c00318c5a4c9298b83d06003" kindref="member">insert_imp</ref>(<ref refid="structtreap" kindref="compound">treap&lt;Key, Data&gt;</ref><sp/>*&amp;trp,<sp/>Key<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;key,<sp/><ref refid="structll" kindref="compound">ll</ref><sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1aa2a3eaf4c00318c5a4c9298b83d06003" kindref="member">insert_imp</ref>(trp,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Trp{key},<sp/>pos);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168" refid="treap_8hpp_1adc9b978577ebe26d5cef50ae4dde2362" refkind="member"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="treap_8hpp_1a1bb22f09c6a50d177b40b56d60bb62f0" kindref="member">operator&lt;&lt;</ref>(Stream<sp/>&amp;os,<sp/><ref refid="structtreap" kindref="compound">treap&lt;Ts...&gt;</ref><sp/>*trp)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>lvl<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structutility_1_1with" kindref="compound">with</ref><sp/>_w{lvl<sp/>+<sp/>1,<sp/>lvl};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>tab(lvl,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trp)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>tab<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;key<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>trp-&gt;<ref refid="structtreap_1a6297c128b8cc434f2cb5110ea61368c1" kindref="member">key</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;priority<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>trp-&gt;<ref refid="structtreap_1a44d79f0b2ed82d18375892821cf2d08e" kindref="member">pri</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>trp-&gt;<ref refid="structtreap_1ab40ce02fc95a404710848a91512ecc9e" kindref="member">data</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>tab<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Left&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>trp-&gt;<ref refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" kindref="member">l</ref><sp/>&lt;&lt;<sp/>tab<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Right&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>trp-&gt;<ref refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>tab<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182" refid="treap_8hpp_1ad72c7dcf3afbf183a09f2220922543d5" refkind="member"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Data&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="treap_8hpp_1ad72c7dcf3afbf183a09f2220922543d5" kindref="member">to_array</ref>(<ref refid="structtreap" kindref="compound">treap&lt;Key, Data&gt;</ref><sp/>*trp,<sp/>vector&lt;Key&gt;<sp/>&amp;out)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trp)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1ad72c7dcf3afbf183a09f2220922543d5" kindref="member">to_array</ref>(trp-&gt;<ref refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" kindref="member">l</ref>,<sp/>out);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>out.push_back(trp-&gt;<ref refid="structtreap_1a6297c128b8cc434f2cb5110ea61368c1" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1ad72c7dcf3afbf183a09f2220922543d5" kindref="member">to_array</ref>(trp-&gt;<ref refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" kindref="member">r</ref>,<sp/>out);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190" refid="treap_8hpp_1a8627d817d1d1564b415505110432d65d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Data&gt;<sp/>vector&lt;Key&gt;<sp/><ref refid="treap_8hpp_1ad72c7dcf3afbf183a09f2220922543d5" kindref="member">to_array</ref>(<ref refid="structtreap" kindref="compound">treap&lt;Key, Data&gt;</ref><sp/>*trp)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Key&gt;<sp/>out;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="treap_8hpp_1ad72c7dcf3afbf183a09f2220922543d5" kindref="member">to_array</ref>(trp,<sp/>out);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/ds/treap.hpp"/>
  </compounddef>
</doxygen>
