<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="string_8hpp" kind="file" language="C++">
    <compoundname>string.hpp</compoundname>
    <includes refid="core_2all_8hpp" local="yes">core/all.hpp</includes>
    <includes refid="modulo_8hpp" local="yes">number_theory/modulo.hpp</includes>
    <includedby refid="template_8hpp" local="yes">/home/ram/OmniTemplate/src/core/template.hpp</includedby>
    <includedby refid="test__string_8hpp" local="yes">/home/ram/OmniTemplate/src/string/test_string.hpp</includedby>
    <incdepgraph>
      <node id="11">
        <label>number_theory/modulo.hpp</label>
        <link refid="modulo_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>bits/stdc++.h</label>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/string/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>experimental/source_location</label>
      </node>
      <node id="7">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>experimental/iterator</label>
      </node>
      <node id="2">
        <label>core/all.hpp</label>
        <link refid="core_2all_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/ram/OmniTemplate/src/string/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/ram/OmniTemplate/src/string/test_string.hpp</label>
        <link refid="test__string_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/ram/OmniTemplate/src/test/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/src/core/template.hpp</label>
        <link refid="template_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structstring__tools_1_1hash__str" prot="public">string_tools::hash_str</innerclass>
    <innerclass refid="structstring__tools_1_1bytehash" prot="public">string_tools::bytehash</innerclass>
    <innerclass refid="structstring__tools_1_1search__it" prot="public">string_tools::search_it</innerclass>
    <innernamespace refid="namespacestring__tools">string_tools</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_2all_8hpp" kindref="compound">core/all.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="modulo_8hpp" kindref="compound">number_theory/modulo.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestring__tools" kindref="compound">string_tools</ref><sp/>{</highlight></codeline>
<codeline lineno="9" refid="structstring__tools_1_1hash__str" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstring__tools_1_1hash__str" kindref="compound">hash_str</ref><sp/>{</highlight></codeline>
<codeline lineno="10" refid="structstring__tools_1_1hash__str_1aa9060adc6314cf1ec5d0053f36ae8b2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="structstring__tools_1_1hash__str_1aa9060adc6314cf1ec5d0053f36ae8b2c" kindref="member">lcg_mod</ref><sp/>=<sp/>(1ULL<sp/>&lt;&lt;<sp/>62)<sp/>-<sp/>57;</highlight></codeline>
<codeline lineno="11" refid="structstring__tools_1_1hash__str_1aa3e90f086689a026dca8369ea3e7731a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structstring__tools_1_1hash__str_1aa3e90f086689a026dca8369ea3e7731a" kindref="member">st</ref>;</highlight></codeline>
<codeline lineno="12" refid="structstring__tools_1_1hash__str_1a010f516d75bf3e9084b1e0689d2fd024" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;modulo&gt;<sp/><ref refid="structstring__tools_1_1hash__str_1a2230ffd9a6373a583e8e52f822966744" kindref="member">h</ref>,<sp/><ref refid="structstring__tools_1_1hash__str_1a010f516d75bf3e9084b1e0689d2fd024" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="13" refid="structstring__tools_1_1hash__str_1aba56bc5901a45e72721a12256a831e69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1hash__str_1aba56bc5901a45e72721a12256a831e69" kindref="member">hash_str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>string_view<sp/>str)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structstring__tools_1_1hash__str_1aa3e90f086689a026dca8369ea3e7731a" kindref="member">st</ref>(str.data()),<sp/><ref refid="structstring__tools_1_1hash__str_1a2230ffd9a6373a583e8e52f822966744" kindref="member">h</ref>(str.size()<sp/>+<sp/>1),<sp/><ref refid="structstring__tools_1_1hash__str_1a010f516d75bf3e9084b1e0689d2fd024" kindref="member">p</ref>(str.size())<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structutility_1_1with" kindref="compound">with</ref><sp/>_w{<ref refid="structstring__tools_1_1hash__str_1aa9060adc6314cf1ec5d0053f36ae8b2c" kindref="member">lcg_mod</ref>,<sp/>modulo::modulus};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref><sp/>g<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(i,<sp/>0,<sp/>str.size())<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>*=<sp/><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref>{0x51a3e995948c0deULL};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1hash__str_1a2230ffd9a6373a583e8e52f822966744" kindref="member">h</ref>[i<sp/>+<sp/>1]<sp/>=<sp/><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref>{str[i]}<sp/>*<sp/>g;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partial_sum(<ref refid="core_2all_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" kindref="member">al</ref>(<ref refid="structstring__tools_1_1hash__str_1a2230ffd9a6373a583e8e52f822966744" kindref="member">h</ref>),<sp/>begin(<ref refid="structstring__tools_1_1hash__str_1a2230ffd9a6373a583e8e52f822966744" kindref="member">h</ref>));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>inv<sp/>=<sp/><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref>{1}<sp/>/<sp/><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref>{0x51a3e995948c0deULL};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref><sp/>x<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(i,<sp/>0,<sp/><ref refid="structstring__tools_1_1hash__str_1a010f516d75bf3e9084b1e0689d2fd024" kindref="member">p</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1hash__str_1a010f516d75bf3e9084b1e0689d2fd024" kindref="member">p</ref>[i]<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>*=<sp/><ref refid="structmodulo__namespace_1_1modulo" kindref="compound">modulo</ref>{inv};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29" refid="structstring__tools_1_1hash__str_1a75581b5cc9b3b8bfc41efbe0b395818d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structstring__tools_1_1hash__str_1a75581b5cc9b3b8bfc41efbe0b395818d" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>string_view<sp/>v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structutility_1_1with" kindref="compound">with</ref><sp/>_w{<ref refid="structstring__tools_1_1hash__str_1aa9060adc6314cf1ec5d0053f36ae8b2c" kindref="member">lcg_mod</ref>,<sp/>modulo::modulus};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>l<sp/>=<sp/>v.data()<sp/>-<sp/><ref refid="structstring__tools_1_1hash__str_1aa3e90f086689a026dca8369ea3e7731a" kindref="member">st</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="core_2all_8hpp_1ad54dde638d1ae3e9bb08956f539b1883" kindref="member">ll</ref>((<ref refid="structstring__tools_1_1hash__str_1a2230ffd9a6373a583e8e52f822966744" kindref="member">h</ref>[l<sp/>+<sp/>v.size()]<sp/>-<sp/><ref refid="structstring__tools_1_1hash__str_1a2230ffd9a6373a583e8e52f822966744" kindref="member">h</ref>[l])<sp/>*<sp/><ref refid="structstring__tools_1_1hash__str_1a010f516d75bf3e9084b1e0689d2fd024" kindref="member">p</ref>[l]);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39" refid="structstring__tools_1_1bytehash" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstring__tools_1_1bytehash" kindref="compound">bytehash</ref><sp/>{</highlight></codeline>
<codeline lineno="40" refid="structstring__tools_1_1bytehash_1afc02fa27b45d663d63c6b9f2532a150c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>constexpr<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1bytehash_1afc02fa27b45d663d63c6b9f2532a150c" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash&lt;string_view&gt;{}(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string_view{</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;x),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(x)});</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="46" refid="namespacestring__tools_1a4a75212a844e6d429ae67ed0bb52ac1c" refkind="member"><highlight class="normal">vector&lt;ll&gt;<sp/><ref refid="namespacestring__tools_1a4a75212a844e6d429ae67ed0bb52ac1c" kindref="member">prefix</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>n<sp/>=<sp/>s.size();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ll&gt;<sp/>p(n);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(i,<sp/>1,<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structll" kindref="compound">ll</ref><sp/>j<sp/>=<sp/>p[i<sp/>-<sp/>1];;<sp/>j<sp/>=<sp/>p[j<sp/>-<sp/>1])<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s[j]<sp/>==<sp/>s[i])<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>j<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!j)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63" refid="namespacestring__tools_1a314ab0a3b3f972a1af0b738851323829" refkind="member"><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacestring__tools_1a314ab0a3b3f972a1af0b738851323829" kindref="member">search_all</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;t,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>p<sp/>=<sp/><ref refid="namespacestring__tools_1a4a75212a844e6d429ae67ed0bb52ac1c" kindref="member">prefix</ref>(s<sp/>+<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>+<sp/>t);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ll&gt;<sp/>v;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_2all_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(i,<sp/>t.size())<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p[s.size()<sp/>+<sp/>1<sp/>+<sp/>i]<sp/>==<sp/>s.size())<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.push_back(i);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73" refid="namespacestring__tools_1a01217477dcb709d208fc7a38ee91d26e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="namespacestring__tools_1a01217477dcb709d208fc7a38ee91d26e" kindref="member">empstr</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75" refid="structstring__tools_1_1search__it" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref><sp/>:<sp/><ref refid="structit__base" kindref="compound">it_base</ref>&lt;ll&gt;<sp/>{</highlight></codeline>
<codeline lineno="76" refid="structstring__tools_1_1search__it_1acb50112dd85865f007cd61cce21075ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1search__it_1acb50112dd85865f007cd61cce21075ca" kindref="member">iterator_category</ref><sp/>=<sp/>input_iterator_tag;</highlight></codeline>
<codeline lineno="77" refid="structstring__tools_1_1search__it_1a14e5ffebdd56dc850d3f567f7a2bcfea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="structstring__tools_1_1search__it_1a14e5ffebdd56dc850d3f567f7a2bcfea" kindref="member">t</ref>,<sp/><ref refid="structstring__tools_1_1search__it_1a27c559aeb3162c49801b37724cd4312c" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="78" refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref>,<sp/><ref refid="structstring__tools_1_1search__it_1a87ec86b38282706ad524ea778ba728b0" kindref="member">ed</ref>;</highlight></codeline>
<codeline lineno="79" refid="structstring__tools_1_1search__it_1a3e2ab355700aab9c01656f76e4dec132" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ll&gt;<sp/><ref refid="structstring__tools_1_1search__it_1a3e2ab355700aab9c01656f76e4dec132" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="80" refid="structstring__tools_1_1search__it_1a0cf94550269ceab1506f23e769d3e16e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref><sp/>=<sp/>0,<sp/><ref refid="structstring__tools_1_1search__it_1a0cf94550269ceab1506f23e769d3e16e" kindref="member">o</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81" refid="structstring__tools_1_1search__it_1aca022e021ec03287386571ef78a8e954" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1search__it_1aca022e021ec03287386571ef78a8e954" kindref="member">search_it</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;t_,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;s_)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structstring__tools_1_1search__it_1a14e5ffebdd56dc850d3f567f7a2bcfea" kindref="member">t</ref>(t_),<sp/><ref refid="structstring__tools_1_1search__it_1a27c559aeb3162c49801b37724cd4312c" kindref="member">s</ref>(s_),<sp/><ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref>(<ref refid="structstring__tools_1_1search__it_1a27c559aeb3162c49801b37724cd4312c" kindref="member">s</ref>.size()),<sp/><ref refid="structstring__tools_1_1search__it_1a87ec86b38282706ad524ea778ba728b0" kindref="member">ed</ref>(<ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref><sp/>+<sp/>1<sp/>+<sp/><ref refid="structstring__tools_1_1search__it_1a14e5ffebdd56dc850d3f567f7a2bcfea" kindref="member">t</ref>.size()),<sp/><ref refid="structstring__tools_1_1search__it_1a3e2ab355700aab9c01656f76e4dec132" kindref="member">p</ref>(<ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85" refid="structstring__tools_1_1search__it_1a1605669d491f38f76e0f32902a4b0ce7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1search__it_1a1605669d491f38f76e0f32902a4b0ce7" kindref="member">search_it</ref>()<sp/>:<sp/><ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref>(<ref refid="namespacestring__tools_1a01217477dcb709d208fc7a38ee91d26e" kindref="member">empstr</ref>,<sp/><ref refid="namespacestring__tools_1a01217477dcb709d208fc7a38ee91d26e" kindref="member">empstr</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="86" refid="structstring__tools_1_1search__it_1af1edaa6e375d857575d012a55cdd4980" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1search__it_1af1edaa6e375d857575d012a55cdd4980" kindref="member">operator*</ref>()<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref><sp/>-<sp/>(<ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90" refid="structstring__tools_1_1search__it_1ae3b12022612273c38ee27b30942ded0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structstring__tools_1_1search__it_1ae3b12022612273c38ee27b30942ded0b" kindref="member">operator++</ref>()<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(++<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref>;<sp/><ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="structstring__tools_1_1search__it_1a87ec86b38282706ad524ea778ba728b0" kindref="member">ed</ref>;<sp/>++<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cur<sp/>=<sp/><ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref><sp/>&lt;=<sp/><ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref><sp/>?<sp/><ref refid="structstring__tools_1_1search__it_1a27c559aeb3162c49801b37724cd4312c" kindref="member">s</ref>.c_str()[<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref>]<sp/>:<sp/><ref refid="structstring__tools_1_1search__it_1a14e5ffebdd56dc850d3f567f7a2bcfea" kindref="member">t</ref>[**</highlight><highlight class="keyword">this</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="structll" kindref="compound">ll</ref><sp/>j<sp/>=<sp/><ref refid="structstring__tools_1_1search__it_1a0cf94550269ceab1506f23e769d3e16e" kindref="member">o</ref>;;<sp/>j<sp/>=<sp/><ref refid="structstring__tools_1_1search__it_1a3e2ab355700aab9c01656f76e4dec132" kindref="member">p</ref>[j<sp/>-<sp/>1])<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structstring__tools_1_1search__it_1a27c559aeb3162c49801b37724cd4312c" kindref="member">s</ref>[j]<sp/>==<sp/>cur)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1search__it_1a0cf94550269ceab1506f23e769d3e16e" kindref="member">o</ref><sp/>=<sp/>j<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!j)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1search__it_1a0cf94550269ceab1506f23e769d3e16e" kindref="member">o</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structstring__tools_1_1search__it_1a3e2ab355700aab9c01656f76e4dec132" kindref="member">p</ref>[<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref>]<sp/>=<sp/><ref refid="structstring__tools_1_1search__it_1a0cf94550269ceab1506f23e769d3e16e" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structstring__tools_1_1search__it_1a0cf94550269ceab1506f23e769d3e16e" kindref="member">o</ref><sp/>==<sp/><ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112" refid="namespacestring__tools_1ae6f8c1cd029548c31fa4c1cfab06a52f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacestring__tools_1ae6f8c1cd029548c31fa4c1cfab06a52f" kindref="member">operator==</ref>(<ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/><ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sa<sp/>=<sp/>a.<ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref>,<sp/>sb<sp/>=<sp/>b.<ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sa<sp/>^<sp/>sb)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref><sp/>==<sp/>b.<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sa)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref><sp/>==<sp/>a.<ref refid="structstring__tools_1_1search__it_1a87ec86b38282706ad524ea778ba728b0" kindref="member">ed</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sb)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b.<ref refid="structstring__tools_1_1search__it_1a87ec86b38282706ad524ea778ba728b0" kindref="member">ed</ref><sp/>==<sp/>b.<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125" refid="namespacestring__tools_1a072e7010806806c68fa2f537b0677c74" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacestring__tools_1a072e7010806806c68fa2f537b0677c74" kindref="member">operator&lt;</ref>(<ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/><ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sa<sp/>=<sp/>a.<ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref>,<sp/>sb<sp/>=<sp/>b.<ref refid="structstring__tools_1_1search__it_1aab70ce1b2fdb25d6476e2a68e3e42fef" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sa<sp/>^<sp/>sb)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref><sp/>&lt;<sp/>b.<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sa)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref><sp/>&lt;<sp/>a.<ref refid="structstring__tools_1_1search__it_1a87ec86b38282706ad524ea778ba728b0" kindref="member">ed</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sb)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b.<ref refid="structstring__tools_1_1search__it_1a87ec86b38282706ad524ea778ba728b0" kindref="member">ed</ref><sp/>&lt;<sp/>b.<ref refid="structstring__tools_1_1search__it_1abbec6589aea3d745e199d755d85d554a" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138" refid="namespacestring__tools_1a9ea78f4e72ed84a9dc9c77e705185739" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacestring__tools_1a9ea78f4e72ed84a9dc9c77e705185739" kindref="member">search_ra</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ts<sp/>&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structrange" kindref="compound">range</ref>{<ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref>(args...),<sp/><ref refid="structstring__tools_1_1search__it" kindref="compound">search_it</ref>()};</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>string_tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestring__tools" kindref="compound">string_tools</ref>;</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/src/string/string.hpp"/>
  </compounddef>
</doxygen>
