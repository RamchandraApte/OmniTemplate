<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structseg__base_3_01no__impl_3_01T_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>seg_base&lt; no_impl&lt; T &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structseg__base_3_01no__impl_3_01T_01_4_01_4_1a2ba58d2c0f5bf9131d5d4e5eea473f3b" prot="public" static="no" mutable="yes">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; seg_base&lt; no_impl&lt; T &gt; &gt;::v_</definition>
        <argsstring></argsstring>
        <name>v_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="127" column="16" bodyfile="seg_old.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structseg__base_3_01no__impl_3_01T_01_4_01_4_1ae01d4305c38ee7d28f71aa0e7be1cb84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto &amp;</type>
        <definition>auto&amp; seg_base&lt; no_impl&lt; T &gt; &gt;::v</definition>
        <argsstring>(no_impl&lt; T &gt; x) const</argsstring>
        <name>v</name>
        <param>
          <type><ref refid="structno__impl" kindref="compound">no_impl</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="128" column="6" bodyfile="seg_old.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structseg__base_3_01no__impl_3_01T_01_4_01_4_1a00c7c5560040884839cf799196cf4d31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto seg_base&lt; no_impl&lt; T &gt; &gt;::ok</definition>
        <argsstring>(no_impl&lt; T &gt; x) const</argsstring>
        <name>ok</name>
        <param>
          <type><ref refid="structno__impl" kindref="compound">no_impl</ref>&lt; T &gt;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="129" column="6" bodyfile="seg_old.hpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="structseg__base_3_01no__impl_3_01T_01_4_01_4_1a3e2438a2d9c9eace44420cd01c44a446" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>seg_base&lt; no_impl&lt; T &gt; &gt;::seg_base</definition>
        <argsstring>(const ll n, const T &amp;id)</argsstring>
        <name>seg_base</name>
        <param>
          <type>const <ref refid="structll" kindref="compound">ll</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="seg_old.hpp" line="130" column="1" bodyfile="seg_old.hpp" bodystart="130" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="seg_old.hpp" line="126" column="32" bodyfile="seg_old.hpp" bodystart="126" bodyend="139"/>
    <listofallmembers>
      <member refid="structseg__base_3_01no__impl_3_01T_01_4_01_4_1a00c7c5560040884839cf799196cf4d31" prot="public" virt="non-virtual"><scope>seg_base&lt; no_impl&lt; T &gt; &gt;</scope><name>ok</name></member>
      <member refid="structseg__base_3_01no__impl_3_01T_01_4_01_4_1a3e2438a2d9c9eace44420cd01c44a446" prot="public" virt="non-virtual"><scope>seg_base&lt; no_impl&lt; T &gt; &gt;</scope><name>seg_base</name></member>
      <member refid="structseg__base_3_01no__impl_3_01T_01_4_01_4_1ae01d4305c38ee7d28f71aa0e7be1cb84" prot="public" virt="non-virtual"><scope>seg_base&lt; no_impl&lt; T &gt; &gt;</scope><name>v</name></member>
      <member refid="structseg__base_3_01no__impl_3_01T_01_4_01_4_1a2ba58d2c0f5bf9131d5d4e5eea473f3b" prot="public" virt="non-virtual"><scope>seg_base&lt; no_impl&lt; T &gt; &gt;</scope><name>v_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
