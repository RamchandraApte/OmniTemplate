<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="program__listing__file__core_8hpp_8rst_8txt" kind="file" language="C++">
    <compoundname>program_listing_file_core.hpp.rst.txt</compoundname>
    <includes local="no">bits/stdc++.h</includes>
    <includes local="no">experimental/iterator</includes>
    <includes local="no">experimental/source_location</includes>
    <includes refid="io_8hpp" local="yes">io.hpp</includes>
    <includes refid="debug_8hpp" local="yes">debug.hpp</includes>
    <includes refid="operations_8hpp" local="yes">operations.hpp</includes>
    <includes refid="range_8hpp" local="yes">range.hpp</includes>
    <includes refid="utility_8hpp" local="yes">utility.hpp</includes>
    <incdepgraph>
      <node id="2">
        <label>bits/stdc++.h</label>
      </node>
      <node id="5">
        <label>io.hpp</label>
        <link refid="io_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>experimental/source_location</label>
      </node>
      <node id="3">
        <label>experimental/iterator</label>
      </node>
      <node id="1">
        <label>docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt</label>
        <link refid="program__listing__file__core_8hpp_8rst_8txt"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>utility.hpp</label>
        <link refid="utility_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>debug.hpp</label>
        <link refid="debug_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>range.hpp</label>
        <link refid="range_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>core.hpp</label>
        <link refid="core_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>operations.hpp</label>
        <link refid="operations_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structlets__add" prot="public">lets_add</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a9d597f42af7d85fd96c46aa17cc610d9" prot="public" static="no">
        <name>fo</name>
        <param><defname>i</defname></param>
        <param><defname>...</defname></param>
        <initializer>for ([[maybe_unused]] const auto i : <ref refid="structrange" kindref="compound">ra</ref>{__VA_ARGS__})</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="28" column="40"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a7b724588414fb77283c807a1ad82313c" prot="public" static="no">
        <name>fr</name>
        <param><defname>i</defname></param>
        <param><defname>...</defname></param>
        <initializer>for ([[maybe_unused]] const auto i : rev(<ref refid="structrange" kindref="compound">ra</ref>{__VA_ARGS__}))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="29" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a6779ef315f4a9c289636c8f466c823e3" prot="public" static="no">
        <name>tm</name>
        <param><defname>...</defname></param>
        <initializer>template &lt;typename __VA_ARGS__ T&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="30" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a50383951d2a9d4f1a855b2cec5e03274" prot="public" static="no">
        <name>this</name>
        <initializer>(*this)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="31" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a2f9ddbc7133cc3a48efbc824006bd3cb" prot="public" static="no">
        <name>al</name>
        <param><defname>v</defname></param>
        <initializer>begin(v), end(v)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="32" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a64daeab6d74dffeca723fbb620b687cb" prot="public" static="no">
        <name>I</name>
        <param><defname>x</defname></param>
        <initializer>       <ref refid="structll" kindref="compound">ll</ref> x;                                                                  \
       cin &gt;&gt; x;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="33" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a276c5a0e984cf60015b27252fe04fe6b" prot="public" static="no">
        <name>pb</name>
        <initializer>push_back</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="36" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1aff943633016deb6c62a519ffe92c6819" prot="public" static="no">
        <name>vc</name>
        <initializer>vector</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="37" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a7f10cc81a560bb73b2eb647dfb10c9db" prot="public" static="no">
        <name>rel_assert</name>
        <param><defname>...</defname></param>
        <initializer>s</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="40" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a108d6c5c51dd46e82a62b262394f0242" prot="public" static="no">
        <name>WARN</name>
        <param><defname>msg</defname></param>
        <initializer>       [[deprecated(msg)]] auto warn = []() { rel_assert(msg); };             \
       warn();</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="41" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1ad47194c03eba4b38147c9d01c0166802" prot="public" static="no">
        <name>TODO</name>
        <param><defname>msg</defname></param>
        <initializer>WARN(&quot;TODO: &quot; msg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="44" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a38dec4d2a6700e0c88ced9eeebb3dfaa" prot="public" static="no">
        <name>paste2</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>x##y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="45" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a396f7338a30cd5803df5ae220da88711" prot="public" static="no">
        <name>paste</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>paste2(x, y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="46" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a5f81e19fe0a4c7a463bf91e49e641270" prot="public" static="no">
        <name>lets_count</name>
        <initializer><ref refid="structlets__add" kindref="compound">lets_add</ref> paste(_l, __COUNTER__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="47" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a30d2d6ecdd50cafce635775b6e4e1cf2" prot="public" static="no">
        <name>let</name>
        <param><defname>a</defname></param>
        <param><defname>...</defname></param>
        <initializer>       using a = __VA_ARGS__;                                                 \
       lets_count{#__VA_ARGS__, #a};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="48" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a7796040cab730b2436f078c78d117cab" prot="public" static="no">
        <name>import</name>
        <param><defname>a</defname></param>
        <initializer>       using namespace a;                                                     \
       lets_count{#a &quot;::&quot;, &quot;&quot;};</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="51" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__core_8hpp_8rst_8txt_1a1a5cedaa2166b87bc174d54c6a9aae47" prot="public" static="no">
        <name>df</name>
        <param><defname>x</defname></param>
        <param><defname>v</defname></param>
        <initializer>remove_const_t&lt;decltype(v)&gt; x = v</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="54" column="12" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1a583d558126ab02babe89a77ae06a4156" prot="public" static="no">
        <type>long long</type>
        <definition>using lli =  long long</definition>
        <argsstring></argsstring>
        <name>lli</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="74" column="51" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1a25adbdf7a4a6b491d22ca84426e075c6" prot="public" static="no">
        <type>unsigned long long</type>
        <definition>using ull =  unsigned long long</definition>
        <argsstring></argsstring>
        <name>ull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="75" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1ad54dde638d1ae3e9bb08956f539b1883" prot="public" static="no">
        <type>long long</type>
        <definition>using ll =  long long</definition>
        <argsstring></argsstring>
        <name>ll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="76" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1a8634e9b99169b29bc9a86927e715da54" prot="public" static="no">
        <type>vector&lt; <ref refid="structll" kindref="compound">ll</ref> &gt;</type>
        <definition>using vl =  vector&lt;ll&gt;</definition>
        <argsstring></argsstring>
        <name>vl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="77" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1a2e2e73e53fc509e05f252ef083503838" prot="public" static="no">
        <type>long double</type>
        <definition>using ld =  long double</definition>
        <argsstring></argsstring>
        <name>ld</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="78" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1a58e2677d80a09b5be0f0e56ef70d4507" prot="public" static="no">
        <type>pair&lt; <ref refid="structll" kindref="compound">ll</ref>, <ref refid="structll" kindref="compound">ll</ref> &gt;</type>
        <definition>using pr =  pair&lt;ll, ll&gt;</definition>
        <argsstring></argsstring>
        <name>pr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="78" column="43" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1ac6774acaa7fff278845893bd84e35525" prot="public" static="no">
        <type>complex&lt; double &gt;</type>
        <definition>using com =  complex&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>com</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="79" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1ae6bbe80dfafc6e30f518f3de1cafec50" prot="public" static="no">
        <type>complex&lt; <ref refid="structll" kindref="compound">ll</ref> &gt;</type>
        <definition>using point =  complex&lt;ll&gt;</definition>
        <argsstring></argsstring>
        <name>point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="80" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1a52c977d91e62bd8e617e5cb2926547e1" prot="public" static="no">
        <type>bitset&lt; numeric_limits&lt; <ref refid="structll" kindref="compound">ll</ref> &gt;::digits &gt;</type>
        <definition>using bt =  bitset&lt;numeric_limits&lt;ll&gt;::digits&gt;</definition>
        <argsstring></argsstring>
        <name>bt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="82" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1ac0b978e8ffc2c44656160a679f86e22a" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Comp</type>
          </param>
        </templateparamlist>
        <type>std::priority_queue&lt; T, vector&lt; T &gt;, Comp &gt;</type>
        <definition>using prio_queue_t =  std::priority_queue&lt;T, vector&lt;T&gt;, Comp&gt;</definition>
        <argsstring></argsstring>
        <name>prio_queue_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="84" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1a71fb2247d044e41f5345bcdb26020926" prot="public" static="no">
        <type>high_resolution_clock</type>
        <definition>using clock_ =  high_resolution_clock</definition>
        <argsstring></argsstring>
        <name>clock_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="85" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="program__listing__file__core_8hpp_8rst_8txt_1a9925e7a8568cf11b8431a0e634ada482" prot="public" static="no">
        <type>unordered_map&lt; <ref refid="structll" kindref="compound">ll</ref>, <ref refid="structll" kindref="compound">ll</ref> &gt;</type>
        <definition>using um =  unordered_map&lt;ll, ll&gt;</definition>
        <argsstring></argsstring>
        <name>um</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="87" column="4" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="program__listing__file__core_8hpp_8rst_8txt_1a4f3323ddb6dcc5e6dcb0fb27a85eff50" prot="public" static="no" mutable="no">
        <type>_program_listing_file_core</type>
        <definition>_program_listing_file_core hpp</definition>
        <argsstring></argsstring>
        <name>hpp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="2" column="28" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__core_8hpp_8rst_8txt_1aa021995764a0c77f628e3411497239cc" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool debug_mode</definition>
        <argsstring></argsstring>
        <name>debug_mode</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="38" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__core_8hpp_8rst_8txt_1a10aff294e2147e1cfe921bc2648b4399" prot="public" static="no" mutable="no">
        <type>vector&lt; pair&lt; string, string &gt; &gt;</type>
        <definition>vector&lt;pair&lt;string, string&gt; &gt; lets</definition>
        <argsstring></argsstring>
        <name>lets</name>
        <initializer>{{&quot;__debug::&quot;, &quot;&quot;},
                     {&quot;const &quot;, &quot;&quot;},
                     {&quot;__cxx11::basic_string&lt;char&gt;&quot;, &quot;string&quot;}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="56" column="11" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__core_8hpp_8rst_8txt_1aa3bd6940ab68cd10b31ac2ff2495ffab" prot="public" static="no" mutable="no">
        <type><ref refid="structlets__add" kindref="compound">lets_add</ref></type>
        <definition>lets_add _l__COUNTER__</definition>
        <argsstring></argsstring>
        <name>_l__COUNTER__</name>
        <initializer>{&quot;std&quot; &quot;::&quot;, &quot;&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="67" column="35" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__core_8hpp_8rst_8txt_1ab89b6ceb8bf54011eedd872b54361eca" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto inf</definition>
        <argsstring></argsstring>
        <name>inf</name>
        <initializer>= <ref refid="structll" kindref="compound">ll</ref>(numeric_limits&lt;<ref refid="structll" kindref="compound">ll</ref>&gt;::max()) / 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="95" column="19" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__core_8hpp_8rst_8txt_1a6a2dbe8e1a58258f9060682cf7ea063b" prot="public" static="no" mutable="no">
        <type>const auto</type>
        <definition>const auto delim</definition>
        <argsstring></argsstring>
        <name>delim</name>
        <initializer>= &quot;, &quot;s</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="96" column="15" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__core_8hpp_8rst_8txt_1a989a29f26fc8591b33ecf33d4d2c7029" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tau</definition>
        <argsstring></argsstring>
        <name>tau</name>
        <initializer>= 2 * 3.1415926535897932384626433L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="97" column="19" bodyfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__core_8hpp_8rst_8txt_1a5da77c5a58b4193f997d91f2130efd53" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool multitest</definition>
        <argsstring></argsstring>
        <name>multitest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" line="98" column="16" bodyfile="d.cpp" bodystart="3" bodyend="-1" declfile="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt" declline="98" declcolumn="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal">..<sp/>_program_listing_file_core.hpp:</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">Program<sp/>Listing<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>File<sp/>core.hpp</highlight></codeline>
<codeline lineno="5"><highlight class="normal">=================================</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">|exhale_lsh|<sp/>:ref:`Return<sp/>to<sp/>documentation<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>file<sp/>&lt;file_core.hpp&gt;`<sp/>(``core.hpp``)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">..<sp/>|exhale_lsh|<sp/>unicode::<sp/>U+021B0<sp/>..<sp/>UPWARDS<sp/>ARROW<sp/>WITH<sp/>TIP<sp/>LEFTWARDS</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">..<sp/>code-block::<sp/>cpp</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/>#pragma<sp/>once</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/>#ifndef<sp/>PRE</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//#if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/>#define<sp/>REALGCC</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/>#ifdef<sp/>REALGCC</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/>#include<sp/>&lt;bits/extc++.h&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>#include<sp/>&lt;bits/stdc++.h&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/>#include<sp/>&lt;experimental/iterator&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/>#include<sp/>&lt;experimental/source_location&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/>#define<sp/>fo(i,<sp/>...)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>([[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/><ref refid="structrange" kindref="compound">ra</ref>{__VA_ARGS__})</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/>#define<sp/>fr(i,<sp/>...)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>([[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>rev(<ref refid="structrange" kindref="compound">ra</ref>{__VA_ARGS__}))</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>tm(...)<sp/>template<sp/>&lt;typename<sp/>__VA_ARGS__<sp/>T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>this<sp/>(*this)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>al(v)<sp/>begin(v),<sp/>end(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>I(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cin<sp/>&gt;&gt;<sp/>x;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>pb<sp/>push_back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>vc<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_mode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//#define<sp/>rel_assert(msg)<sp/>if<sp/>constexpr(debug_mode){static_assert(false,<sp/>msg);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>rel_assert(...)<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>WARN(msg)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[deprecated(msg)]]<sp/>auto<sp/>warn<sp/>=<sp/>[]()<sp/>{<sp/>rel_assert(msg);<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>warn();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>TODO(msg)<sp/>WARN(&quot;TODO:<sp/>&quot;<sp/>msg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>paste2(x,<sp/>y)<sp/>x##y</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>paste(x,<sp/>y)<sp/>paste2(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>lets_count<sp/>lets_add<sp/>paste(_l,<sp/>__COUNTER__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>let(a,<sp/>...)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>a<sp/>=<sp/>__VA_ARGS__;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lets_count{#__VA_ARGS__,<sp/>#a};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>import(a)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>namespace<sp/>a;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lets_count{#a<sp/>&quot;::&quot;,<sp/>&quot;&quot;};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>df(x,<sp/>v)<sp/>remove_const_t&lt;decltype(v)&gt;<sp/>x<sp/>=<sp/>v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>vector&lt;pair&lt;string,<sp/>string&gt;&gt;<sp/>lets{{</highlight><highlight class="stringliteral">&quot;__debug::&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;const<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;__cxx11::basic_string&lt;char&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">}};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structlets__add" kindref="compound">lets_add</ref><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlets__add" kindref="compound">lets_add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{<sp/>lets.push_back({a,<sp/>b});<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>REALGCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal">(__gnu_pbds);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>__gnu_cxx::power;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::priority_queue;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal">(std);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>import(experimental);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>experimental::make_ostream_joiner;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>experimental::ostream_joiner;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>experimental::source_location;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal">(chrono);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal">(literals);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal">(placeholders)<sp/>let(lli,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>let(ull,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>let(<ref refid="structll" kindref="compound">ll</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/>let(vl,<sp/>vector&lt;ll&gt;);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>let(ld,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>let(pr,<sp/>pair&lt;ll,<sp/>ll&gt;);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>let(com,<sp/>complex&lt;double&gt;);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>let(point,<sp/>complex&lt;ll&gt;);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>let(ull,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>bt<sp/>=<sp/>bitset&lt;numeric_limits&lt;ll&gt;::digits&gt;;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Comp&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>prio_queue_t<sp/>=<sp/>std::priority_queue&lt;T,<sp/>vector&lt;T&gt;,<sp/>Comp&gt;;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>let(clock_,<sp/>high_resolution_clock);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal">(this_thread);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>let(um,<sp/>unordered_map&lt;ll,<sp/>ll&gt;);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>REALGCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V<sp/>=<sp/>null_type&gt;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>order_stat_map<sp/>=</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree&lt;T,<sp/>V,<sp/>less&lt;&gt;,<sp/>rb_tree_tag,<sp/>tree_order_statistics_node_update&gt;;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>constexpr<sp/>inf<sp/>=<sp/><ref refid="structll" kindref="compound">ll</ref>(numeric_limits&lt;ll&gt;::max())<sp/>/<sp/>8;<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>delim<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">s;<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>constexpr<sp/>tau<sp/>=<sp/>2<sp/>*<sp/>3.1415926535897932384626433L;<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multitest;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&quot;io.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&quot;debug.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&quot;operations.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&quot;range.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#include<sp/>&quot;utility.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="docs/_build/html/_sources/api/program_listing_file_core.hpp.rst.txt"/>
  </compounddef>
</doxygen>
