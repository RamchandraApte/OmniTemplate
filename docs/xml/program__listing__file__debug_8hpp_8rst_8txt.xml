<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="program__listing__file__debug_8hpp_8rst_8txt" kind="file" language="C++">
    <compoundname>program_listing_file_debug.hpp.rst.txt</compoundname>
    <includes refid="operations_8hpp" local="yes">operations.hpp</includes>
    <includes refid="range_8hpp" local="yes">range.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>bits/stdc++.h</label>
      </node>
      <node id="8">
        <label>io.hpp</label>
        <link refid="io_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>experimental/source_location</label>
      </node>
      <node id="6">
        <label>experimental/iterator</label>
      </node>
      <node id="1">
        <label>docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt</label>
        <link refid="program__listing__file__debug_8hpp_8rst_8txt"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>utility.hpp</label>
        <link refid="utility_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>debug.hpp</label>
        <link refid="debug_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>range.hpp</label>
        <link refid="range_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>core.hpp</label>
        <link refid="core_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>operations.hpp</label>
        <link refid="operations_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="program__listing__file__debug_8hpp_8rst_8txt_1a8de3ed741dadc9c979a4ff17c0a9116e" prot="public" static="no">
        <name>NDEBUG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" line="20" column="16"/>
      </memberdef>
      <memberdef kind="define" id="program__listing__file__debug_8hpp_8rst_8txt_1a49bc164f30e64702250d2cbea09bf86c" prot="public" static="no">
        <name>dbg</name>
        <param><defname>x</defname></param>
        <initializer>(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" line="21" column="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="program__listing__file__debug_8hpp_8rst_8txt_1a2901a9ffc1a2a7e01546aa9107c67cba" prot="public" static="no" mutable="no">
        <type>_program_listing_file_debug</type>
        <definition>_program_listing_file_debug hpp</definition>
        <argsstring></argsstring>
        <name>hpp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" line="2" column="29" bodyfile="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__debug_8hpp_8rst_8txt_1aa556807e2fead3cffb869651bf29dbd3" prot="public" static="no" mutable="no">
        <type>_program_listing_file_debug</type>
        <definition>_program_listing_file_debug tar</definition>
        <argsstring></argsstring>
        <name>tar</name>
        <initializer>= &quot;T = &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" line="26" column="2" bodyfile="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__debug_8hpp_8rst_8txt_1a25635911eeb3c4e014d6a7dcaf4d054f" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto st</definition>
        <argsstring></argsstring>
        <name>st</name>
        <initializer>= s.find(tar) + tar.size()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" line="27" column="13" bodyfile="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="program__listing__file__debug_8hpp_8rst_8txt_1a43b9ff3e4bd66776708803ea8431e95f" prot="public" static="no" mutable="no">
        <type><ref refid="structll" kindref="compound">ll</ref></type>
        <definition>ll depth</definition>
        <argsstring></argsstring>
        <name>depth</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" line="45" column="7" bodyfile="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="program__listing__file__debug_8hpp_8rst_8txt_1a72ad1a8d830054814d7630aaaa1452fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>return s</type>
        <definition>return s substr</definition>
        <argsstring>(st, s.find(&quot;]&quot;, st) - st)</argsstring>
        <name>substr</name>
        <param>
          <type>st</type>
        </param>
        <param>
          <type>s.find(&quot;]&quot;, st) -</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" line="28" column="16" declfile="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" declline="28" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__debug_8hpp_8rst_8txt_1a92c8e980174e4094a7a8a3cf8343a02b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto replace</definition>
        <argsstring>(string s, const string &amp;a, const string &amp;b)</argsstring>
        <name>replace</name>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" line="30" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" bodystart="30" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__debug_8hpp_8rst_8txt_1aa310d6d6fd9f39ae8d81d5513865c0ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto simple_tp</definition>
        <argsstring>([[maybe_unused]] const T &amp;v)</argsstring>
        <name>simple_tp</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" line="38" column="21" bodyfile="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="program__listing__file__debug_8hpp_8rst_8txt_1ae380e8dcf60bf3dcb52ecf63b2e8d903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto debug</definition>
        <argsstring>(const T &amp;x, const string &amp;name, source_location const &amp;loc=source_location::current())</argsstring>
        <name>debug</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>source_location const &amp;</type>
          <declname>loc</declname>
          <defval>source_location::current()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" line="47" column="9" bodyfile="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt" bodystart="47" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal">..<sp/>_program_listing_file_debug.hpp:</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal">Program<sp/>Listing<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>File<sp/><ref refid="namespacedebug__tools_1a4190b5d045c8cfeb1e9a7332d55d9374" kindref="member">debug</ref>.hpp</highlight></codeline>
<codeline lineno="5"><highlight class="normal">==================================</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">|exhale_lsh|<sp/>:ref:`Return<sp/>to<sp/>documentation<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>file<sp/>&lt;file_debug.hpp&gt;`<sp/>(``<ref refid="namespacedebug__tools_1a4190b5d045c8cfeb1e9a7332d55d9374" kindref="member">debug</ref>.hpp``)</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">..<sp/>|exhale_lsh|<sp/>unicode::<sp/>U+021B0<sp/>..<sp/>UPWARDS<sp/>ARROW<sp/>WITH<sp/>TIP<sp/>LEFTWARDS</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">..<sp/>code-block::<sp/>cpp</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/>#pragma<sp/>once</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/>#include<sp/></highlight><highlight class="stringliteral">&quot;operations.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/>#include<sp/></highlight><highlight class="stringliteral">&quot;range.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enabling<sp/>LOCAL<sp/>enables<sp/>debug<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/>#ifdef<sp/>LOCAL</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/>#define<sp/>dbg(x)<sp/>(++debug_tools::depth,<sp/><ref refid="namespacedebug__tools_1a4190b5d045c8cfeb1e9a7332d55d9374" kindref="member">debug</ref>(x,<sp/>#x##s))</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/>#</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/>#define<sp/>NDEBUG</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/>#define<sp/>dbg(x)<sp/>(x)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">namespace</highlight><highlight class="normal"><sp/><ref refid="namespacedebug__tools" kindref="compound">debug_tools</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/>tm()<sp/>auto<sp/>type_name([[maybe_unused]]<sp/>T<sp/>const<sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>__PRETTY_FUNCTION__,<sp/>tar<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;T<sp/>=<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>st<sp/>=<sp/>s.find(tar)<sp/>+<sp/>tar.size();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.substr(st,<sp/>s.find(</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">,<sp/>st)<sp/>-<sp/>st);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacedebug__tools_1a2b613fd4caa0fb48d04eb7e6f3bf6dff" kindref="member">replace</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>This<sp/>is<sp/>multipass.<sp/>Should<sp/>this<sp/>be<sp/>singlepass?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>loc;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((loc<sp/>=<sp/>s.find(a))<sp/>!=<sp/>string::npos)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s.substr(0,<sp/>loc)<sp/>+<sp/>b<sp/>+<sp/>s.substr(loc<sp/>+<sp/>a.size());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacedebug__tools_1a3aa6fe2ec65b64f87ad431efde3822c7" kindref="member">simple_tp</ref>([[maybe_unused]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="namespacedebug__tools_1a991f9f01ab3a0e664fabf0bd17fab95c" kindref="member">type_name</ref>(v);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p<sp/>:<sp/>lets)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="namespacedebug__tools_1a2b613fd4caa0fb48d04eb7e6f3bf6dff" kindref="member">replace</ref>(s,<sp/>p.first,<sp/>p.second);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><ref refid="structll" kindref="compound">ll</ref><sp/>depth<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacedebug__tools_1a4190b5d045c8cfeb1e9a7332d55d9374" kindref="member">debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;name,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source_location<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;loc<sp/>=<sp/>source_location::current())<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug_mode)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fo(i,<sp/>depth)<sp/>{<sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>loc.function_name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>loc.line()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--depth;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>debug_tools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedebug__tools" kindref="compound">debug_tools</ref>;</highlight></codeline>
    </programlisting>
    <location file="docs/_build/html/_sources/api/program_listing_file_debug.hpp.rst.txt"/>
  </compounddef>
</doxygen>
