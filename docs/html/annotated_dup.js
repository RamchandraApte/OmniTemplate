var annotated_dup =
[
    [ "bigint", "namespacebigint.html", "namespacebigint" ],
    [ "combinatorics", "namespacecombinatorics.html", null ],
    [ "convex_hull_trick", "namespaceconvex__hull__trick.html", "namespaceconvex__hull__trick" ],
    [ "coroutine", "namespacecoroutine.html", null ],
    [ "dsu_ds", "namespacedsu__ds.html", "namespacedsu__ds" ],
    [ "flow", "namespaceflow.html", "namespaceflow" ],
    [ "graph_draw", "namespacegraph__draw.html", null ],
    [ "graph_theory", "namespacegraph__theory.html", "namespacegraph__theory" ],
    [ "hld", "namespacehld.html", "namespacehld" ],
    [ "linear_algebra", "namespacelinear__algebra.html", "namespacelinear__algebra" ],
    [ "link_cut", "namespacelink__cut.html", null ],
    [ "modulo_namespace", "namespacemodulo__namespace.html", "namespacemodulo__namespace" ],
    [ "permutation", "namespacepermutation.html", "namespacepermutation" ],
    [ "persistent", "namespacepersistent.html", "namespacepersistent" ],
    [ "polynomial_ns", "namespacepolynomial__ns.html", "namespacepolynomial__ns" ],
    [ "queue_tools", "namespacequeue__tools.html", "namespacequeue__tools" ],
    [ "sat2", "namespacesat2.html", null ],
    [ "segment_tree", "namespacesegment__tree.html", "namespacesegment__tree" ],
    [ "sparse_table", "namespacesparse__table.html", "namespacesparse__table" ],
    [ "splay_tree", "namespacesplay__tree.html", "namespacesplay__tree" ],
    [ "std", null, [
      [ "hash< ll >", "structstd_1_1hash_3_01ll_01_4.html", null ],
      [ "hash< modulo >", "structstd_1_1hash_3_01modulo_01_4.html", "structstd_1_1hash_3_01modulo_01_4" ],
      [ "is_integral< ll >", "structstd_1_1is__integral_3_01ll_01_4.html", null ],
      [ "is_signed< ll >", "structstd_1_1is__signed_3_01ll_01_4.html", null ],
      [ "is_unsigned< ll >", "structstd_1_1is__unsigned_3_01ll_01_4.html", null ],
      [ "numeric_limits< ll >", "structstd_1_1numeric__limits_3_01ll_01_4.html", null ]
    ] ],
    [ "string_tools", "namespacestring__tools.html", "namespacestring__tools" ],
    [ "time_tools", "namespacetime__tools.html", "namespacetime__tools" ],
    [ "tree", "namespacetree.html", "namespacetree" ],
    [ "utility", "namespaceutility.html", "namespaceutility" ],
    [ "BIT", "classBIT.html", "classBIT" ],
    [ "bytehash", "structstring__tools_1_1bytehash.html", "structstring__tools_1_1bytehash" ],
    [ "CHT", "structconvex__hull__trick_1_1CHT.html", "structconvex__hull__trick_1_1CHT" ],
    [ "dsu", "structdsu__ds_1_1dsu.html", "structdsu__ds_1_1dsu" ],
    [ "hash_str", "structstring__tools_1_1hash__str.html", "structstring__tools_1_1hash__str" ],
    [ "HLD", "classhld_1_1HLD.html", "classhld_1_1HLD" ],
    [ "int_it", "structint__it.html", "structint__it" ],
    [ "it_base", "structit__base.html", "structit__base" ],
    [ "lets_add", "structlets__add.html", "structlets__add" ],
    [ "ll", "structll.html", "structll" ],
    [ "matrix", "structlinear__algebra_1_1matrix.html", "structlinear__algebra_1_1matrix" ],
    [ "Max", "structMax.html", "structMax" ],
    [ "Min", "structMin.html", "structMin" ],
    [ "MinQueue", "classqueue__tools_1_1MinQueue.html", "classqueue__tools_1_1MinQueue" ],
    [ "MinStack", "classqueue__tools_1_1MinStack.html", "classqueue__tools_1_1MinStack" ],
    [ "QueueAdaptor", "classqueue__tools_1_1QueueAdaptor.html", "classqueue__tools_1_1QueueAdaptor" ],
    [ "range", "structrange.html", "structrange" ],
    [ "rin", "structrin.html", "structrin" ],
    [ "search_it", "structstring__tools_1_1search__it.html", "structstring__tools_1_1search__it" ],
    [ "SegmentTree", "classsegment__tree_1_1SegmentTree.html", "classsegment__tree_1_1SegmentTree" ],
    [ "set_multitest", "structset__multitest.html", "structset__multitest" ],
    [ "size_data", "structsize__data.html", "structsize__data" ],
    [ "Subgraph", "structSubgraph.html", "structSubgraph" ],
    [ "treap", "structtreap.html", "structtreap" ],
    [ "Trie", "structstring__tools_1_1Trie.html", "structstring__tools_1_1Trie" ]
];